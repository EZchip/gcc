cscope 15 /slowfs/nl20dwt2p001/cls/projects/workspace_1/arc/gcc/gcc/config/arc               0000459833
	@arc-opts.h

21 
	e¥o˚ss‹_ty≥


23 
	mPROCESSOR_NONE
,

24 
	mPROCESSOR_A5
,

25 
	mPROCESSOR_ARC600
,

26 
	mPROCESSOR_ARC601
,

27 
	mPROCESSOR_ARC700
,

28 
	mPROCESSOR_EM


	@arc-protos.h

20 #ifde‡
RTX_CODE


22 
machöe_mode
 
¨c_£À˘_cc_mode
 (
πx_code
, 
πx
,Ñtx);

25 
πx_def
 *
gí_com∑ª_ªg
 (
πx
, 
machöe_mode
);

28 
¨c_ouçut_fun˘i⁄_ïûogue
 (
FILE
 *, 
HOST_WIDE_INT
, );

29 c⁄° *
ouçut_shi·
 (
πx
 *);

30 
boﬁ
 
com∑˘_sda_mem‹y_›î™d
 (
πx
 
›
,
machöe_mode
 
mode
);

31 
boﬁ
 
¨c_doubÀ_limm_p
 (
πx
);

32 
¨c_¥öt_›î™d
 (
FILE
 *, 
πx
, );

33 
¨c_¥öt_›î™d_addªss
 (
FILE
 *, 
πx
);

34 
¨c_föÆ_¥esˇn_ö¢
 (
πx
,Ñtx *, );

35 
¨c_£t_deÁu…_ty≥_©åibuãs
(
åì
 
ty≥
);

36 c⁄° *
¨c_ouçut_libˇŒ
 (const *);

37 
boﬁ
 
¥ï¨e_exãnd_›î™ds
 (
πx
 *
›î™ds
, 
πx_code
 
code
,

38 
machöe_mode
 
omode
);

39 c⁄° *
¨c_ouçut_addsi
 (
πx
 *
›î™ds
, const *);

40 
boﬁ
 
¨c_ex∑nd_movmem
 (
πx
 *
›î™ds
);

41 
boﬁ
 
¥ï¨e_move_›î™ds
 (
πx
 *
›î™ds
, 
machöe_mode
 
mode
);

42 
emô_shi·
 (
πx_code
, 
πx
,Ñtx,Ñtx);

45 #ifde‡
TREE_CODE


46 
¨c_fun˘i⁄_ty≥
 
¨c_compuã_fun˘i⁄_ty≥
 (
fun˘i⁄
 *);

50 
¨c_öô
 ();

51 
¨c_compuã_‰ame_size
 ();

52 
boﬁ
 
¨c_ccfsm_bønch_dñëed_p
 ();

53 
¨c_ccfsm_ªc‹d_bønch_dñëed
 ();

55 
πx
 
¨c_Àgôimize_pic_addªss
 (rtx,Ñtx);

56 
¨c_asm_ouçut_Æig√d_de˛_loˇl
 (
FILE
 *, 
åì
, const *,

57 
HOST_WIDE_INT
,

58 
HOST_WIDE_INT
,

59 
HOST_WIDE_INT
);

60 
πx
 
¨c_ªtu∫_addr_πx
 (,Ñtx);

61 
boﬁ
 
check_if_vÆid_ªgno_c⁄°
 (
πx
 *, );

62 
boﬁ
 
check_if_vÆid_¶ìp_›î™d
 (
πx
 *, );

63 
boﬁ
 
¨c_Àgôim©e_c⁄°™t_p
 (
machöe_mode
, 
πx
);

64 
boﬁ
 
¨c_Àgôim©e_pc_off£t_p
 (
πx
);

65 
boﬁ
 
¨c_Àgôim©e_pic_addr_p
 (
πx
);

66 
emô_pic_move
 (
πx
 *, 
machöe_mode
);

67 
boﬁ
 
¨c_øw_symbﬁic_ª„ªn˚_míti⁄ed_p
 (
πx
, bool);

68 
boﬁ
 
¨c_Àgôim©e_pic_›î™d_p
 (
πx
);

69 
boﬁ
 
¨c_is_l⁄gˇŒ_p
 (
πx
);

70 
boﬁ
 
¨c_¥ofûe_ˇŒ
 (
πx
 
ˇŒì
);

71 
boﬁ
 
vÆid_brcc_wôh_dñay_p
 (
πx
 *);

72 
boﬁ
 
smÆl_d©a_∑âîn
 (
πx
 , 
machöe_mode
);

73 
πx
 
¨c_ªwrôe_smÆl_d©a
 (rtx);

74 
boﬁ
 
¨c_ccfsm_c⁄d_exec_p
 ();

75 
	g£c⁄d¨y_ªlﬂd_öfo
;

76 
¨c_ªgi°î_move_co°
 (
machöe_mode
, 
ªg_˛ass
,

77 
ªg_˛ass
);

78 
πx
 
disi_high∑π
 (rtx);

79 
¨c_adju°_ö¢_Àngth
 (
πx
, , 
boﬁ
);

80 
¨c_c‹îeg_haz¨d
 (
πx
,Ñtx);

81 
¨c_haz¨d
 (
πx
,Ñtx);

82 
¨c_wrôe_ext_c‹îeg
 (
πx
);

83 
πx
 
gí_acc1
 ();

84 
πx
 
gí_acc2
 ();

85 
πx
 
gí_mlo
 ();

86 
πx
 
gí_mhi
 ();

87 
boﬁ
 
¨c_bønch_size_unknown_p
 ();

88 
	g¨c_ccfsm
;

89 
¨c_ccfsm_ªc‹d_c⁄dôi⁄
 (
πx
, ,Ñtx, 
¨c_ccfsm
 *);

90 
¨c_ex∑nd_¥ﬁogue
 ();

91 
¨c_ex∑nd_ïûogue
 ();

92 
¨c_öô_ex∑ndîs
 ();

93 
¨c_check_mûlicode
 (
πx
 
›
, 
off£t
, 
lﬂd_p
);

94 
¨c_gë_u«lign
 ();

95 
¨c_˛ór_u«lign
 ();

96 
¨c_toggÀ_u«lign
 ();

97 
•lô_addsi
 (
πx
 *);

98 
•lô_subsi
 (
πx
 *);

99 
¨c_∑d_ªtu∫
 ();

100 
πx
 
¨c_•lô_move
 (rtx *);

101 
¨c_vîify_sh‹t
 (
πx
 
ö¢
, 
u«lign
, );

102 c⁄° *
¨c_sh‹t_l⁄g
 (
πx
 
ö¢
, const *, const *);

103 
πx
 
¨c_ªgno_u£_ö
 (,Ñtx);

104 
¨c_©å_ty≥
 (
πx
);

105 
boﬁ
 
¨c_schedulög_nŸ_ex≥˘ed
 ();

106 
boﬁ
 
¨c_£ts_cc_p
 (
πx
 
ö¢
);

107 
¨c_œbñ_Æign
 (
πx
 
œbñ
);

108 
boﬁ
 
¨c_√ed_dñay
 (
πx
 
ö¢
);

109 
boﬁ
 
¨c_ãxt_œbñ
 (
πx
);

110 
¨c_de˛_¥ëíd_¨gs
 (
åì
 
de˛
);

111 
boﬁ
 
¨c_sh‹t_com∑ris⁄_p
 (
πx
, );

112 
boﬁ
 
¨c_ïûogue_u£s
 (
ªgno
);

114 
ªgno_˛obbîed_p
 (, 
πx
, 
machöe_mode
, );

	@arc-simd.h

29 #i‚de‡
_ARC_SIMD_H


30 
	#_ARC_SIMD_H
 1

	)

32 #i‚de‡
__ARC_SIMD__


33 #îr‹ 
U£
 
the
 "-msimd" 
Êag
 
to
 
íabÀ
 
ARC
 
SIMD
 
suµ‹t


37 
	#_IREG_I0
 0

	)

38 
	#_IREG_I1
 1

	)

39 
	#_IREG_I2
 2

	)

40 
	#_IREG_I3
 3

	)

41 
	#_IREG_I4
 4

	)

42 
	#_IREG_I5
 5

	)

43 
	#_IREG_I6
 6

	)

44 
	#_IREG_I7
 7

	)

47 
	#_DMA_REG_DR0
 0

	)

48 
	#_DMA_SDM_SRC_ADR_REG
 
_DMA_REG_DR0


	)

49 
	#_DMA_SDM_DEST_ADR_REG
 
_DMA_REG_DR0


	)

51 
	#_DMA_REG_DR1
 1

	)

52 
	#_DMA_SDM_STRIDE_REG
 
_DMA_REG_DR1


	)

54 
	#_DMA_REG_DR2
 2

	)

55 
	#_DMA_BLK_REG
 
_DMA_REG_DR2


	)

57 
	#_DMA_REG_DR3
 3

	)

58 
	#_DMA_LOC_REG
 
_DMA_REG_DR3


	)

60 
	#_DMA_REG_DR4
 4

	)

61 
	#_DMA_SYS_SRC_ADR_REG
 
_DMA_REG_DR4


	)

62 
	#_DMA_SYS_DEST_ADR_REG
 
_DMA_REG_DR4


	)

64 
	#_DMA_REG_DR5
 5

	)

65 
	#_DMA_SYS_STRIDE_REG
 
_DMA_REG_DR5


	)

67 
	#_DMA_REG_DR6
 6

	)

68 
	#_DMA_CFG_REG
 
_DMA_REG_DR6


	)

70 
	#_DMA_REG_DR7
 7

	)

71 
	#_DMA_FT_BASE_ADR_REG
 
_DMA_REG_DR7


	)

74 
	t__v4si
 
	t__©åibuã__
((
	tve˘‹_size
(16)));

75 
	t__v8hi
 
	t__©åibuã__
((
	tve˘‹_size
(16)));

78 
	#_vaddaw
 
__buûtö_¨c_vaddaw


	)

79 
	#_vaddw
 
__buûtö_¨c_vaddw


	)

80 
	#_vavb
 
__buûtö_¨c_vavb


	)

81 
	#_vavrb
 
__buûtö_¨c_vavrb


	)

82 
	#_vdiÁw
 
__buûtö_¨c_vdiÁw


	)

83 
	#_vdifw
 
__buûtö_¨c_vdifw


	)

84 
	#_vmaxaw
 
__buûtö_¨c_vmaxaw


	)

85 
	#_vmaxw
 
__buûtö_¨c_vmaxw


	)

86 
	#_vmöaw
 
__buûtö_¨c_vmöaw


	)

87 
	#_vmöw
 
__buûtö_¨c_vmöw


	)

88 
	#_vmuœw
 
__buûtö_¨c_vmuœw


	)

89 
	#_vmulÁw
 
__buûtö_¨c_vmulÁw


	)

90 
	#_vmulfw
 
__buûtö_¨c_vmulfw


	)

91 
	#_vmulw
 
__buûtö_¨c_vmulw


	)

92 
	#_vsubaw
 
__buûtö_¨c_vsubaw


	)

93 
	#_vsubw
 
__buûtö_¨c_vsubw


	)

94 
	#_vsummw
 
__buûtö_¨c_vsummw


	)

95 
	#_v™d
 
__buûtö_¨c_v™d


	)

96 
	#_v™daw
 
__buûtö_¨c_v™daw


	)

97 
	#_vbic
 
__buûtö_¨c_vbic


	)

98 
	#_vbiˇw
 
__buûtö_¨c_vbiˇw


	)

99 
	#_v‹
 
__buûtö_¨c_v‹


	)

100 
	#_vx‹
 
__buûtö_¨c_vx‹


	)

101 
	#_vx‹aw
 
__buûtö_¨c_vx‹aw


	)

102 
	#_veqw
 
__buûtö_¨c_veqw


	)

103 
	#_vÀw
 
__buûtö_¨c_vÀw


	)

104 
	#_v…w
 
__buûtö_¨c_v…w


	)

105 
	#_v√w
 
__buûtö_¨c_v√w


	)

106 
	#_vmr1aw
 
__buûtö_¨c_vmr1aw


	)

107 
	#_vmr1w
 
__buûtö_¨c_vmr1w


	)

108 
	#_vmr2aw
 
__buûtö_¨c_vmr2aw


	)

109 
	#_vmr2w
 
__buûtö_¨c_vmr2w


	)

110 
	#_vmr3aw
 
__buûtö_¨c_vmr3aw


	)

111 
	#_vmr3w
 
__buûtö_¨c_vmr3w


	)

112 
	#_vmr4aw
 
__buûtö_¨c_vmr4aw


	)

113 
	#_vmr4w
 
__buûtö_¨c_vmr4w


	)

114 
	#_vmr5aw
 
__buûtö_¨c_vmr5aw


	)

115 
	#_vmr5w
 
__buûtö_¨c_vmr5w


	)

116 
	#_vmr6aw
 
__buûtö_¨c_vmr6aw


	)

117 
	#_vmr6w
 
__buûtö_¨c_vmr6w


	)

118 
	#_vmr7aw
 
__buûtö_¨c_vmr7aw


	)

119 
	#_vmr7w
 
__buûtö_¨c_vmr7w


	)

120 
	#_vmrb
 
__buûtö_¨c_vmrb


	)

121 
	#_vh264f
 
__buûtö_¨c_vh264f


	)

122 
	#_vh264·
 
__buûtö_¨c_vh264·


	)

123 
	#_vh264fw
 
__buûtö_¨c_vh264fw


	)

124 
	#_vvc1f
 
__buûtö_¨c_vvc1f


	)

125 
	#_vvc1·
 
__buûtö_¨c_vvc1·


	)

126 
	#_vbaddw
 
__buûtö_¨c_vbaddw


	)

127 
	#_vbmaxw
 
__buûtö_¨c_vbmaxw


	)

128 
	#_vbmöw
 
__buûtö_¨c_vbmöw


	)

129 
	#_vbmuœw
 
__buûtö_¨c_vbmuœw


	)

130 
	#_vbmulfw
 
__buûtö_¨c_vbmulfw


	)

131 
	#_vbmulw
 
__buûtö_¨c_vbmulw


	)

132 
	#_vbrsubw
 
__buûtö_¨c_vbrsubw


	)

133 
	#_vbsubw
 
__buûtö_¨c_vbsubw


	)

134 
	#_va§w
 
__buûtö_¨c_va§w


	)

135 
	#_v§8
 
__buûtö_¨c_v§8


	)

136 
	#_v§8aw
 
__buûtö_¨c_v§8aw


	)

137 
	#_va§rwi
 
__buûtö_¨c_va§rwi


	)

138 
	#_va§§wi
 
__buûtö_¨c_va§§wi


	)

139 
	#_va§wi
 
__buûtö_¨c_va§wi


	)

140 
	#_va§pwbi
 
__buûtö_¨c_va§pwbi


	)

141 
	#_va§Ωwbi
 
__buûtö_¨c_va§Ωwbi


	)

142 
	#_v§8awi
 
__buûtö_¨c_v§8awi


	)

143 
	#_v§8i
 
__buûtö_¨c_v§8i


	)

144 
	#_vmvaw
 
__buûtö_¨c_vmvaw


	)

145 
	#_vmvw
 
__buûtö_¨c_vmvw


	)

146 
	#_vmvzw
 
__buûtö_¨c_vmvzw


	)

147 
	#_vd6èpf
 
__buûtö_¨c_vd6èpf


	)

148 
	#_vmovaw
 
__buûtö_¨c_vmovaw


	)

149 
	#_vmovw
 
__buûtö_¨c_vmovw


	)

150 
	#_vmovzw
 
__buûtö_¨c_vmovzw


	)

151 
	#_vabßw
 
__buûtö_¨c_vabßw


	)

152 
	#_vabsw
 
__buûtö_¨c_vabsw


	)

153 
	#_vaddsuw
 
__buûtö_¨c_vaddsuw


	)

154 
	#_vsignw
 
__buûtö_¨c_vsignw


	)

155 
	#_vexch1
 
__buûtö_¨c_vexch1


	)

156 
	#_vexch2
 
__buûtö_¨c_vexch2


	)

157 
	#_vexch4
 
__buûtö_¨c_vexch4


	)

158 
	#_vupbaw
 
__buûtö_¨c_vupbaw


	)

159 
	#_vupbw
 
__buûtö_¨c_vupbw


	)

160 
	#_vupsbaw
 
__buûtö_¨c_vupsbaw


	)

161 
	#_vupsbw
 
__buûtö_¨c_vupsbw


	)

162 
	#_vdúun
 
__buûtö_¨c_vdúun


	)

163 
	#_vd‹un
 
__buûtö_¨c_vd‹un


	)

164 
	#_vdiwr
 
__buûtö_¨c_vdiwr


	)

165 
	#_vdowr
 
__buûtö_¨c_vdowr


	)

166 
	#_vªc
 
__buûtö_¨c_vªc


	)

167 
	#_vrun
 
__buûtö_¨c_vrun


	)

168 
	#_vª¸un
 
__buûtö_¨c_vª¸un


	)

169 
	#_vídªc
 
__buûtö_¨c_vídªc


	)

170 
	#_vld32wh
 
__buûtö_¨c_vld32wh


	)

171 
	#_vld32wl
 
__buûtö_¨c_vld32wl


	)

172 
	#_vld64
 
__buûtö_¨c_vld64


	)

173 
	#_vld32
 
__buûtö_¨c_vld32


	)

174 
	#_vld64w
 
__buûtö_¨c_vld64w


	)

175 
	#_vld128
 
__buûtö_¨c_vld128


	)

176 
	#_v°128
 
__buûtö_¨c_v°128


	)

177 
	#_v°64
 
__buûtö_¨c_v°64


	)

178 
	#_v°16_n
 
__buûtö_¨c_v°16_n


	)

179 
	#_v°32_n
 
__buûtö_¨c_v°32_n


	)

180 
	#_vöti
 
__buûtö_¨c_vöti


	)

183 
	#_£tup_dma_ö_ch™√l_ªg
 
_vdiwr


	)

184 
	#_£tup_dma_out_ch™√l_ªg
 
_vdowr


	)

	@arc.c

32 
	~"c⁄fig.h
"

33 
	~<°dio.h
>

34 
	~"sy°em.h
"

35 
	~"c‹ëy≥s.h
"

36 
	~"tm.h
"

37 
	~"åì.h
"

38 
	~"πl.h
"

39 
	~"ªgs.h
"

40 
	~"h¨d-ªg-£t.h
"

41 
	~"ªÆ.h
"

42 
	~"ö¢-c⁄fig.h
"

43 
	~"c⁄dôi⁄s.h
"

44 
	~"ö¢-Êags.h
"

45 
	~"fun˘i⁄.h
"

46 
	~"t›Àv.h
"

47 
	~"ggc.h
"

48 
	~"tm_p.h
"

49 
	~"èrgë.h
"

50 
	~"ouçut.h
"

51 
	~"ö¢-©å.h
"

52 
	~"Êags.h
"

53 
	~"ex¥.h
"

54 
	~"ªcog.h
"

55 
	~"debug.h
"

56 
	~"dügno°ic.h
"

57 
	~"ö¢-codes.h
"

58 
	~"œnghooks.h
"

59 
	~"›èbs.h
"

60 
	~"tm-c⁄°rs.h
"

61 
	~"ªlﬂd.h
"

62 
	~"df.h
"

63 
	~"åì-∑ss.h
"

66 c⁄° *
	g¨c_˝u_°rög
 = "";

70 
	#RTX_OK_FOR_OFFSET_P
(
MODE
, 
X
) \

71 (
	`GET_CODE
 (
X
Ë=
CONST_INT
 \

72 && 
	`SMALL_INT_RANGE
 (
	`INTVAL
 (
X
), (
	`GET_MODE_SIZE
 (
MODE
) - 1) & -4, \

73 (
	`INTVAL
 (
X
Ë& (
	`GET_MODE_SIZE
 (
MODE
) - 1) & 3 \

75 : -(-
	`GET_MODE_SIZE
 (
MODE
Ë| -4Ë>> 1)))

	)

77 
	#LEGITIMATE_OFFSET_ADDRESS_P
(
MODE
, 
X
, 
INDEX
, 
STRICT
) \

78 (
	`GET_CODE
 (
X
Ë=
PLUS
 \

79 && 
	`RTX_OK_FOR_BASE_P
 (
	`XEXP
 (
X
, 0), (
STRICT
)) \

80 && ((
INDEX
 && 
	`RTX_OK_FOR_INDEX_P
 (
	`XEXP
 (
X
, 1), (
STRICT
)) \

81 && 
	`GET_MODE_SIZE
 ((
MODE
)) <= 4) \

82 || 
	`RTX_OK_FOR_OFFSET_P
 (
MODE
, 
	`XEXP
 (
X
, 1))))

	)

84 
	#LEGITIMATE_SCALED_ADDRESS_P
(
MODE
, 
X
, 
STRICT
) \

85 (
	`GET_CODE
 (
X
Ë=
PLUS
 \

86 && 
	`GET_CODE
 (
	`XEXP
 (
X
, 0)Ë=
MULT
 \

87 && 
	`RTX_OK_FOR_INDEX_P
 (
	`XEXP
 (XEXP (
X
, 0), 0), (
STRICT
)) \

88 && 
	`GET_CODE
 (
	`XEXP
 (XEXP (
X
, 0), 1)Ë=
CONST_INT
 \

89 && ((
	`GET_MODE_SIZE
 (
MODE
Ë=2 && 
	`INTVAL
 (
	`XEXP
 (XEXP (
X
, 0), 1)) == 2) \

90 || (
	`GET_MODE_SIZE
 (
MODE
Ë=4 && 
	`INTVAL
 (
	`XEXP
 (XEXP (
X
, 0), 1)) == 4)) \

91 && (
	`RTX_OK_FOR_BASE_P
 (
	`XEXP
 (
X
, 1), (
STRICT
)) \

92 || (
Êag_pic
 ? 
	`CONST_INT_P
 (
	`XEXP
 (
X
, 1)Ë: 
	`CONSTANT_P
 (XEXP (X, 1)))))

	)

94 
	#LEGITIMATE_SMALL_DATA_ADDRESS_P
(
X
) \

95 (
	`GET_CODE
 (
X
Ë=
PLUS
 \

96 && (
	`REG_P
 (
	`XEXP
(
X
,0)Ë&& 
	`REGNO
 (XEXP (X,0)) == 26) \

97 && ((
	`GET_CODE
 (
	`XEXP
(
X
,1)Ë=
SYMBOL_REF
 \

98 && 
	`SYMBOL_REF_SMALL_P
 (
	`XEXP
 (
X
,1))) ||\

99 (
	`GET_CODE
 (
	`XEXP
 (
X
,1)Ë=
CONST
 && \

100 
	`GET_CODE
 (
	`XEXP
(XEXP(
X
,1),0)Ë=
PLUS
 && \

101 
	`GET_CODE
 (
	`XEXP
(XEXP(XEXP(
X
,1),0),0)Ë=
SYMBOL_REF
 \

102 && 
	`SYMBOL_REF_SMALL_P
 (
	`XEXP
(XEXP (XEXP(
X
,1),0),0)) \

103 && 
	`GET_CODE
 (
	`XEXP
(XEXP (XEXP(
X
,1),0), 1)Ë=
CONST_INT
)))

	)

106 
	g¨c_pun˘_ch¨s
[256];

109 
GTY
 (()Ë
	g¨c_ccfsm


111 
	g°©e
;

112 
	gcc
;

113 
πx
 
	gc⁄d
;

114 
πx
 
	gèrgë_ö¢
;

115 
	gèrgë_œbñ
;

118 
	#¨c_ccfsm_cuºít
 
cfun
->
machöe
->
ccfsm_cuºít


	)

120 
	#ARC_CCFSM_BRANCH_DELETED_P
(
STATE
) \

121 ((
STATE
)->
°©e
 =1 || (STATE)->°©ê=2)

	)

124 
	#ARC_CCFSM_RECORD_BRANCH_DELETED
(
STATE
) \

125 ((
STATE
)->
°©e
 +2)

	)

127 
	#ARC_CCFSM_COND_EXEC_P
(
STATE
) \

128 ((
STATE
)->
°©e
 == 3 || (STATE)->state == 4 || (STATE)->state == 5 \

129 || 
cuºít_ö¢_¥ediˇã
)

	)

132 
	#CCFSM_ISCOMPACT
(
INSN
,
STATE
) \

133 (
	`ARC_CCFSM_COND_EXEC_P
 (
STATE
) \

134 ? (
	`gë_©å_iscom∑˘
 (
INSN
Ë=
ISCOMPACT_TRUE
 \

135 || 
	`gë_©å_iscom∑˘
 (
INSN
Ë=
ISCOMPACT_TRUE_LIMM
) \

136 : 
	`gë_©å_iscom∑˘
 (
INSN
Ë!
ISCOMPACT_FALSE
)

	)

139 
	#CCFSM_DBR_ISCOMPACT
(
INSN
,
JUMP
,
STATE
) \

140 ((
	`ARC_CCFSM_COND_EXEC_P
 (
STATE
) \

141 || (
	`JUMP_P
 (
JUMP
) \

142 && 
	`INSN_ANNULLED_BRANCH_P
 (
JUMP
) \

143 && (
TARGET_AT_DBR_CONDEXEC
 || 
	`INSN_FROM_TARGET_P
 (
INSN
)))) \

144 ? (
	`gë_©å_iscom∑˘
 (
INSN
Ë=
ISCOMPACT_TRUE
 \

145 || 
	`gë_©å_iscom∑˘
 (
INSN
Ë=
ISCOMPACT_TRUE_LIMM
) \

146 : 
	`gë_©å_iscom∑˘
 (
INSN
Ë!
ISCOMPACT_FALSE
)

	)

175 
	#MAX_INSNS_SKIPPED
 3

	)

179 
	mARC_UNSPEC_PLT
 = 3,

180 
	mARC_UNSPEC_GOT
,

181 
	mARC_UNSPEC_GOTOFF


185 
	e¨c_buûtös
 {

186 
	mARC_BUILTIN_NOP
 = 2,

187 
	mARC_BUILTIN_NORM
 = 3,

188 
	mARC_BUILTIN_NORMW
 = 4,

189 
	mARC_BUILTIN_SWAP
 = 5,

190 
	mARC_BUILTIN_BRK
 = 6,

191 
	mARC_BUILTIN_DIVAW
 = 7,

192 
	mARC_BUILTIN_EX
 = 8,

193 
	mARC_BUILTIN_MUL64
 = 9,

194 
	mARC_BUILTIN_MULU64
 = 10,

195 
	mARC_BUILTIN_RTIE
 = 11,

196 
	mARC_BUILTIN_SYNC
 = 12,

197 
	mARC_BUILTIN_CORE_READ
 = 13,

198 
	mARC_BUILTIN_CORE_WRITE
 = 14,

199 
	mARC_BUILTIN_FLAG
 = 15,

200 
	mARC_BUILTIN_LR
 = 16,

201 
	mARC_BUILTIN_SR
 = 17,

202 
	mARC_BUILTIN_SLEEP
 = 18,

203 
	mARC_BUILTIN_SWI
 = 19,

204 
	mARC_BUILTIN_TRAP_S
 = 20,

205 
	mARC_BUILTIN_UNIMP_S
 = 21,

206 
	mARC_BUILTIN_ALIGNED
 = 22,

209 
	mARC_SIMD_BUILTIN_BEGIN
 = 1000,

211 
	mARC_SIMD_BUILTIN_VADDAW
 = 1001,

212 
	mARC_SIMD_BUILTIN_VADDW
 = 1002,

213 
	mARC_SIMD_BUILTIN_VAVB
 = 1003,

214 
	mARC_SIMD_BUILTIN_VAVRB
 = 1004,

215 
	mARC_SIMD_BUILTIN_VDIFAW
 = 1005,

216 
	mARC_SIMD_BUILTIN_VDIFW
 = 1006,

217 
	mARC_SIMD_BUILTIN_VMAXAW
 = 1007,

218 
	mARC_SIMD_BUILTIN_VMAXW
 = 1008,

219 
	mARC_SIMD_BUILTIN_VMINAW
 = 1009,

220 
	mARC_SIMD_BUILTIN_VMINW
 = 1010,

221 
	mARC_SIMD_BUILTIN_VMULAW
 = 1011,

222 
	mARC_SIMD_BUILTIN_VMULFAW
 = 1012,

223 
	mARC_SIMD_BUILTIN_VMULFW
 = 1013,

224 
	mARC_SIMD_BUILTIN_VMULW
 = 1014,

225 
	mARC_SIMD_BUILTIN_VSUBAW
 = 1015,

226 
	mARC_SIMD_BUILTIN_VSUBW
 = 1016,

227 
	mARC_SIMD_BUILTIN_VSUMMW
 = 1017,

228 
	mARC_SIMD_BUILTIN_VAND
 = 1018,

229 
	mARC_SIMD_BUILTIN_VANDAW
 = 1019,

230 
	mARC_SIMD_BUILTIN_VBIC
 = 1020,

231 
	mARC_SIMD_BUILTIN_VBICAW
 = 1021,

232 
	mARC_SIMD_BUILTIN_VOR
 = 1022,

233 
	mARC_SIMD_BUILTIN_VXOR
 = 1023,

234 
	mARC_SIMD_BUILTIN_VXORAW
 = 1024,

235 
	mARC_SIMD_BUILTIN_VEQW
 = 1025,

236 
	mARC_SIMD_BUILTIN_VLEW
 = 1026,

237 
	mARC_SIMD_BUILTIN_VLTW
 = 1027,

238 
	mARC_SIMD_BUILTIN_VNEW
 = 1028,

239 
	mARC_SIMD_BUILTIN_VMR1AW
 = 1029,

240 
	mARC_SIMD_BUILTIN_VMR1W
 = 1030,

241 
	mARC_SIMD_BUILTIN_VMR2AW
 = 1031,

242 
	mARC_SIMD_BUILTIN_VMR2W
 = 1032,

243 
	mARC_SIMD_BUILTIN_VMR3AW
 = 1033,

244 
	mARC_SIMD_BUILTIN_VMR3W
 = 1034,

245 
	mARC_SIMD_BUILTIN_VMR4AW
 = 1035,

246 
	mARC_SIMD_BUILTIN_VMR4W
 = 1036,

247 
	mARC_SIMD_BUILTIN_VMR5AW
 = 1037,

248 
	mARC_SIMD_BUILTIN_VMR5W
 = 1038,

249 
	mARC_SIMD_BUILTIN_VMR6AW
 = 1039,

250 
	mARC_SIMD_BUILTIN_VMR6W
 = 1040,

251 
	mARC_SIMD_BUILTIN_VMR7AW
 = 1041,

252 
	mARC_SIMD_BUILTIN_VMR7W
 = 1042,

253 
	mARC_SIMD_BUILTIN_VMRB
 = 1043,

254 
	mARC_SIMD_BUILTIN_VH264F
 = 1044,

255 
	mARC_SIMD_BUILTIN_VH264FT
 = 1045,

256 
	mARC_SIMD_BUILTIN_VH264FW
 = 1046,

257 
	mARC_SIMD_BUILTIN_VVC1F
 = 1047,

258 
	mARC_SIMD_BUILTIN_VVC1FT
 = 1048,

261 
	mARC_SIMD_BUILTIN_VBADDW
 = 1050,

262 
	mARC_SIMD_BUILTIN_VBMAXW
 = 1051,

263 
	mARC_SIMD_BUILTIN_VBMINW
 = 1052,

264 
	mARC_SIMD_BUILTIN_VBMULAW
 = 1053,

265 
	mARC_SIMD_BUILTIN_VBMULFW
 = 1054,

266 
	mARC_SIMD_BUILTIN_VBMULW
 = 1055,

267 
	mARC_SIMD_BUILTIN_VBRSUBW
 = 1056,

268 
	mARC_SIMD_BUILTIN_VBSUBW
 = 1057,

271 
	mARC_SIMD_BUILTIN_VASRW
 = 1060,

272 
	mARC_SIMD_BUILTIN_VSR8
 = 1061,

273 
	mARC_SIMD_BUILTIN_VSR8AW
 = 1062,

276 
	mARC_SIMD_BUILTIN_VASRRWi
 = 1065,

277 
	mARC_SIMD_BUILTIN_VASRSRWi
 = 1066,

278 
	mARC_SIMD_BUILTIN_VASRWi
 = 1067,

279 
	mARC_SIMD_BUILTIN_VASRPWBi
 = 1068,

280 
	mARC_SIMD_BUILTIN_VASRRPWBi
 = 1069,

281 
	mARC_SIMD_BUILTIN_VSR8AWi
 = 1070,

282 
	mARC_SIMD_BUILTIN_VSR8i
 = 1071,

285 
	mARC_SIMD_BUILTIN_VMVAW
 = 1075,

286 
	mARC_SIMD_BUILTIN_VMVW
 = 1076,

287 
	mARC_SIMD_BUILTIN_VMVZW
 = 1077,

288 
	mARC_SIMD_BUILTIN_VD6TAPF
 = 1078,

291 
	mARC_SIMD_BUILTIN_VMOVAW
 = 1080,

292 
	mARC_SIMD_BUILTIN_VMOVW
 = 1081,

293 
	mARC_SIMD_BUILTIN_VMOVZW
 = 1082,

296 
	mARC_SIMD_BUILTIN_VABSAW
 = 1085,

297 
	mARC_SIMD_BUILTIN_VABSW
 = 1086,

298 
	mARC_SIMD_BUILTIN_VADDSUW
 = 1087,

299 
	mARC_SIMD_BUILTIN_VSIGNW
 = 1088,

300 
	mARC_SIMD_BUILTIN_VEXCH1
 = 1089,

301 
	mARC_SIMD_BUILTIN_VEXCH2
 = 1090,

302 
	mARC_SIMD_BUILTIN_VEXCH4
 = 1091,

303 
	mARC_SIMD_BUILTIN_VUPBAW
 = 1092,

304 
	mARC_SIMD_BUILTIN_VUPBW
 = 1093,

305 
	mARC_SIMD_BUILTIN_VUPSBAW
 = 1094,

306 
	mARC_SIMD_BUILTIN_VUPSBW
 = 1095,

308 
	mARC_SIMD_BUILTIN_VDIRUN
 = 1100,

309 
	mARC_SIMD_BUILTIN_VDORUN
 = 1101,

310 
	mARC_SIMD_BUILTIN_VDIWR
 = 1102,

311 
	mARC_SIMD_BUILTIN_VDOWR
 = 1103,

313 
	mARC_SIMD_BUILTIN_VREC
 = 1105,

314 
	mARC_SIMD_BUILTIN_VRUN
 = 1106,

315 
	mARC_SIMD_BUILTIN_VRECRUN
 = 1107,

316 
	mARC_SIMD_BUILTIN_VENDREC
 = 1108,

318 
	mARC_SIMD_BUILTIN_VLD32WH
 = 1110,

319 
	mARC_SIMD_BUILTIN_VLD32WL
 = 1111,

320 
	mARC_SIMD_BUILTIN_VLD64
 = 1112,

321 
	mARC_SIMD_BUILTIN_VLD32
 = 1113,

322 
	mARC_SIMD_BUILTIN_VLD64W
 = 1114,

323 
	mARC_SIMD_BUILTIN_VLD128
 = 1115,

324 
	mARC_SIMD_BUILTIN_VST128
 = 1116,

325 
	mARC_SIMD_BUILTIN_VST64
 = 1117,

327 
	mARC_SIMD_BUILTIN_VST16_N
 = 1120,

328 
	mARC_SIMD_BUILTIN_VST32_N
 = 1121,

330 
	mARC_SIMD_BUILTIN_VINTI
 = 1201,

332 
	mARC_SIMD_BUILTIN_END


340 
gë_¨c_c⁄dôi⁄_code
 (
πx
);

342 
åì
 
¨c_h™dÀ_öãºu±_©åibuã
 (åì *,Åªe,Åªe, , 
boﬁ
 *);

346 c⁄° 
©åibuã_•ec
 
	g¨c_©åibuã_èbÀ
[] =

350 { "öãºu±", 1, 1, 
åue
, 
Ál£
, fÆ£, 
¨c_h™dÀ_öãºu±_©åibuã
,Årue },

354 { "l⁄g_ˇŒ", 0, 0, 
Ál£
, 
åue
,Årue, 
NULL
, false },

357 { "sh‹t_ˇŒ", 0, 0, 
Ál£
, 
åue
,Årue, 
NULL
, false },

358 { 
NULL
, 0, 0, 
Ál£
, false, false, NULL, false }

360 
¨c_comp_ty≥_©åibuãs
 (
c⁄°_åì
, const_tree);

361 
¨c_fûe_°¨t
 ();

362 
¨c_öã∫Æ_œbñ
 (
FILE
 *, const *, );

363 
¨c_ouçut_mi_thunk
 (
FILE
 *, 
åì
, 
HOST_WIDE_INT
, HOST_WIDE_INT,

364 
åì
);

365 
¨c_addªss_co°
 (
πx
, 
machöe_mode
, 
addr_•a˚_t
, 
boﬁ
);

366 
¨c_ícode_£˘i⁄_öfo
 (
åì
 
de˛
, 
πx
 
πl
, 
fú°
);

368 
¨c_öô_buûtös
 ();

369 
πx
 
¨c_ex∑nd_buûtö
 (
åì
,Ñtx,Ñtx, 
machöe_mode
, );

371 
bønch_de°
 (
πx
);

373 
¨c_ouçut_pic_addr_c⁄°
 (
FILE
 *, 
πx
, );

374 
emô_pic_move
 (
πx
 *, 
machöe_mode
);

375 
boﬁ
 
¨c_Àgôim©e_pic_›î™d_p
 (
πx
);

376 
boﬁ
 
¨c_fun˘i⁄_ok_f‹_sibˇŒ
 (
åì
,Åree);

377 
πx
 
¨c_fun˘i⁄_vÆue
 (
c⁄°_åì
, c⁄°_åì, 
boﬁ
);

378 c⁄° * 
ouçut_shi·
 (
πx
 *);

379 
¨c_ª‹g
 ();

380 
boﬁ
 
¨c_ö_smÆl_d©a_p
 (
c⁄°_åì
);

382 
¨c_öô_ªg_èbÀs
 ();

383 
boﬁ
 
¨c_ªtu∫_ö_mem‹y
 (
c⁄°_åì
, const_tree);

384 
¨c_öô_simd_buûtös
 ();

385 
boﬁ
 
¨c_ve˘‹_mode_suµ‹ãd_p
 (
machöe_mode
);

387 c⁄° *
¨c_övÆid_wôhö_dﬁo›
 (
c⁄°_πx
);

389 
ouçut_sh‹t_suffix
 (
FILE
 *
fûe
);

391 
boﬁ
 
¨c_‰ame_poöãr_ªquúed
 ();

395 
boﬁ


396 
	$¨c_ve˘‹_mode_suµ‹ãd_p
 (
machöe_mode
 
mode
)

398 i‡(!
TARGET_SIMD_SET
)

399  
Ál£
;

401 i‡((
mode
 =
V4SImode
)

402 || (
mode
 =
V8HImode
))

403  
åue
;

405  
Ál£
;

406 
	}
}

410 
boﬁ
 
	$¨c_¥e£rve_ªlﬂd_p
 (
πx
 
ö
Ë
ATTRIBUTE_UNUSED
;

411 
πx
 
	`¨c_dñegôimize_addªss
 (rtx);

412 
boﬁ
 
	`¨c_ˇn_fﬁlow_jump
 (
c⁄°_πx
 
fﬁlowî
, c⁄°_πx 
fﬁlowì
);

414 
πx
 
	`‰ame_ö¢
 (rtx);

415 
	`¨c_fun˘i⁄_¨g_adv™˚
 (
cumuœtive_¨gs_t
, 
machöe_mode
,

416 
c⁄°_åì
, 
boﬁ
);

417 
πx
 
	`¨c_Àgôimize_addªss_0
 (πx,Ñtx, 
machöe_mode
 
mode
);

419 
	`¨c_föÆize_pic
 ();

422 #unde‡
TARGET_COMP_TYPE_ATTRIBUTES


423 
	#TARGET_COMP_TYPE_ATTRIBUTES
 
¨c_comp_ty≥_©åibuãs


	)

424 #unde‡
TARGET_ASM_FILE_START


425 
	#TARGET_ASM_FILE_START
 
¨c_fûe_°¨t


	)

426 #unde‡
TARGET_ATTRIBUTE_TABLE


427 
	#TARGET_ATTRIBUTE_TABLE
 
¨c_©åibuã_èbÀ


	)

428 #unde‡
TARGET_ASM_INTERNAL_LABEL


429 
	#TARGET_ASM_INTERNAL_LABEL
 
¨c_öã∫Æ_œbñ


	)

430 #unde‡
TARGET_RTX_COSTS


431 
	#TARGET_RTX_COSTS
 
¨c_πx_co°s


	)

432 #unde‡
TARGET_ADDRESS_COST


433 
	#TARGET_ADDRESS_COST
 
¨c_addªss_co°


	)

435 #unde‡
TARGET_ENCODE_SECTION_INFO


436 
	#TARGET_ENCODE_SECTION_INFO
 
¨c_ícode_£˘i⁄_öfo


	)

438 #unde‡
TARGET_CANNOT_FORCE_CONST_MEM


439 
	#TARGET_CANNOT_FORCE_CONST_MEM
 
¨c_ˇ¬Ÿ_f‹˚_c⁄°_mem


	)

441 #unde‡
TARGET_INIT_BUILTINS


442 
	#TARGET_INIT_BUILTINS
 
¨c_öô_buûtös


	)

444 #unde‡
TARGET_EXPAND_BUILTIN


445 
	#TARGET_EXPAND_BUILTIN
 
¨c_ex∑nd_buûtö


	)

447 #unde‡
TARGET_ASM_OUTPUT_MI_THUNK


448 
	#TARGET_ASM_OUTPUT_MI_THUNK
 
¨c_ouçut_mi_thunk


	)

450 #unde‡
TARGET_ASM_CAN_OUTPUT_MI_THUNK


451 
	#TARGET_ASM_CAN_OUTPUT_MI_THUNK
 
hook_boﬁ_c⁄°_åì_hwi_hwi_c⁄°_åì_åue


	)

453 #unde‡
TARGET_FUNCTION_OK_FOR_SIBCALL


454 
	#TARGET_FUNCTION_OK_FOR_SIBCALL
 
¨c_fun˘i⁄_ok_f‹_sibˇŒ


	)

456 #unde‡
TARGET_MACHINE_DEPENDENT_REORG


457 
	#TARGET_MACHINE_DEPENDENT_REORG
 
¨c_ª‹g


	)

459 #unde‡
TARGET_IN_SMALL_DATA_P


460 
	#TARGET_IN_SMALL_DATA_P
 
¨c_ö_smÆl_d©a_p


	)

462 #unde‡
TARGET_PROMOTE_FUNCTION_MODE


463 
	#TARGET_PROMOTE_FUNCTION_MODE
 \

464 
deÁu…_¥omŸe_fun˘i⁄_mode_Æways_¥omŸe


	)

466 #unde‡
TARGET_PROMOTE_PROTOTYPES


467 
	#TARGET_PROMOTE_PROTOTYPES
 
hook_boﬁ_c⁄°_åì_åue


	)

469 #unde‡
TARGET_RETURN_IN_MEMORY


470 
	#TARGET_RETURN_IN_MEMORY
 
¨c_ªtu∫_ö_mem‹y


	)

471 #unde‡
TARGET_PASS_BY_REFERENCE


472 
	#TARGET_PASS_BY_REFERENCE
 
¨c_∑ss_by_ª„ªn˚


	)

474 #unde‡
TARGET_SETUP_INCOMING_VARARGS


475 
	#TARGET_SETUP_INCOMING_VARARGS
 
¨c_£tup_öcomög_v¨¨gs


	)

477 #unde‡
TARGET_ARG_PARTIAL_BYTES


478 
	#TARGET_ARG_PARTIAL_BYTES
 
¨c_¨g_∑πül_byãs


	)

480 #unde‡
TARGET_MUST_PASS_IN_STACK


481 
	#TARGET_MUST_PASS_IN_STACK
 
mu°_∑ss_ö_°ack_v¨_size


	)

483 #unde‡
TARGET_FUNCTION_VALUE


484 
	#TARGET_FUNCTION_VALUE
 
¨c_fun˘i⁄_vÆue


	)

486 #unde‡
TARGET_SCHED_ADJUST_PRIORITY


487 
	#TARGET_SCHED_ADJUST_PRIORITY
 
¨c_sched_adju°_¥i‹ôy


	)

489 #unde‡
TARGET_VECTOR_MODE_SUPPORTED_P


490 
	#TARGET_VECTOR_MODE_SUPPORTED_P
 
¨c_ve˘‹_mode_suµ‹ãd_p


	)

492 #unde‡
TARGET_INVALID_WITHIN_DOLOOP


493 
	#TARGET_INVALID_WITHIN_DOLOOP
 
¨c_övÆid_wôhö_dﬁo›


	)

495 #unde‡
TARGET_PRESERVE_RELOAD_P


496 
	#TARGET_PRESERVE_RELOAD_P
 
¨c_¥e£rve_ªlﬂd_p


	)

498 #unde‡
TARGET_CAN_FOLLOW_JUMP


499 
	#TARGET_CAN_FOLLOW_JUMP
 
¨c_ˇn_fﬁlow_jump


	)

501 #unde‡
TARGET_DELEGITIMIZE_ADDRESS


502 
	#TARGET_DELEGITIMIZE_ADDRESS
 
¨c_dñegôimize_addªss


	)

506 #unde‡
TARGET_MIN_ANCHOR_OFFSET


507 
	#TARGET_MIN_ANCHOR_OFFSET
 (-1024)

	)

508 #unde‡
TARGET_MAX_ANCHOR_OFFSET


509 
	#TARGET_MAX_ANCHOR_OFFSET
 (1020)

	)

511 #unde‡
TARGET_SECONDARY_RELOAD


512 
	#TARGET_SECONDARY_RELOAD
 
¨c_£c⁄d¨y_ªlﬂd


	)

514 
	#TARGET_OPTION_OVERRIDE
 
¨c_ovîride_›ti⁄s


	)

516 
	#TARGET_CONDITIONAL_REGISTER_USAGE
 
¨c_c⁄dôi⁄Æ_ªgi°î_ußge


	)

518 
	#TARGET_TRAMPOLINE_INIT
 
¨c_öôülize_åampﬁöe


	)

520 
	#TARGET_TRAMPOLINE_ADJUST_ADDRESS
 
¨c_åampﬁöe_adju°_addªss


	)

522 
	#TARGET_CAN_ELIMINATE
 
¨c_ˇn_ñimö©e


	)

524 
	#TARGET_FRAME_POINTER_REQUIRED
 
¨c_‰ame_poöãr_ªquúed


	)

526 
	#TARGET_FUNCTION_ARG
 
¨c_fun˘i⁄_¨g


	)

528 
	#TARGET_FUNCTION_ARG_ADVANCE
 
¨c_fun˘i⁄_¨g_adv™˚


	)

530 
	#TARGET_LEGITIMATE_CONSTANT_P
 
¨c_Àgôim©e_c⁄°™t_p


	)

532 
	#TARGET_LEGITIMATE_ADDRESS_P
 
¨c_Àgôim©e_addªss_p


	)

534 
	#TARGET_MODE_DEPENDENT_ADDRESS_P
 
¨c_mode_dïídít_addªss_p


	)

536 
	#TARGET_LEGITIMIZE_ADDRESS
 
¨c_Àgôimize_addªss


	)

538 
	#TARGET_ADJUST_INSN_LENGTH
 
¨c_adju°_ö¢_Àngth


	)

540 
	#TARGET_INSN_LENGTH_PARAMETERS
 
¨c_ö¢_Àngth_∑ømëîs


	)

542 
	#TARGET_LRA_P
 
¨c_Ãa_p


	)

543 
	#TARGET_REGISTER_PRIORITY
 
¨c_ªgi°î_¥i‹ôy


	)

545 
	#TARGET_DIFFERENT_ADDR_DISPLACEMENT_P
 
hook_boﬁ_void_åue


	)

546 
	#TARGET_SPILL_CLASS
 
¨c_•ûl_˛ass


	)

548 
	~"èrgë-def.h
"

550 #unde‡
TARGET_ASM_ALIGNED_HI_OP


551 
	#TARGET_ASM_ALIGNED_HI_OP
 "\t.hw‹d\t"

	)

552 #unde‡
TARGET_ASM_ALIGNED_SI_OP


553 
	#TARGET_ASM_ALIGNED_SI_OP
 "\t.w‹d\t"

	)

560 
	$¨c_sched_adju°_¥i‹ôy
 (
πx
 
ö¢
, 
¥i‹ôy
)

562 
πx
 
£t
 = 
	`sögÀ_£t
 (
ö¢
);

563 i‡(
£t


564 && 
	`GET_MODE
 (
	`SET_SRC
(
£t
)Ë=
DFmode


565 && 
	`GET_CODE
 (
	`SET_SRC
(
£t
)Ë=
REG
)

568  
¥i‹ôy
 + 20;

571  
¥i‹ôy
;

572 
	}
}

574 
ªg_˛ass_t


575 
	$¨c_£c⁄d¨y_ªlﬂd
 (
boﬁ
 
ö_p
, 
πx
 
x
, 
ªg_˛ass_t
 
˛
, 
machöe_mode
,

576 
£c⁄d¨y_ªlﬂd_öfo
 *)

578 i‡(
˛
 =
DOUBLE_REGS
)

579  
GENERAL_REGS
;

582 i‡((
˛
 =
LPCOUNT_REG
 || c»=
WRITABLE_CORE_REGS
)

583 && 
ö_p
 && 
	`MEM_P
 (
x
))

584  
GENERAL_REGS
;

585  
NO_REGS
;

586 
	}
}

588 
¨c_ifcvt
 ();

589 
πl_›t_∑ss
 
	g∑ss_¨c_ifcvt
 =

592 
RTL_PASS
,

594 
OPTGROUP_NONE
,

595 
NULL
,

596 
¨c_ifcvt
,

597 
NULL
,

598 
NULL
,

600 
TV_IFCVT2
,

605 
TODO_df_föish


612 
	$¨c_öô
 ()

614 
©å_tu√
 
tu√_dÊt
 = 
TUNE_NONE
;

616 i‡(
TARGET_A5
)

618 
¨c_˝u_°rög
 = "A5";

620 i‡(
TARGET_ARC600
)

622 
¨c_˝u_°rög
 = "ARC600";

623 
tu√_dÊt
 = 
TUNE_ARC600
;

625 i‡(
TARGET_ARC601
)

627 
¨c_˝u_°rög
 = "ARC601";

628 
tu√_dÊt
 = 
TUNE_ARC600
;

630 i‡(
TARGET_ARC700
)

632 
¨c_˝u_°rög
 = "ARC700";

633 
tu√_dÊt
 = 
TUNE_ARC700_4_2_STD
;

635 i‡(
TARGET_EM
)

637 
¨c_˝u_°rög
 = "EM";

640 
	`gcc_uƒóchabÀ
 ();

641 i‡(
¨c_tu√
 =
TUNE_NONE
)

642 
¨c_tu√
 = 
tu√_dÊt
;

644 i‡(
¨c_mu…co°
 < 0)

645 
¨c_tu√
)

647 
TUNE_ARC700_4_2_STD
:

650 
¨c_mu…co°
 = 
	`COSTS_N_INSNS
 (4);

651 i‡(
TARGET_NOMPY_SET
)

652 
¨c_mu…co°
 = 
	`COSTS_N_INSNS
 (30);

654 
TUNE_ARC700_4_2_XMAC
:

657 
¨c_mu…co°
 = 
	`COSTS_N_INSNS
 (3);

658 i‡(
TARGET_NOMPY_SET
)

659 
¨c_mu…co°
 = 
	`COSTS_N_INSNS
 (30);

661 
TUNE_ARC600
:

662 i‡(
TARGET_MUL64_SET
)

664 
¨c_mu…co°
 = 
	`COSTS_N_INSNS
 (4);

669 
¨c_mu…co°
 = 
	`COSTS_N_INSNS
 (30);

674 i‡(
TARGET_MUL64_SET
 && 
TARGET_ARC700
)

675 
	`îr‹
 ("-mmul64Çot supported for ARC700");

678 i‡(
TARGET_NOMPY_SET
 && (!
TARGET_ARC700
 || !
TARGET_EM
))

679 
	`îr‹
 ("-mno-mpy supported only for ARC700 or ARCv2");

682 i‡(
TARGET_MULMAC_32BY16_SET
 && !(
TARGET_ARC600
 || 
TARGET_ARC601
))

683 
	`îr‹
 ("-mmul32x16 supported only for ARC600 or ARC601");

685 i‡(!
TARGET_DPFP
 && 
TARGET_DPFP_DISABLE_LRSR
)

686 
	`îr‹
 ("-mno-dpfp-lrsr suppforted only with -mdpfp");

689 i‡((
TARGET_DPFP_FAST_SET
 && 
TARGET_DPFP_COMPACT_SET
)

690 || (
TARGET_SPFP_FAST_SET
 && 
TARGET_SPFP_COMPACT_SET
))

691 
	`îr‹
 ("FPX fastánd compact options cannot be specifiedÅogether");

694 i‡(
TARGET_SPFP_FAST_SET
 && (
TARGET_ARC600
 || 
TARGET_ARC601
))

695 
	`îr‹
 ("-mspfp_fastÇotávailable on ARC600 or ARC601");

698 i‡((
TARGET_DPFP
 || 
TARGET_SPFP
)

699 && !(
TARGET_ARC600
 || 
TARGET_ARC601
 || 
TARGET_ARC700
))

700 
	`îr‹
 ("FPXÉxtensionsÇotávailable onÖre-ARC600 cores");

703 i‡(
Êag_pic
 && !
TARGET_ARC700
)

705 
	`w¨nög
 (
DK_WARNING
, "PIC i†nŸ suµ‹ãd f‹ %s. Gíî©ögÇ⁄-PIC codê⁄ly..", 
¨c_˝u_°rög
);

706 
Êag_pic
 = 0;

709 
	`¨c_öô_ªg_èbÀs
 ();

712 
	`mem£t
 (
¨c_pun˘_ch¨s
, 0,  (arc_punct_chars));

713 
¨c_pun˘_ch¨s
['#'] = 1;

714 
¨c_pun˘_ch¨s
['*'] = 1;

715 
¨c_pun˘_ch¨s
['?'] = 1;

716 
¨c_pun˘_ch¨s
['!'] = 1;

717 
¨c_pun˘_ch¨s
['^'] = 1;

718 
¨c_pun˘_ch¨s
['&'] = 1;

722 
ªgi°î_∑ss_öfo
 
¨c_ifcvt4_öfo


723 { &
∑ss_¨c_ifcvt
.
∑ss
, "dbr",

724 1, 
PASS_POS_INSERT_AFTER


727 
ªgi°î_∑ss_öfo
 
¨c_ifcvt5_öfo


728 { &
∑ss_¨c_ifcvt
.
∑ss
, "shorten",

729 1, 
PASS_POS_INSERT_BEFORE


732 i‡(
›timize
 > 1 && !
TARGET_NO_COND_EXEC
)

734 
	`ªgi°î_∑ss
 (&
¨c_ifcvt4_öfo
);

735 
	`ªgi°î_∑ss
 (&
¨c_ifcvt5_öfo
);

737 
	}
}

742 
	$¨c_ovîride_›ti⁄s
 ()

744 i‡(
¨c_˝u
 =
PROCESSOR_NONE
)

745 
¨c_˝u
 = 
PROCESSOR_ARC700
;

747 i‡(
¨c_size_›t_Àvñ
 == 3)

748 
›timize_size
 = 1;

750 i‡(
Êag_pic
)

751 
èrgë_Êags
 |
MASK_NO_SDATA_SET
;

753 i‡(
Êag_no_comm⁄
 == 255)

754 
Êag_no_comm⁄
 = !
TARGET_NO_SDATA_SET
;

757 i‡(
TARGET_MIXED_CODE
)

758 
TARGET_Q_CLASS
 = 1;

759 i‡(!
TARGET_Q_CLASS
)

760 
TARGET_COMPACT_CASESI
 = 0;

761 i‡(
TARGET_COMPACT_CASESI
)

762 
TARGET_CASE_VECTOR_PC_RELATIVE
 = 1;

765 
	`¨c_öô
 ();

766 
	}
}

771 c⁄° *
	g¨c_c⁄dôi⁄_codes
[] =

777 
	e¨c_cc_code_ödex


779 
	mARC_CC_AL
, 
	mARC_CC_EQ
 = 
ARC_CC_AL
+2, 
	mARC_CC_NE
, 
	mARC_CC_P
, 
	mARC_CC_N
,

780 
	mARC_CC_C
, 
	mARC_CC_NC
, 
	mARC_CC_V
, 
	mARC_CC_NV
,

781 
	mARC_CC_GT
, 
	mARC_CC_LE
, 
	mARC_CC_GE
, 
	mARC_CC_LT
, 
	mARC_CC_HI
, 
	mARC_CC_LS
, 
	mARC_CC_PNZ
,

782 
	mARC_CC_LO
 = 
ARC_CC_C
, 
	mARC_CC_HS
 = 
ARC_CC_NC


785 
	#ARC_INVERSE_CONDITION_CODE
(
X
Ë((XË^ 1)

	)

792 
	$gë_¨c_c⁄dôi⁄_code
 (
πx
 
com∑ris⁄
)

794 
	`GET_MODE
 (
	`XEXP
 (
com∑ris⁄
, 0)))

796 
CCmode
:

797 
SImode
:

798 
	`GET_CODE
 (
com∑ris⁄
))

800 
EQ
 :  
ARC_CC_EQ
;

801 
NE
 :  
ARC_CC_NE
;

802 
GT
 :  
ARC_CC_GT
;

803 
LE
 :  
ARC_CC_LE
;

804 
GE
 :  
ARC_CC_GE
;

805 
LT
 :  
ARC_CC_LT
;

806 
GTU
 :  
ARC_CC_HI
;

807 
LEU
 :  
ARC_CC_LS
;

808 
LTU
 :  
ARC_CC_LO
;

809 
GEU
 :  
ARC_CC_HS
;

810  : 
	`gcc_uƒóchabÀ
 ();

812 
CC_ZNmode
:

813 
	`GET_CODE
 (
com∑ris⁄
))

815 
EQ
 :  
ARC_CC_EQ
;

816 
NE
 :  
ARC_CC_NE
;

817 
GE
:  
ARC_CC_P
;

818 
LT
:  
ARC_CC_N
;

819 
GT
 :  
ARC_CC_PNZ
;

820  : 
	`gcc_uƒóchabÀ
 ();

822 
CC_Zmode
:

823 
	`GET_CODE
 (
com∑ris⁄
))

825 
EQ
 :  
ARC_CC_EQ
;

826 
NE
 :  
ARC_CC_NE
;

827  : 
	`gcc_uƒóchabÀ
 ();

829 
CC_Cmode
:

830 
	`GET_CODE
 (
com∑ris⁄
))

832 
LTU
 :  
ARC_CC_C
;

833 
GEU
 :  
ARC_CC_NC
;

834  : 
	`gcc_uƒóchabÀ
 ();

836 
CC_FP_GTmode
:

837 i‡(
TARGET_ARGONAUT_SET
 && 
TARGET_SPFP
)

838 
	`GET_CODE
 (
com∑ris⁄
))

840 
GT
 :  
ARC_CC_N
;

841 
UNLE
:  
ARC_CC_P
;

842  : 
	`gcc_uƒóchabÀ
 ();

845 
	`GET_CODE
 (
com∑ris⁄
))

847 
GT
 :  
ARC_CC_HI
;

848 
UNLE
 :  
ARC_CC_LS
;

849  : 
	`gcc_uƒóchabÀ
 ();

851 
CC_FP_GEmode
:

853 
	`GET_CODE
 (
com∑ris⁄
))

855 
GE
 :  
ARC_CC_HS
;

856 
UNLT
 :  
ARC_CC_LO
;

857  : 
	`gcc_uƒóchabÀ
 ();

859 
CC_FP_UNEQmode
:

860 
	`GET_CODE
 (
com∑ris⁄
))

862 
UNEQ
 :  
ARC_CC_EQ
;

863 
LTGT
 :  
ARC_CC_NE
;

864  : 
	`gcc_uƒóchabÀ
 ();

866 
CC_FP_ORDmode
:

867 
	`GET_CODE
 (
com∑ris⁄
))

869 
UNORDERED
 :  
ARC_CC_C
;

870 
ORDERED
 :  
ARC_CC_NC
;

871  : 
	`gcc_uƒóchabÀ
 ();

873 
CC_FPXmode
:

874 
	`GET_CODE
 (
com∑ris⁄
))

876 
EQ
 :  
ARC_CC_EQ
;

877 
NE
 :  
ARC_CC_NE
;

878 
UNORDERED
 :  
ARC_CC_C
;

879 
ORDERED
 :  
ARC_CC_NC
;

880 
LTGT
 :  
ARC_CC_HI
;

881 
UNEQ
 :  
ARC_CC_LS
;

882  : 
	`gcc_uƒóchabÀ
 ();

884  : 
	`gcc_uƒóchabÀ
 ();

888 
	}
}

892 
boﬁ


893 
	$¨c_sh‹t_com∑ris⁄_p
 (
πx
 
com∑ris⁄
, 
off£t
)

895 
	`gcc_as£π
 (
ARC_CC_NC
 =
ARC_CC_HS
);

896 
	`gcc_as£π
 (
ARC_CC_C
 =
ARC_CC_LO
);

897 
	`gë_¨c_c⁄dôi⁄_code
 (
com∑ris⁄
))

899 
ARC_CC_EQ
: 
ARC_CC_NE
:

900  
off£t
 >= -512 && offset <= 506;

901 
ARC_CC_GT
: 
ARC_CC_LE
: 
ARC_CC_GE
: 
ARC_CC_LT
:

902 
ARC_CC_HI
: 
ARC_CC_LS
: 
ARC_CC_LO
: 
ARC_CC_HS
:

903  
off£t
 >= -64 && offset <= 58;

905  
Ál£
;

907 
	}
}

912 
machöe_mode


913 
	$¨c_£À˘_cc_mode
 (
πx_code
 
›
, 
πx
 
x
,Ñtx 
y
)

915 
machöe_mode
 
mode
 = 
	`GET_MODE
 (
x
);

916 
πx
 
x1
;

924 i‡(
	`GET_MODE_CLASS
 (
mode
Ë=
MODE_INT


925 && 
y
 =
c⁄°0_πx


926 && (
›
 =
EQ
 || o∞=
NE


927 || ((
›
 =
LT
 || o∞=
GE
Ë&& 
	`GET_MODE_SIZE
 (
	`GET_MODE
 (
x
) <= 4))))

928  
CC_ZNmode
;

931 i‡(
mode
 =
SImode


932 && 
	`GET_CODE
 (
y
Ë=
NEG


933 && (
›
 =
EQ
 || o∞=
NE
))

934  
CC_ZNmode
;

937 i‡(
mode
 =
SImode
 && (
›
 =
EQ
 || o∞=
NE
Ë&& 
	`CONST_INT_P
 (
y
)

938 && ((
	`INTVAL
 (
y
) - 1) & INTVAL (y)) == 0

939 && 
	`INTVAL
 (
y
))

940  
CC_Zmode
;

943 i‡(
mode
 =
SImode
 && (
›
 =
EQ
 || o∞=
NE
Ë&& 
	`CONST_INT_P
 (
y
)

944 && 
	`GET_CODE
 (
x
Ë=
AND
 && 
	`CONST_INT_P
 ((
x1
 = 
	`XEXP
 (x, 1)))

945 && ((
	`INTVAL
 (
x1
) + 1) & INTVAL (x1)) == 0

946 && (~
	`INTVAL
 (
x1
Ë| INTVAL (
y
)) < 0

947 && (~
	`INTVAL
 (
x1
Ë| INTVAL (
y
)) > -0x800)

948  
CC_Zmode
;

950 i‡(
	`GET_MODE
 (
x
Ë=
SImode
 && (
›
 =
LTU
 || o∞=
GEU
)

951 && 
	`GET_CODE
 (
x
Ë=
PLUS


952 && (
	`πx_equÆ_p
 (
	`XEXP
 (
x
, 0), 
y
) ||Ñtx_equal_p (XEXP (x, 1), y)))

953  
CC_Cmode
;

955 i‡(
TARGET_ARGONAUT_SET


956 && ((
mode
 =
SFmode
 && 
TARGET_SPFP
Ë|| (modê=
DFmode
 && 
TARGET_DPFP
)))

957 
›
)

959 
EQ
: 
NE
: 
UNEQ
: 
LTGT
: 
ORDERED
: 
UNORDERED
:

960  
CC_FPXmode
;

961 
LT
: 
UNGE
: 
GT
: 
UNLE
:

962  
CC_FP_GTmode
;

963 
LE
: 
UNGT
: 
GE
: 
UNLT
:

964  
CC_FP_GEmode
;

965 : 
	`gcc_uƒóchabÀ
 ();

967 i‡(
	`GET_MODE_CLASS
 (
mode
Ë=
MODE_FLOAT
 && 
TARGET_OPTFPE
)

968 
›
)

970 
EQ
: 
NE
:  
CC_Zmode
;

971 
LT
: 
UNGE
:

972 
GT
: 
UNLE
:  
CC_FP_GTmode
;

973 
LE
: 
UNGT
:

974 
GE
: 
UNLT
:  
CC_FP_GEmode
;

975 
UNEQ
: 
LTGT
:  
CC_FP_UNEQmode
;

976 
ORDERED
: 
UNORDERED
:  
CC_FP_ORDmode
;

977 : 
	`gcc_uƒóchabÀ
 ();

980  
CCmode
;

981 
	}
}

992 
	e¨c_mode_˛ass
 {

993 
	mC_MODE
,

994 
	mS_MODE
, 
	mD_MODE
, 
	mT_MODE
, 
	mO_MODE
,

995 
	mSF_MODE
, 
	mDF_MODE
, 
	mTF_MODE
, 
	mOF_MODE
,

996 
	mV_MODE


1000 
	#C_MODES
 (1 << (Ë
C_MODE
)

	)

1003 
	#S_MODES
 ((1 << (Ë
S_MODE
Ë| (1 << (Ë
SF_MODE
))

	)

1006 
	#D_MODES
 (
S_MODES
 | (1 << (Ë
D_MODE
Ë| (1 << 
DF_MODE
))

	)

1009 
	#DF_MODES
 (1 << 
DF_MODE
)

	)

1012 
	#T_MODES
 (
D_MODES
 | (1 << (Ë
T_MODE
Ë| (1 << (Ë
TF_MODE
))

	)

1015 
	#V_MODES
 (1 << (Ë
V_MODE
)

	)

1019 
	g¨c_h¨d_ªgno_mode_ok
[] = {

1020 
T_MODES
, T_MODES, T_MODES, T_MODES, T_MODES, T_MODES, T_MODES, T_MODES,

1021 
T_MODES
, T_MODES, T_MODES, T_MODES, T_MODES, T_MODES, T_MODES, T_MODES,

1022 
T_MODES
, T_MODES, T_MODES, T_MODES, T_MODES, T_MODES, T_MODES, 
D_MODES
,

1023 
D_MODES
, 
S_MODES
, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES,

1026 
S_MODES
, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES,

1027 
DF_MODES
, 0, DF_MODES, 0, 
S_MODES
, S_MODES, S_MODES, S_MODES,

1028 
S_MODES
, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES,

1029 
S_MODES
, S_MODES, S_MODES, S_MODES, S_MODES, 
C_MODES
, S_MODES,

1031 
V_MODES
, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES,

1032 
V_MODES
, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES,

1033 
V_MODES
, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES,

1034 
V_MODES
, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES,

1036 
V_MODES
, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES,

1037 
V_MODES
, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES,

1038 
V_MODES
, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES,

1039 
V_MODES
, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES, V_MODES,

1041 
S_MODES
, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES,

1042 
S_MODES
, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES, S_MODES

1045 
	g¨c_mode_˛ass
 [
NUM_MACHINE_MODES
];

1047 
ªg_˛ass
 
	g¨c_ªgno_ªg_˛ass
[
FIRST_PSEUDO_REGISTER
];

1049 
ªg_˛ass


1050 
	$¨c_¥e„ºed_ªlﬂd_˛ass
 (
πx
, 
ªg_˛ass
 
˛
)

1052 i‡((
˛
Ë=
CHEAP_CORE_REGS
 || (˛Ë=
WRITABLE_CORE_REGS
)

1053  
GENERAL_REGS
;

1054  
˛
;

1055 
	}
}

1060 
	$¨c_öô_ªg_èbÀs
 ()

1062 
i
;

1064 
i
 = 0; i < 
NUM_MACHINE_MODES
; i++)

1066 
	`GET_MODE_CLASS
 (
i
))

1068 
MODE_INT
:

1069 
MODE_PARTIAL_INT
:

1070 
MODE_COMPLEX_INT
:

1071 i‡(
	`GET_MODE_SIZE
 (
i
) <= 4)

1072 
¨c_mode_˛ass
[
i
] = 1 << (Ë
S_MODE
;

1073 i‡(
	`GET_MODE_SIZE
 (
i
) == 8)

1074 
¨c_mode_˛ass
[
i
] = 1 << (Ë
D_MODE
;

1075 i‡(
	`GET_MODE_SIZE
 (
i
) == 16)

1076 
¨c_mode_˛ass
[
i
] = 1 << (Ë
T_MODE
;

1077 i‡(
	`GET_MODE_SIZE
 (
i
) == 32)

1078 
¨c_mode_˛ass
[
i
] = 1 << (Ë
O_MODE
;

1080 
¨c_mode_˛ass
[
i
] = 0;

1082 
MODE_FLOAT
:

1083 
MODE_COMPLEX_FLOAT
:

1084 i‡(
	`GET_MODE_SIZE
 (
i
) <= 4)

1085 
¨c_mode_˛ass
[
i
] = 1 << (Ë
SF_MODE
;

1086 i‡(
	`GET_MODE_SIZE
 (
i
) == 8)

1087 
¨c_mode_˛ass
[
i
] = 1 << (Ë
DF_MODE
;

1088 i‡(
	`GET_MODE_SIZE
 (
i
) == 16)

1089 
¨c_mode_˛ass
[
i
] = 1 << (Ë
TF_MODE
;

1090 i‡(
	`GET_MODE_SIZE
 (
i
) == 32)

1091 
¨c_mode_˛ass
[
i
] = 1 << (Ë
OF_MODE
;

1093 
¨c_mode_˛ass
[
i
] = 0;

1095 
MODE_VECTOR_INT
:

1096 
¨c_mode_˛ass
 [
i
] = (1<< (Ë
V_MODE
);

1098 
MODE_CC
:

1102 i‡(
i
 =(Ë
CCmode
 || i =(Ë
CC_ZNmode
 || i =(Ë
CC_Zmode


1103 || 
i
 =(Ë
CC_Cmode


1104 || 
i
 =
CC_FP_GTmode
 || i =
CC_FP_GEmode
 || i =
CC_FP_ORDmode
)

1105 
¨c_mode_˛ass
[
i
] = 1 << (Ë
C_MODE
;

1107 
¨c_mode_˛ass
[
i
] = 0;

1111 
	}
}

1123 
	g∫ame56
[5] = "r56";

1124 
	g∫ame57
[5] = "r57";

1125 
	g∫ame58
[5] = "r58";

1126 
	g∫ame59
[5] = "r59";

1128 
	g∫ame29
[7] = "ilink1";

1129 
	g∫ame30
[7] = "ilink2";

1132 
	$¨c_c⁄dôi⁄Æ_ªgi°î_ußge
 ()

1134 
ªgno
;

1135 
i
;

1136 
fix_°¨t
 = 60, 
fix_íd
 = 55;

1138 i‡(
TARGET_EM
)

1140 
	`°r˝y
(
∫ame29
, "ilink");

1141 
	`°r˝y
(
∫ame30
, "r30");

1143 i‡(
TARGET_MUL64_SET
)

1145 
fix_°¨t
 = 57;

1146 
fix_íd
 = 59;

1155 
	`°r˝y
 (
∫ame57
, "");

1156 
	`°r˝y
 (
∫ame58
, 
TARGET_BIG_ENDIAN
 ? "mhi" : "mlo");

1157 
	`°r˝y
 (
∫ame59
, 
TARGET_BIG_ENDIAN
 ? "mlo" : "mhi");

1159 i‡(
TARGET_MULMAC_32BY16_SET
)

1161 
fix_°¨t
 = 56;

1162 
fix_íd
 = fix_end > 57 ? fix_end : 57;

1163 
	`°r˝y
 (
∫ame56
, 
TARGET_BIG_ENDIAN
 ? "acc1" : "acc2");

1164 
	`°r˝y
 (
∫ame57
, 
TARGET_BIG_ENDIAN
 ? "acc2" : "acc1");

1166 
ªgno
 = 
fix_°¨t
;Ñegnÿ<
fix_íd
;Ñegno++)

1168 i‡(!
fixed_ªgs
[
ªgno
])

1169 
	`w¨nög
 (0, "mu…ùly o±i⁄ im∂õ†r%d i†fixed", 
ªgno
);

1170 
fixed_ªgs
 [
ªgno
] = 
ˇŒ_u£d_ªgs
[regno] = 1;

1172 i‡(
TARGET_Q_CLASS
)

1174 
ªg_Æloc_‹dî
[2] = 12;

1175 
ªg_Æloc_‹dî
[3] = 13;

1176 
ªg_Æloc_‹dî
[4] = 14;

1177 
ªg_Æloc_‹dî
[5] = 15;

1178 
ªg_Æloc_‹dî
[6] = 1;

1179 
ªg_Æloc_‹dî
[7] = 0;

1180 
ªg_Æloc_‹dî
[8] = 4;

1181 
ªg_Æloc_‹dî
[9] = 5;

1182 
ªg_Æloc_‹dî
[10] = 6;

1183 
ªg_Æloc_‹dî
[11] = 7;

1184 
ªg_Æloc_‹dî
[12] = 8;

1185 
ªg_Æloc_‹dî
[13] = 9;

1186 
ªg_Æloc_‹dî
[14] = 10;

1187 
ªg_Æloc_‹dî
[15] = 11;

1189 i‡(
TARGET_SIMD_SET
)

1191 
i
;

1192 
i
=64; i<88; i++)

1193 
ªg_Æloc_‹dî
 [
i
] = i;

1203 i‡(
TARGET_ARC600
)

1204 
	`CLEAR_HARD_REG_BIT
 (
ªg_˛ass_c⁄ã¡s
[
SIBCALL_REGS
], 
LP_COUNT
);

1205 i‡(!
TARGET_ARC700
)

1206 
fixed_ªgs
[
LP_COUNT
] = 1;

1207 
ªgno
 = 0;Ñegnÿ< 
FIRST_PSEUDO_REGISTER
;Ñegno++)

1208 i‡(!
ˇŒ_u£d_ªgs
[
ªgno
])

1209 
	`CLEAR_HARD_REG_BIT
 (
ªg_˛ass_c⁄ã¡s
[
SIBCALL_REGS
], 
ªgno
);

1210 
ªgno
 = 32;Ñegno < 60;Ñegno++)

1211 i‡(!
fixed_ªgs
[
ªgno
])

1212 
	`SET_HARD_REG_BIT
 (
ªg_˛ass_c⁄ã¡s
[
WRITABLE_CORE_REGS
], 
ªgno
);

1213 i‡(
TARGET_ARC700
)

1215 
ªgno
 = 32;Ñegno <= 60;Ñegno++)

1216 
	`CLEAR_HARD_REG_BIT
 (
ªg_˛ass_c⁄ã¡s
[
CHEAP_CORE_REGS
], 
ªgno
);

1220 i‡(
fixed_ªgs
[
LP_COUNT
])

1222 
	`CLEAR_HARD_REG_BIT
 (
ªg_˛ass_c⁄ã¡s
[
LPCOUNT_REG
], 
LP_COUNT
);

1223 
	`CLEAR_HARD_REG_BIT
 (
ªg_˛ass_c⁄ã¡s
[
SIBCALL_REGS
], 
LP_COUNT
);

1224 
	`CLEAR_HARD_REG_BIT
 (
ªg_˛ass_c⁄ã¡s
[
WRITABLE_CORE_REGS
], 
LP_COUNT
);

1227 
¨c_h¨d_ªgno_mode_ok
[60] = 0;

1230 
¨c_h¨d_ªgno_mode_ok
[60] = 1 << (Ë
S_MODE
;

1233 
i
 = 0; i < 
FIRST_PSEUDO_REGISTER
; i++)

1235 i‡(
i
 < 29)

1237 i‡(
TARGET_Q_CLASS
 && ((
i
 <= 3) || ((i >= 12) && (i <= 15))))

1238 
¨c_ªgno_ªg_˛ass
[
i
] = 
ARCOMPACT16_REGS
;

1240 
¨c_ªgno_ªg_˛ass
[
i
] = 
GENERAL_REGS
;

1242 i‡(
i
 < 60)

1243 
¨c_ªgno_ªg_˛ass
[
i
]

1244 (
fixed_ªgs
[
i
]

1245 ? (
	`TEST_HARD_REG_BIT
 (
ªg_˛ass_c⁄ã¡s
[
CHEAP_CORE_REGS
], 
i
)

1246 ? 
CHEAP_CORE_REGS
 : 
ALL_CORE_REGS
)

1247 : ((
TARGET_ARC700


1248 && 
	`TEST_HARD_REG_BIT
 (
ªg_˛ass_c⁄ã¡s
[
CHEAP_CORE_REGS
], 
i
))

1249 ? 
CHEAP_CORE_REGS
 : 
WRITABLE_CORE_REGS
));

1251 
¨c_ªgno_ªg_˛ass
[
i
] = 
NO_REGS
;

1255 i‡(!
TARGET_Q_CLASS
)

1257 
	`CLEAR_HARD_REG_SET
(
ªg_˛ass_c⁄ã¡s
 [
ARCOMPACT16_REGS
]);

1258 
	`CLEAR_HARD_REG_SET
(
ªg_˛ass_c⁄ã¡s
 [
AC16_BASE_REGS
]);

1261 
	`gcc_as£π
 (
FIRST_PSEUDO_REGISTER
 >= 144);

1264 
¨c_ªgno_ªg_˛ass
[29] = 
LINK_REGS
;

1265 
¨c_ªgno_ªg_˛ass
[30] = 
LINK_REGS
;

1266 
¨c_ªgno_ªg_˛ass
[31] = 
LINK_REGS
;

1267 
¨c_ªgno_ªg_˛ass
[60] = 
LPCOUNT_REG
;

1268 
¨c_ªgno_ªg_˛ass
[61] = 
NO_REGS
;

1269 
¨c_ªgno_ªg_˛ass
[62] = 
GENERAL_REGS
;

1271 i‡(
TARGET_DPFP
)

1273 
i
 = 40; i < 44; ++i)

1275 
¨c_ªgno_ªg_˛ass
[
i
] = 
DOUBLE_REGS
;

1280 i‡(!
TARGET_ARGONAUT_SET
)

1284 
	`CLEAR_HARD_REG_BIT
(
ªg_˛ass_c⁄ã¡s
[
CHEAP_CORE_REGS
 ], 
i
);

1285 
	`CLEAR_HARD_REG_BIT
(
ªg_˛ass_c⁄ã¡s
[
ALL_CORE_REGS
 ], 
i
);

1286 
	`CLEAR_HARD_REG_BIT
(
ªg_˛ass_c⁄ã¡s
[
WRITABLE_CORE_REGS
 ], 
i
);

1287 
	`CLEAR_HARD_REG_BIT
(
ªg_˛ass_c⁄ã¡s
[
MPY_WRITABLE_CORE_REGS
], 
i
);

1295 
¨c_ªgno_ªg_˛ass
[40] = 
ALL_REGS
;

1296 
¨c_ªgno_ªg_˛ass
[41] = 
ALL_REGS
;

1297 
¨c_ªgno_ªg_˛ass
[42] = 
ALL_REGS
;

1298 
¨c_ªgno_ªg_˛ass
[43] = 
ALL_REGS
;

1300 
¨c_h¨d_ªgno_mode_ok
[40] = 0;

1301 
¨c_h¨d_ªgno_mode_ok
[42] = 0;

1303 
	`CLEAR_HARD_REG_SET
(
ªg_˛ass_c⁄ã¡s
 [
DOUBLE_REGS
]);

1306 i‡(
TARGET_SIMD_SET
)

1308 
	`gcc_as£π
 (
ARC_FIRST_SIMD_VR_REG
 == 64);

1309 
	`gcc_as£π
 (
ARC_LAST_SIMD_VR_REG
 == 127);

1311 
i
 = 
ARC_FIRST_SIMD_VR_REG
; i <
ARC_LAST_SIMD_VR_REG
; i++)

1312 
¨c_ªgno_ªg_˛ass
 [
i
] = 
SIMD_VR_REGS
;

1314 
	`gcc_as£π
 (
ARC_FIRST_SIMD_DMA_CONFIG_REG
 == 128);

1315 
	`gcc_as£π
 (
ARC_FIRST_SIMD_DMA_CONFIG_IN_REG
 == 128);

1316 
	`gcc_as£π
 (
ARC_FIRST_SIMD_DMA_CONFIG_OUT_REG
 == 136);

1317 
	`gcc_as£π
 (
ARC_LAST_SIMD_DMA_CONFIG_REG
 == 143);

1319 
i
 = 
ARC_FIRST_SIMD_DMA_CONFIG_REG
;

1320 
i
 <
ARC_LAST_SIMD_DMA_CONFIG_REG
; i++)

1321 
¨c_ªgno_ªg_˛ass
 [
i
] = 
SIMD_DMA_CONFIG_REGS
;

1325 
¨c_ªgno_ªg_˛ass
[
PROGRAM_COUNTER_REGNO
] = 
GENERAL_REGS
;

1326 
	}
}

1331 
åì


1332 
	$¨c_h™dÀ_öãºu±_©åibuã
 (
åì
 *,Åªê
«me
,Åªê
¨gs
, ,

1333 
boﬁ
 *
no_add_©ås
)

1335 
	`gcc_as£π
 (
¨gs
);

1337 
åì
 
vÆue
 = 
	`TREE_VALUE
 (
¨gs
);

1339 i‡(
	`TREE_CODE
 (
vÆue
Ë!
STRING_CST
)

1341 
	`w¨nög
 (
OPT_W©åibuãs
,

1343 
«me
);

1344 *
no_add_©ås
 = 
åue
;

1346 i‡(
	`°rcmp
 (
	`TREE_STRING_POINTER
 (
vÆue
), "ilink1")

1347 && 
	`°rcmp
 (
	`TREE_STRING_POINTER
 (
vÆue
), "ilink2"))

1349 
	`w¨nög
 (
OPT_W©åibuãs
,

1351 
«me
);

1352 *
no_add_©ås
 = 
åue
;

1354  
NULL_TREE
;

1355 
	}
}

1362 
	$¨c_comp_ty≥_©åibuãs
 (
c⁄°_åì
 
ty≥1
,

1363 
c⁄°_åì
 
ty≥2
)

1365 
l1
, 
l2
, 
s1
, 
s2
;

1368 i‡(
	`TREE_CODE
 (
ty≥1
Ë!
FUNCTION_TYPE
)

1372 
l1
 = 
	`lookup_©åibuã
 ("l⁄g_ˇŒ", 
	`TYPE_ATTRIBUTES
 (
ty≥1
)Ë!
NULL
;

1373 
l2
 = 
	`lookup_©åibuã
 ("l⁄g_ˇŒ", 
	`TYPE_ATTRIBUTES
 (
ty≥2
)Ë!
NULL
;

1374 
s1
 = 
	`lookup_©åibuã
 ("sh‹t_ˇŒ", 
	`TYPE_ATTRIBUTES
 (
ty≥1
)Ë!
NULL
;

1375 
s2
 = 
	`lookup_©åibuã
 ("sh‹t_ˇŒ", 
	`TYPE_ATTRIBUTES
 (
ty≥2
)Ë!
NULL
;

1378 i‡(
l1
 | 
l2
 | 
s1
 | 
s2
)

1381 i‡((
l1
 !
l2
Ë|| (
s1
 !
s2
))

1385 i‡((
l1
 & 
s2
Ë|| (
l2
 & 
s1
))

1391 
	}
}

1396 
	$¨c_£t_deÁu…_ty≥_©åibuãs
 (
åì
 
ty≥
 
ATTRIBUTE_UNUSED
)

1398 
	`gcc_uƒóchabÀ
();

1399 
	}
}

1406 
πx


1407 
	$gí_com∑ª_ªg
 (
πx
 
com∑ris⁄
, 
machöe_mode
 
omode
)

1409 
πx_code
 
code
 = 
	`GET_CODE
 (
com∑ris⁄
);

1410 
πx
 
x
 = 
	`XEXP
 (
com∑ris⁄
, 0);

1411 
πx
 
y
 = 
	`XEXP
 (
com∑ris⁄
, 1);

1412 
πx
 
tmp
, 
cc_ªg
;

1413 
machöe_mode
 
mode
, 
cmode
;

1416 
cmode
 = 
	`GET_MODE
 (
x
);

1417 i‡(
cmode
 =
VOIDmode
)

1418 
cmode
 = 
	`GET_MODE
 (
y
);

1419 
	`gcc_as£π
 (
cmode
 =
SImode
 || cmodê=
SFmode
 || cmodê=
DFmode
);

1420 i‡(
cmode
 =
SImode
)

1422 i‡(!
	`ªgi°î_›î™d
 (
x
, 
SImode
))

1424 i‡(
	`ªgi°î_›î™d
 (
y
, 
SImode
))

1426 
tmp
 = 
x
;

1427 
x
 = 
y
;

1428 
y
 = 
tmp
;

1429 
code
 = 
	`sw≠_c⁄dôi⁄
 (code);

1432 
x
 = 
	`c›y_to_mode_ªg
 (
SImode
, x);

1434 i‡(
	`GET_CODE
 (
y
Ë=
SYMBOL_REF
 && 
Êag_pic
)

1435 
y
 = 
	`c›y_to_mode_ªg
 (
SImode
, y);

1439 
x
 = 
	`f‹˚_ªg
 (
cmode
, x);

1440 
y
 = 
	`f‹˚_ªg
 (
cmode
, y);

1442 
mode
 = 
	`SELECT_CC_MODE
 (
code
, 
x
, 
y
);

1444 
cc_ªg
 = 
	`gí_πx_REG
 (
mode
, 
CC_REG
);

1450 i‡(
TARGET_ARGONAUT_SET


1451 && ((
cmode
 =
SFmode
 && 
TARGET_SPFP
Ë|| (cmodê=
DFmode
 && 
TARGET_DPFP
)))

1453 
code
)

1455 
NE
: 
EQ
: 
LT
: 
UNGE
: 
LE
: 
UNGT
:

1456 
UNEQ
: 
LTGT
: 
ORDERED
: 
UNORDERED
:

1458 
GT
: 
UNLE
: 
GE
: 
UNLT
:

1459 
code
 = 
	`sw≠_c⁄dôi⁄
 (code);

1460 
tmp
 = 
x
;

1461 
x
 = 
y
;

1462 
y
 = 
tmp
;

1465 
	`gcc_uƒóchabÀ
 ();

1467 i‡(
cmode
 =
SFmode
)

1469 
	`emô_ö¢
 (
	`gí_cmpsÂx_øw
 (
x
, 
y
));

1474 
	`emô_ö¢
 (
	`gí_cmpdÂx_øw
 (
x
, 
y
));

1477 i‡(
mode
 !
CC_FPXmode
)

1478 
	`emô_ö¢
 (
	`gí_πx_SET
 (
VOIDmode
, 
cc_ªg
,

1479 
	`gí_πx_COMPARE
 (
mode
,

1480 
	`gí_πx_REG
 (
CC_FPXmode
, 61),

1481 
c⁄°0_πx
)));

1483 i‡(
	`GET_MODE_CLASS
 (
cmode
Ë=
MODE_FLOAT
 && 
TARGET_OPTFPE
)

1485 
πx
 
›0
 = 
	`gí_πx_REG
 (
cmode
, 0);

1486 
πx
 
›1
 = 
	`gí_πx_REG
 (
cmode
, 
	`GET_MODE_SIZE
 (cmodeË/ 
UNITS_PER_WORD
);

1488 
code
)

1490 
NE
: 
EQ
: 
GT
: 
UNLE
: 
GE
: 
UNLT
:

1491 
UNEQ
: 
LTGT
: 
ORDERED
: 
UNORDERED
:

1493 
LT
: 
UNGE
: 
LE
: 
UNGT
:

1494 
code
 = 
	`sw≠_c⁄dôi⁄
 (code);

1495 
tmp
 = 
x
;

1496 
x
 = 
y
;

1497 
y
 = 
tmp
;

1500 
	`gcc_uƒóchabÀ
 ();

1502 i‡(
cuºíéy_ex∑ndög_to_πl
)

1504 
	`emô_move_ö¢
 (
›0
, 
x
);

1505 
	`emô_move_ö¢
 (
›1
, 
y
);

1509 
	`gcc_as£π
 (
	`πx_equÆ_p
 (
›0
, 
x
));

1510 
	`gcc_as£π
 (
	`πx_equÆ_p
 (
›1
, 
y
));

1512 
	`emô_ö¢
 (
	`gí_cmp_Êﬂt
 (
cc_ªg
, 
	`gí_πx_COMPARE
 (
mode
, 
›0
, 
›1
)));

1515 
	`emô_ö¢
 (
	`gí_πx_SET
 (
omode
, 
cc_ªg
,

1516 
	`gí_πx_COMPARE
 (
mode
, 
x
, 
y
)));

1517  
	`gí_πx_fmt_ì
 (
code
, 
omode
, 
cc_ªg
, 
c⁄°0_πx
);

1518 
	}
}

1523 
boﬁ


1524 
	$¨c_doubÀ_limm_p
 (
πx
 
vÆue
)

1526 
HOST_WIDE_INT
 
low
, 
high
;

1528 
	`gcc_as£π
 (
	`GET_CODE
 (
vÆue
Ë=
CONST_DOUBLE
);

1530 i‡(
TARGET_DPFP
)

1531  
åue
;

1533 
low
 = 
	`CONST_DOUBLE_LOW
 (
vÆue
);

1534 
high
 = 
	`CONST_DOUBLE_HIGH
 (
vÆue
);

1536 i‡(
low
 & 0x80000000)

1538  (((
HOST_WIDE_INT
Ë
low
 <0xfffffff‡&& 
high
 == 0)

1539 || (((
low
 & - (
HOST_WIDE_INT
) 0x80000000)

1540 =- (
HOST_WIDE_INT
) 0x80000000)

1541 && 
high
 == -1));

1545  (
HOST_WIDE_INT
Ë
low
 <0x7ffffff‡&& 
high
 == 0;

1547 
	}
}

1557 
	$¨c_£tup_öcomög_v¨¨gs
 (
cumuœtive_¨gs_t
 
¨gs_so_Ár
,

1558 
machöe_mode
 
mode
, 
åì
 
ty≥
,

1559 *
¥ëíd_size
, 
no_πl
)

1561 
fú°_™⁄_¨g
;

1562 
CUMULATIVE_ARGS
 
√xt_cum
;

1566 
√xt_cum
 = *
	`gë_cumuœtive_¨gs
 (
¨gs_so_Ár
);

1567 
	`¨c_fun˘i⁄_¨g_adv™˚
 (
	`∑ck_cumuœtive_¨gs
 (&
√xt_cum
), 
mode
, 
ty≥
, 1);

1568 
fú°_™⁄_¨g
 = 
√xt_cum
;

1570 i‡(
fú°_™⁄_¨g
 < 
MAX_ARC_PARM_REGS
)

1575 
fú°_ªg_off£t
 = 
fú°_™⁄_¨g
;

1577 i‡(!
no_πl
)

1579 
πx
 
ªgblock


1580 
	`gí_πx_MEM
 (
BLKmode
, 
	`∂us_c⁄°™t
 (
Pmode
, 
¨g_poöãr_πx
,

1581 
	`FIRST_PARM_OFFSET
 (0)));

1582 
	`move_block_‰om_ªg
 (
fú°_ªg_off£t
, 
ªgblock
,

1583 
MAX_ARC_PARM_REGS
 - 
fú°_ªg_off£t
);

1586 *
¥ëíd_size


1587 ((
MAX_ARC_PARM_REGS
 - 
fú°_ªg_off£t
 ) * 
UNITS_PER_WORD
);

1589 
	}
}

1597 
	$¨c_addªss_co°
 (
πx
 
addr
, 
machöe_mode
, 
addr_•a˚_t
, 
boﬁ
 
•ìd
)

1599 
	`GET_CODE
 (
addr
))

1601 
REG
 :

1602  
•ìd
 || 
	`ßtisfõs_c⁄°øöt_Rcq
 (
addr
) ? 0 : 1;

1603 
PRE_INC
: 
PRE_DEC
: 
POST_INC
: 
POST_DEC
:

1604 
PRE_MODIFY
: 
POST_MODIFY
:

1605  !
•ìd
;

1607 
LABEL_REF
 :

1608 
SYMBOL_REF
 :

1609 
CONST
 :

1611  
	`COSTS_N_INSNS
 (1);

1613 
PLUS
 :

1615 
πx
 
∂us0
 = 
	`XEXP
 (
addr
, 0);

1616 
πx
 
∂us1
 = 
	`XEXP
 (
addr
, 1);

1618 i‡(
	`GET_CODE
 (
∂us0
Ë!
REG


1619 && (
	`GET_CODE
 (
∂us0
Ë!
MULT


1620 || !
	`CONST_INT_P
 (
	`XEXP
 (
∂us0
, 1))

1621 || (
	`INTVAL
 (
	`XEXP
 (
∂us0
, 1)) != 2

1622 && 
	`INTVAL
 (
	`XEXP
 (
∂us0
, 1)) != 4)))

1625 
	`GET_CODE
 (
∂us1
))

1627 
CONST_INT
 :

1628  (!
	`RTX_OK_FOR_OFFSET_P
 (
SImode
, 
∂us1
)

1629 ? 
	`COSTS_N_INSNS
 (1)

1630 : 
•ìd


1632 : (
	`ßtisfõs_c⁄°øöt_Rcq
 (
∂us0
)

1633 && 
	`ßtisfõs_c⁄°øöt_O
 (
∂us1
))

1636 
REG
:

1637  (
•ìd
 < 1 ? 0

1638 : (
	`ßtisfõs_c⁄°øöt_Rcq
 (
∂us0
)

1639 && 
	`ßtisfõs_c⁄°øöt_Rcq
 (
∂us1
))

1641 
CONST
 :

1642 
SYMBOL_REF
 :

1643 
LABEL_REF
 :

1644  
	`COSTS_N_INSNS
 (1);

1655 
	}
}

1659 
πx


1660 
	$‰ame_ö¢
 (
πx
 
x
)

1662 
x
 = 
	`emô_ö¢
 (x);

1663 
	`RTX_FRAME_RELATED_P
 (
x
) = 1;

1664  
x
;

1665 
	}
}

1669 
πx


1670 
	$‰ame_move
 (
πx
 
d°
,Ñtx 
§c
)

1672  
	`‰ame_ö¢
 (
	`gí_πx_SET
 (
VOIDmode
, 
d°
, 
§c
));

1673 
	}
}

1678 
πx


1679 
	$‰ame_move_öc
 (
πx
 
d°
,Ñtx 
§c
,Ñtx 
ªg
,Ñtx 
addr
)

1681 
πx
 
ö¢
 = 
	`‰ame_move
 (
d°
, 
§c
);

1683 i‡(!
addr


1684 || 
	`GET_CODE
 (
addr
Ë=
PRE_DEC
 || GET_CODE (addrË=
POST_INC


1685 || 
	`GET_CODE
 (
addr
Ë=
PRE_MODIFY
 || GET_CODE (addrË=
POST_MODIFY
)

1686 
	`add_ªg_nŸe
 (
ö¢
, 
REG_INC
, 
ªg
);

1687  
ö¢
;

1688 
	}
}

1692 
πx


1693 
	$‰ame_add
 (
πx
 
ªg
, 
HOST_WIDE_INT
 
off£t
)

1695 
	`gcc_as£π
 ((
off£t
 & 0x3) == 0);

1696 i‡(!
off£t
)

1697  
NULL_RTX
;

1698  
	`‰ame_move
 (
ªg
, 
	`∂us_c⁄°™t
 (
Pmode
,Ñeg, 
off£t
));

1699 
	}
}

1703 
πx


1704 
	$‰ame_°ack_add
 (
HOST_WIDE_INT
 
off£t
)

1706  
	`‰ame_add
 (
°ack_poöãr_πx
, 
off£t
);

1707 
	}
}

1800 
GTY
 (()Ë
	g¨c_‰ame_öfo


1802 
	gtŸÆ_size
;

1803 
	gexåa_size
;

1804 
	g¥ëíd_size
;

1805 
	g¨gs_size
;

1806 
	gªg_size
;

1807 
	gv¨_size
;

1808 
	gªg_off£t
;

1809 
	ggmask
;

1810 
	göôülized
;

1811 
	gmûlicode_°¨t_ªg
;

1812 
	gmûlicode_íd_ªg
;

1813 
boﬁ
 
	gßve_ªtu∫_addr
;

1818 
GTY
 (()Ë
	tmachöe_fun˘i⁄


1820 
¨c_fun˘i⁄_ty≥
 
	g‚_ty≥
;

1821 
¨c_‰ame_öfo
 
	g‰ame_öfo
;

1823 
	gu«lign
;

1824 
	gf‹˚_sh‹t_suffix
;

1825 c⁄° *
	gsize_ªas⁄
;

1826 
¨c_ccfsm
 
	gccfsm_cuºít
;

1828 
πx
 
	gccfsm_cuºít_ö¢
;

1829 
	g¨c_ª‹g_°¨ãd
;

1830 
	g¥esˇn_öôülized
;

1831 } 
	tmachöe_fun˘i⁄
;

1838 
¨c_fun˘i⁄_ty≥


1839 
	$¨c_compuã_fun˘i⁄_ty≥
 (
fun˘i⁄
 *
fun
)

1841 
åì
 
de˛
 = 
fun
->decl;

1842 
åì
 
a
;

1843 
¨c_fun˘i⁄_ty≥
 
‚_ty≥
 = 
fun
->
machöe
->fn_type;

1845 i‡(
‚_ty≥
 !
ARC_FUNCTION_UNKNOWN
)

1846  
‚_ty≥
;

1849 
‚_ty≥
 = 
ARC_FUNCTION_NORMAL
;

1852 
a
 = 
	`DECL_ATTRIBUTES
 (
de˛
);

1853 
a
;

1854 
a
 = 
	`TREE_CHAIN
 (a))

1856 
åì
 
«me
 = 
	`TREE_PURPOSE
 (
a
), 
¨gs
 = 
	`TREE_VALUE
 (a);

1858 i‡(
«me
 =
	`gë_idítifõr
 ("interrupt")

1859 && 
	`li°_Àngth
 (
¨gs
) == 1

1860 && 
	`TREE_CODE
 (
	`TREE_VALUE
 (
¨gs
)Ë=
STRING_CST
)

1862 
åì
 
vÆue
 = 
	`TREE_VALUE
 (
¨gs
);

1864 i‡(!
	`°rcmp
 (
	`TREE_STRING_POINTER
 (
vÆue
), "ilink1"))

1865 
‚_ty≥
 = 
ARC_FUNCTION_ILINK1
;

1866 i‡(!
	`°rcmp
 (
	`TREE_STRING_POINTER
 (
vÆue
), "ilink2"))

1867 
‚_ty≥
 = 
ARC_FUNCTION_ILINK2
;

1869 
	`gcc_uƒóchabÀ
 ();

1874  
fun
->
machöe
->
‚_ty≥
 = fn_type;

1875 
	}
}

1877 
	#FRAME_POINTER_MASK
 (1 << (
FRAME_POINTER_REGNUM
))

	)

1878 
	#RETURN_ADDR_MASK
 (1 << (
RETURN_ADDR_REGNUM
))

	)

1888 
	#MUST_SAVE_REGISTER
(
ªgno
, 
öãºu±_p
) \

1889 (((
ªgno
Ë!
RETURN_ADDR_REGNUM
 && (ªgnoË!
FRAME_POINTER_REGNUM
 \

1890 && (
	`df_ªgs_evî_live_p
 (
ªgno
Ë&& (!
ˇŒ_u£d_ªgs
[ªgno] || 
öãºu±_p
))) \

1891 || (
Êag_pic
 && 
¸é
->
u£s_pic_off£t_èbÀ
 \

1892 && 
ªgno
 =
PIC_OFFSET_TABLE_REGNUM
Ë)

	)

1894 
	#MUST_SAVE_RETURN_ADDR
 \

1895 (
cfun
->
machöe
->
‰ame_öfo
.
ßve_ªtu∫_addr
)

	)

1905 
	$¨c_compuã_mûlicode_ßve_ª°‹e_ªgs
 (
gmask
,

1906 
¨c_‰ame_öfo
 *
‰ame
)

1908 
ªgno
;

1910 
°¨t_ªg
 = 13, 
íd_ªg
 = 25;

1912 
ªgno
 = 
°¨t_ªg
;Ñegnÿ<
íd_ªg
 && (
gmask
 & (1L <<Ñegno));)

1913 
ªgno
++;

1914 
íd_ªg
 = 
ªgno
 - 1;

1918 i‡(
ªgno
 - 
°¨t_ªg
 >3 - (
¸é
->
is_Àaf
 == 0))

1920 
‰ame
->
mûlicode_°¨t_ªg
 = 13;

1921 
‰ame
->
mûlicode_íd_ªg
 = 
ªgno
 - 1;

1925 
	}
}

1933 
	$¨c_compuã_‰ame_size
 (
size
)

1935 
ªgno
;

1936 
tŸÆ_size
, 
v¨_size
, 
¨gs_size
, 
¥ëíd_size
, 
exåa_size
;

1937 
ªg_size
, 
ªg_off£t
;

1938 
gmask
;

1939 
¨c_fun˘i⁄_ty≥
 
‚_ty≥
;

1940 
öãºu±_p
;

1941 
¨c_‰ame_öfo
 *
‰ame_öfo
 = &
cfun
->
machöe
->frame_info;

1943 
size
 = 
	`ARC_STACK_ALIGN
 (size);

1946 
v¨_size
 = 
size
;

1949 
¨gs_size
 = 
¸é
->
outgoög_¨gs_size
;

1957 
ªg_size
 = 0;

1958 
gmask
 = 0;

1959 
‚_ty≥
 = 
	`¨c_compuã_fun˘i⁄_ty≥
 (
cfun
);

1960 
öãºu±_p
 = 
	`ARC_INTERRUPT_P
 (
‚_ty≥
);

1962 
ªgno
 = 0;Ñegno <= 31;Ñegno++)

1964 i‡(
	`MUST_SAVE_REGISTER
 (
ªgno
, 
öãºu±_p
))

1966 
ªg_size
 +
UNITS_PER_WORD
;

1967 
gmask
 |1 << 
ªgno
;

1975 
‰ame_öfo
->
ßve_ªtu∫_addr


1976 (!
¸é
->
is_Àaf
 || 
	`df_ªgs_evî_live_p
 (
RETURN_ADDR_REGNUM
));

1978 i‡(
›timize_size
 && !
TARGET_NO_MILLICODE_THUNK_SET
)

1980 i‡(
	`¨c_compuã_mûlicode_ßve_ª°‹e_ªgs
 (
gmask
, 
‰ame_öfo
))

1981 
‰ame_öfo
->
ßve_ªtu∫_addr
 = 
åue
;

1984 
exåa_size
 = 0;

1985 i‡(
MUST_SAVE_RETURN_ADDR
)

1986 
exåa_size
 = 4;

1987 i‡(
‰ame_poöãr_√eded
)

1988 
exåa_size
 += 4;

1991 
¥ëíd_size
 = 
¸é
->
¨gs
.
¥ëíd_¨gs_size
;

1995 
exåa_∂us_ªg_size
;

1996 
exåa_∂us_ªg_size_Æig√d
;

1998 
exåa_∂us_ªg_size
 = 
exåa_size
 + 
ªg_size
;

1999 
exåa_∂us_ªg_size_Æig√d
 = 
	`ARC_STACK_ALIGN
(
exåa_∂us_ªg_size
);

2000 
ªg_size
 = 
exåa_∂us_ªg_size_Æig√d
 - 
exåa_size
;

2004 
tŸÆ_size
 = 
v¨_size
 + 
¨gs_size
 + 
exåa_size
 + 
¥ëíd_size
 + 
ªg_size
;

2006 
tŸÆ_size
 = 
	`ARC_STACK_ALIGN
 (total_size);

2011 
ªg_off£t
 = 
tŸÆ_size
 - (
¥ëíd_size
 + 
ªg_size
 + 
exåa_size
)

2012 + (
‰ame_poöãr_√eded
 ? 4 : 0);

2015 
‰ame_öfo
->
tŸÆ_size
 =Åotal_size;

2016 
‰ame_öfo
->
exåa_size
 =Éxtra_size;

2017 
‰ame_öfo
->
¥ëíd_size
 =Öretend_size;

2018 
‰ame_öfo
->
v¨_size
 = var_size;

2019 
‰ame_öfo
->
¨gs_size
 =árgs_size;

2020 
‰ame_öfo
->
ªg_size
 =Ñeg_size;

2021 
‰ame_öfo
->
ªg_off£t
 =Ñeg_offset;

2022 
‰ame_öfo
->
gmask
 = gmask;

2023 
‰ame_öfo
->
öôülized
 = 
ªlﬂd_com∂ëed
;

2026  
tŸÆ_size
;

2027 
	}
}

2038 
	$¨c_ßve_ª°‹e
 (
πx
 
ba£_ªg
,

2039 
gmask
, 
ïûogue_p
, *
fú°_off£t
)

2041 
off£t
 = 0;

2042 
ªgno
;

2043 
¨c_‰ame_öfo
 *
‰ame
 = &
cfun
->
machöe
->
‰ame_öfo
;

2044 
πx
 
sibthunk_ö¢
 = 
NULL_RTX
;

2046 i‡(
gmask
)

2060 i‡(
ïûogue_p
 =2 || 
‰ame
->
mûlicode_íd_ªg
 > 14)

2062 
°¨t_ˇŒ
 = 
‰ame
->
mûlicode_°¨t_ªg
;

2063 
íd_ˇŒ
 = 
‰ame
->
mûlicode_íd_ªg
;

2064 
n_ªgs
 = 
íd_ˇŒ
 - 
°¨t_ˇŒ
 + 1;

2065 
i
 = 0, 
r
, 
off
 = 0;

2066 
πx
 
ö¢
;

2067 
πx
 
ªt_addr
 = 
	`gí_πx_REG
 (
Pmode
, 
RETURN_ADDR_REGNUM
);

2069 i‡(*
fú°_off£t
)

2072 
	`gcc_as£π
 (
ïûogue_p
 || 
	`abs
 (*
fú°_off£t
 <= 127));

2073 
	`‰ame_add
 (
ba£_ªg
, *
fú°_off£t
);

2074 *
fú°_off£t
 = 0;

2076 
ö¢
 = 
gí_πx_PARALLEL


2077 (
VOIDmode
, 
	`πvec_Æloc
 ((
ïûogue_p
 =2Ë+ 
n_ªgs
 + 1));

2078 i‡(
ïûogue_p
 == 2)

2079 
i
 += 2;

2081 
	`XVECEXP
 (
ö¢
, 0, 
n_ªgs
Ë
	`gí_πx_CLOBBER
 (
VOIDmode
, 
ªt_addr
);

2082 
r
 = 
°¨t_ˇŒ
;Ñ <
íd_ˇŒ
;Ñ++, 
off
 +
UNITS_PER_WORD
, 
i
++)

2084 
πx
 
ªg
 = 
	`gí_πx_REG
 (
SImode
, 
r
);

2085 
πx
 
mem


2086 
	`gí_‰ame_mem
 (
SImode
, 
	`∂us_c⁄°™t
 (
Pmode
, 
ba£_ªg
, 
off
));

2088 i‡(
ïûogue_p
)

2089 
	`XVECEXP
 (
ö¢
, 0, 
i
Ë
	`gí_πx_SET
 (
VOIDmode
, 
ªg
, 
mem
);

2091 
	`XVECEXP
 (
ö¢
, 0, 
i
Ë
	`gí_πx_SET
 (
VOIDmode
, 
mem
, 
ªg
);

2092 
gmask
 = gmask & ~(1L << 
r
);

2094 i‡(
ïûogue_p
 == 2)

2095 
sibthunk_ö¢
 = 
ö¢
;

2097 
	`‰ame_ö¢
 (
ö¢
);

2098 
off£t
 +
off
;

2101 
ªgno
 = 0;Ñegno <= 31;Ñegno++)

2103 i‡((
gmask
 & (1L << 
ªgno
)) != 0)

2105 
πx
 
ªg
 = 
	`gí_πx_REG
 (
SImode
, 
ªgno
);

2106 
πx
 
addr
, 
mem
;

2108 i‡(*
fú°_off£t
)

2110 
	`gcc_as£π
 (!
off£t
);

2111 
addr
 = 
	`∂us_c⁄°™t
 (
Pmode
, 
ba£_ªg
, *
fú°_off£t
);

2112 
addr
 = 
	`gí_πx_PRE_MODIFY
 (
Pmode
, 
ba£_ªg
,áddr);

2113 *
fú°_off£t
 = 0;

2117 
	`gcc_as£π
 (
	`SMALL_INT
 (
off£t
));

2118 
addr
 = 
	`∂us_c⁄°™t
 (
Pmode
, 
ba£_ªg
, 
off£t
);

2120 
mem
 = 
	`gí_‰ame_mem
 (
SImode
, 
addr
);

2121 i‡(
ïûogue_p
)

2122 
	`‰ame_move_öc
 (
ªg
, 
mem
, 
ba£_ªg
, 
addr
);

2124 
	`‰ame_move_öc
 (
mem
, 
ªg
, 
ba£_ªg
, 
addr
);

2125 
off£t
 +
UNITS_PER_WORD
;

2129 i‡(
sibthunk_ö¢
)

2131 
πx
 
r12
 = 
	`gí_πx_REG
 (
Pmode
, 12);

2133 
	`‰ame_ö¢
 (
	`gí_πx_SET
 (
VOIDmode
, 
r12
, 
	`GEN_INT
 (
off£t
)));

2134 
	`XVECEXP
 (
sibthunk_ö¢
, 0, 0Ë
ªt_πx
;

2135 
	`XVECEXP
 (
sibthunk_ö¢
, 0, 1)

2136 
	`gí_πx_SET
 (
VOIDmode
, 
°ack_poöãr_πx
,

2137 
	`gí_πx_PLUS
 (
Pmode
, 
°ack_poöãr_πx
, 
r12
));

2138 
sibthunk_ö¢
 = 
	`emô_jump_ö¢
 (sibthunk_insn);

2139 
	`RTX_FRAME_RELATED_P
 (
sibthunk_ö¢
) = 1;

2141 
	}
}

2144 
	g¨c_ªtu∫_addªss_ªgs
[4]

2145 {0, 
RETURN_ADDR_REGNUM
, 
ILINK1_REGNUM
, 
ILINK2_REGNUM
};

2150 
	$¨c_ex∑nd_¥ﬁogue
 ()

2152 
size
 = 
	`gë_‰ame_size
 ();

2153 
gmask
 = 
cfun
->
machöe
->
‰ame_öfo
.gmask;

2155 
‰ame_size_to_Æloˇã
;

2159 
fú°_off£t
 = 0;

2161 
size
 = 
	`ARC_STACK_ALIGN
 (size);

2164 
size
 = (!
cfun
->
machöe
->
‰ame_öfo
.
öôülized


2165 ? 
	`¨c_compuã_‰ame_size
 (
size
)

2166 : 
cfun
->
machöe
->
‰ame_öfo
.
tŸÆ_size
);

2168 i‡(
Êag_°ack_ußge_öfo
)

2169 
cuºít_fun˘i⁄_°©ic_°ack_size
 = 
size
;

2172 
‰ame_size_to_Æloˇã
 = 
size
;

2175 
	`gcc_as£π
 (!(
size
 =0 && 
gmask
));

2178 i‡(
cfun
->
machöe
->
‰ame_öfo
.
¥ëíd_size
 != 0)

2181 
	`gcc_as£π
 (
cfun
->
machöe
->
‰ame_öfo
.
¥ëíd_size
 <= 32);

2183 
	`‰ame_°ack_add
 (-(
HOST_WIDE_INT
)
cfun
->
machöe
->
‰ame_öfo
.
¥ëíd_size
);

2184 
‰ame_size_to_Æloˇã
 -
cfun
->
machöe
->
‰ame_öfo
.
¥ëíd_size
;

2188 i‡(
MUST_SAVE_RETURN_ADDR
)

2190 
πx
 
ø
 = 
	`gí_πx_REG
 (
SImode
, 
RETURN_ADDR_REGNUM
);

2191 
πx
 
mem
 = 
	`gí_‰ame_mem
 (
Pmode
, 
	`gí_πx_PRE_DEC
 (Pmode, 
°ack_poöãr_πx
));

2193 
	`‰ame_move_öc
 (
mem
, 
ø
, 
°ack_poöãr_πx
, 0);

2194 
‰ame_size_to_Æloˇã
 -
UNITS_PER_WORD
;

2200 i‡(
cfun
->
machöe
->
‰ame_öfo
.
ªg_size
)

2202 
fú°_off£t
 = -
cfun
->
machöe
->
‰ame_öfo
.
ªg_size
;

2204 
	`¨c_ßve_ª°‹e
 (
°ack_poöãr_πx
, 
gmask
, 0, &
fú°_off£t
);

2205 
‰ame_size_to_Æloˇã
 -
cfun
->
machöe
->
‰ame_öfo
.
ªg_size
;

2210 i‡(
‰ame_poöãr_√eded
)

2212 
πx
 
addr
 = 
	`gí_πx_PLUS
 (
Pmode
, 
°ack_poöãr_πx
,

2213 
	`GEN_INT
 (-
UNITS_PER_WORD
 + 
fú°_off£t
));

2214 
πx
 
mem
 = 
	`gí_‰ame_mem
 (
Pmode
, 
	`gí_πx_PRE_MODIFY
 (Pmode,

2215 
°ack_poöãr_πx
,

2216 
addr
));

2217 
	`‰ame_move_öc
 (
mem
, 
‰ame_poöãr_πx
, 
°ack_poöãr_πx
, 0);

2218 
‰ame_size_to_Æloˇã
 -
UNITS_PER_WORD
;

2219 
fú°_off£t
 = 0;

2220 
	`‰ame_move
 (
‰ame_poöãr_πx
, 
°ack_poöãr_πx
);

2229 
‰ame_size_to_Æloˇã
 -
fú°_off£t
;

2231 i‡(
‰ame_size_to_Æloˇã
 > 0)

2232 
	`‰ame_°ack_add
 ((
HOST_WIDE_INT
Ë0 - 
‰ame_size_to_Æloˇã
);

2235 i‡(
¸é
->
u£s_pic_off£t_èbÀ
)

2236 
	`¨c_föÆize_pic
 ();

2237 
	}
}

2243 
	$¨c_ex∑nd_ïûogue
 (
sibˇŒ_p
)

2245 
size
 = 
	`gë_‰ame_size
 ();

2246 
¨c_fun˘i⁄_ty≥
 
‚_ty≥
 = 
	`¨c_compuã_fun˘i⁄_ty≥
 (
cfun
);

2248 
size
 = 
	`ARC_STACK_ALIGN
 (size);

2249 
size
 = (!
cfun
->
machöe
->
‰ame_öfo
.
öôülized


2250 ? 
	`¨c_compuã_‰ame_size
 (
size
)

2251 : 
cfun
->
machöe
->
‰ame_öfo
.
tŸÆ_size
);

2255 
¥ëíd_size
 = 
cfun
->
machöe
->
‰ame_öfo
.pretend_size;

2256 
‰ame_size
;

2257 
size_to_dóŒoˇã
;

2258 
ª°‹ed
;

2260 
boﬁ
 
Â_ª°‹ed_p
;

2262 
ˇn_åu°_•_p
 = !
cfun
->
ˇŒs_Æloˇ
;

2263 
fú°_off£t
 = 0;

2264 
mûlicode_p
 = 
cfun
->
machöe
->
‰ame_öfo
.
mûlicode_íd_ªg
 > 0;

2266 
size_to_dóŒoˇã
 = 
size
;

2268 
‰ame_size
 = 
size
 - (
¥ëíd_size
 +

2269 
cfun
->
machöe
->
‰ame_öfo
.
ªg_size
 +

2270 
cfun
->
machöe
->
‰ame_öfo
.
exåa_size
);

2277 i‡(!
ˇn_åu°_•_p
)

2278 
	`gcc_as£π
 (
‰ame_poöãr_√eded
);

2282 i‡(
‰ame_size
)

2284 i‡(
‰ame_poöãr_√eded
)

2285 
	`‰ame_move
 (
°ack_poöãr_πx
, 
‰ame_poöãr_πx
);

2287 
fú°_off£t
 = 
‰ame_size
;

2288 
size_to_dóŒoˇã
 -
‰ame_size
;

2290 i‡(!
ˇn_åu°_•_p
)

2291 
	`‰ame_°ack_add
 (-
‰ame_size
);

2295 i‡(
‰ame_poöãr_√eded
)

2297 
πx
 
addr
 = 
	`gí_πx_POST_INC
 (
Pmode
, 
°ack_poöãr_πx
);

2299 
	`‰ame_move_öc
 (
‰ame_poöãr_πx
, 
	`gí_‰ame_mem
 (
Pmode
, 
addr
),

2300 
°ack_poöãr_πx
, 0);

2301 
size_to_dóŒoˇã
 -
UNITS_PER_WORD
;

2305 i‡(
mûlicode_p
)

2307 
sibthunk_p
 = (!
sibˇŒ_p


2308 && 
‚_ty≥
 =
ARC_FUNCTION_NORMAL


2309 && !
cfun
->
machöe
->
‰ame_öfo
.
¥ëíd_size
);

2311 
	`gcc_as£π
 (!(
cfun
->
machöe
->
‰ame_öfo
.
gmask


2312 & (
FRAME_POINTER_MASK
 | 
RETURN_ADDR_MASK
)));

2313 
	`¨c_ßve_ª°‹e
 (
°ack_poöãr_πx
,

2314 
cfun
->
machöe
->
‰ame_öfo
.
gmask
,

2315 1 + 
sibthunk_p
, &
fú°_off£t
);

2316 i‡(
sibthunk_p
)

2317 
ïûogue_d⁄e
;

2322 i‡((!
	`SMALL_INT
 (
fú°_off£t
)

2323 && 
cfun
->
machöe
->
‰ame_öfo
.
gmask


2324 && ((
TARGET_ARC700
 && !
›timize_size
)

2325 ? 
fú°_off£t
 <= 0x800

2326 : 
	`ßtisfõs_c⁄°øöt_C2a
 (
	`GEN_INT
 (
fú°_off£t
))))

2329 || (
MUST_SAVE_RETURN_ADDR


2330 && !
	`SMALL_INT
 ((
cfun
->
machöe
->
‰ame_öfo
.
ªg_size
 + 
fú°_off£t
) >> 2)

2331 && 
cfun
->
machöe
->
‰ame_öfo
.
gmask
))

2333 
	`‰ame_°ack_add
 (
fú°_off£t
);

2334 
fú°_off£t
 = 0;

2336 i‡(
MUST_SAVE_RETURN_ADDR
)

2338 
πx
 
ø
 = 
	`gí_πx_REG
 (
Pmode
, 
RETURN_ADDR_REGNUM
);

2339 
ø_offs
 = 
cfun
->
machöe
->
‰ame_öfo
.
ªg_size
 + 
fú°_off£t
;

2340 
πx
 
addr
 = 
	`∂us_c⁄°™t
 (
Pmode
, 
°ack_poöãr_πx
, 
ø_offs
);

2344 i‡(!
	`SMALL_INT
 (
ø_offs
 >> 2)

2345 && !
cfun
->
machöe
->
‰ame_öfo
.
gmask


2346 && ((
TARGET_ARC700
 && !
›timize_size
)

2347 ? 
ø_offs
 <= 0x800

2348 : 
	`ßtisfõs_c⁄°øöt_C2a
 (
	`GEN_INT
 (
ø_offs
))))

2350 
size_to_dóŒoˇã
 -
ø_offs
 - 
fú°_off£t
;

2351 
fú°_off£t
 = 0;

2352 
	`‰ame_°ack_add
 (
ø_offs
);

2353 
ø_offs
 = 0;

2354 
addr
 = 
°ack_poöãr_πx
;

2361 i‡(
ø_offs


2362 && !
cfun
->
machöe
->
‰ame_öfo
.
gmask


2363 && (
	`SMALL_INT
 (
ø_offs
) || !SMALL_INT (ra_offs >> 2)))

2365 
addr
 = 
	`gí_πx_PRE_MODIFY
 (
Pmode
, 
°ack_poöãr_πx
,áddr);

2366 
fú°_off£t
 = 0;

2367 
size_to_dóŒoˇã
 -
cfun
->
machöe
->
‰ame_öfo
.
ªg_size
;

2369 i‡(!
ø_offs
 && 
size_to_dóŒoˇã
 =
UNITS_PER_WORD
)

2371 
addr
 = 
	`gí_πx_POST_INC
 (
Pmode
,áddr);

2372 
size_to_dóŒoˇã
 = 0;

2374 
	`‰ame_move_öc
 (
ø
, 
	`gí_‰ame_mem
 (
Pmode
, 
addr
), 
°ack_poöãr_πx
,áddr);

2377 i‡(!
mûlicode_p
)

2379 i‡(
cfun
->
machöe
->
‰ame_öfo
.
ªg_size
)

2380 
	`¨c_ßve_ª°‹e
 (
°ack_poöãr_πx
,

2382 
cfun
->
machöe
->
‰ame_öfo
.
gmask


2383 & ~(
FRAME_POINTER_MASK
 | 
RETURN_ADDR_MASK
), 1, &
fú°_off£t
);

2393 
size_to_dóŒoˇã
 +
fú°_off£t
;

2394 
ª°‹ed
 = 
size
 - 
size_to_dóŒoˇã
;

2396 
Â_ª°‹ed_p
 = 1;

2399 i‡(
size
 > 
ª°‹ed
)

2400 
	`‰ame_°ack_add
 (
size
 - 
ª°‹ed
);

2402 i‡(
sibˇŒ_p
 =
FALSE
)

2403 
	`emô_jump_ö¢
 (
	`gí_ªtu∫_i
 ());

2405 
ïûogue_d⁄e
:

2406 i‡(!
TARGET_EPILOGUE_CFI
)

2408 
πx
 
ö¢
;

2410 
ö¢
 = 
	`gë_ö¢s
 (); in¢; in¢ = 
	`NEXT_INSN
 (insn))

2411 
	`RTX_FRAME_RELATED_P
 (
ö¢
) = 0;

2413 
	}
}

2431 
	$¨c_föÆize_pic
 ()

2433 
πx
 
∑t
;

2434 
πx
 
ba£±r_πx
 = 
	`gí_πx_REG
 (
Pmode
, 
PIC_OFFSET_TABLE_REGNUM
);

2436 i‡(
¸é
->
u£s_pic_off£t_èbÀ
 == 0)

2439 
	`gcc_as£π
 (
Êag_pic
 != 0);

2441 
∑t
 = 
	`gí_πx_SYMBOL_REF
 (
Pmode
, "_DYNAMIC");

2442 
∑t
 = 
	`gí_πx_UNSPEC
 (
Pmode
, 
	`gí_πvec
 (1,Ö©), 
ARC_UNSPEC_GOT
);

2443 
∑t
 = 
	`gí_πx_CONST
 (
Pmode
,Öat);

2445 
∑t
 = 
	`gí_πx_SET
 (
VOIDmode
, 
ba£±r_πx
,Öat);

2447 
	`emô_ö¢
 (
∑t
);

2448 
	}
}

2455 
	$emô_shi·
 (
πx_code
 
code
, 
πx
 
›0
,Ñtx 
›1
,Ñtx 
›2
)

2457 
πx
 
shi·
 = 
	`gí_πx_fmt_ì
 (
code
, 
SImode
, 
›1
, 
›2
);

2458 
πx
 
∑t


2459 ((
	`shi·4_›î©‹
 (
shi·
, 
SImode
Ë? 
gí_shi·_si3
 : 
gí_shi·_si3_lo›
)

2460 (
›0
, 
›1
, 
›2
, 
shi·
));

2461 
	`emô_ö¢
 (
∑t
);

2462 
	}
}

2477 
	$ouçut_shi·
 (
πx
 *
›î™ds
)

2480 
πx
 
shi·
 = 
›î™ds
[3];

2481 
machöe_mode
 
mode
 = 
	`GET_MODE
 (
shi·
);

2482 
πx_code
 
code
 = 
	`GET_CODE
 (
shi·
);

2483 c⁄° *
shi·_⁄e
;

2485 
	`gcc_as£π
 (
mode
 =
SImode
);

2487 
code
)

2489 
ASHIFT
: 
shi·_⁄e
 = "add %0,%1,%1"; ;

2490 
ASHIFTRT
: 
shi·_⁄e
 = "asr %0,%1"; ;

2491 
LSHIFTRT
: 
shi·_⁄e
 = "lsr %0,%1"; ;

2492 : 
	`gcc_uƒóchabÀ
 ();

2495 i‡(
	`GET_CODE
 (
›î™ds
[2]Ë!
CONST_INT
)

2497 
	`ouçut_asm_ö¢
 ("™d.‡Õ_cou¡,%2, 0x1f", 
›î™ds
);

2498 
shi·lo›
;

2502 
n
;

2504 
n
 = 
	`INTVAL
 (
›î™ds
[2]);

2507 
n
 =Ç & 0x1f;

2512 i‡(
code
 =
ASHIFT
 && 
n
 <= 9 &&Ç > 2

2513 && 
	`de°_ªg_›î™d
 (
›î™ds
[4], 
SImode
))

2515 
	`ouçut_asm_ö¢
 ("mov %4,0\n\èdd3 %0,%4,%1", 
›î™ds
);

2516 
n
 -=3 ;Ç >= 3;Ç -= 3)

2517 
	`ouçut_asm_ö¢
 ("add3 %0,%4,%0", 
›î™ds
);

2518 i‡(
n
 == 2)

2519 
	`ouçut_asm_ö¢
 ("add2 %0,%4,%0", 
›î™ds
);

2520 i‡(
n
)

2521 
	`ouçut_asm_ö¢
 ("add %0,%0,%0", 
›î™ds
);

2523 i‡(
n
 <= 4)

2525 --
n
 >= 0)

2527 
	`ouçut_asm_ö¢
 (
shi·_⁄e
, 
›î™ds
);

2528 
›î™ds
[1] = operands[0];

2532 i‡(
n
 =
BITS_PER_WORD
 - 1)

2534 
code
)

2536 
ASHIFT
 :

2537 
	`ouçut_asm_ö¢
 ("™d %0,%1,1\n\å‹ %0,%0", 
›î™ds
);

2539 
ASHIFTRT
 :

2541 
	`ouçut_asm_ö¢
 ("add.‡0,%1,%1\n\tsb¯%0,%0,%0", 
›î™ds
);

2543 
LSHIFTRT
 :

2545 
	`ouçut_asm_ö¢
 ("add.‡0,%1,%1\n\ål¯%0,0", 
›î™ds
);

2551 i‡(
n
 =
BITS_PER_WORD
 - 2 && 
	`de°_ªg_›î™d
 (
›î™ds
[4], 
SImode
))

2553 
code
)

2555 
ASHIFT
 :

2556 
	`ouçut_asm_ö¢
 ("™d %0,%1,3\n\å‹ %0,%0\n\å‹ %0,%0", 
›î™ds
);

2558 
ASHIFTRT
 :

2560 
	`ouçut_asm_ö¢
 ("add.f %4,%1,%1\n\tsbc %0,%0,%0\n\t"

2561 "add.‡0,%4,%4\n\ål¯%0,%0", 
›î™ds
);

2563 
	`ouçut_asm_ö¢
 ("add.f %4,%1,%1\n\tbxor %0,%4,31\n\t"

2564 "sbc.‡%0,%0,%4\n\ål¯%0,%0", 
›î™ds
);

2567 
LSHIFTRT
 :

2569 
	`ouçut_asm_ö¢
 ("add.f %4,%1,%1\n\trlc %0,0\n\t"

2570 "add.‡0,%4,%4\n\ål¯%0,%0", 
›î™ds
);

2572 
	`ouçut_asm_ö¢
 ("add.f %0,%1,%1\n\trlc.f %0,0\n\t"

2573 "™d %0,%0,1\n\ål¯%0,%0", 
›î™ds
);

2580 i‡(
n
 =
BITS_PER_WORD
 - 3 && 
code
 =
ASHIFT
)

2581 
	`ouçut_asm_ö¢
 ("and %0,%1,7\n\tror %0,%0\n\tror %0,%0\n\tror %0,%0",

2582 
›î™ds
);

2586 
›î™ds
[2] = 
	`GEN_INT
 (
n
);

2587 
	`ouçut_asm_ö¢
 ("mov.‡Õ_cou¡, %2", 
›î™ds
);

2589 
shi·lo›
:

2591 
	`ouçut_asm_ö¢
 ("Õnz\t2f", 
›î™ds
);

2592 
	`ouçut_asm_ö¢
 (
shi·_⁄e
, 
›î™ds
);

2593 
	`ouçut_asm_ö¢
 ("n›", 
›î™ds
);

2594 
	`Ârötf
 (
asm_out_fûe
, "2:\t%sÉnd single insnÜoop\n",

2595 
ASM_COMMENT_START
);

2601 
	}
}

2608 
	$emô_°‹e_dúe˘
 (
πx
 
block
, 
off£t
, 
vÆue
)

2610 
	`emô_ö¢
 (
	`gí_°‹e_dúe˘
 (
	`adju°_addªss
 (
block
, 
SImode
, 
off£t
),

2611 
	`f‹˚_ªg
 (
SImode
,

2612 
	`gí_öt_mode
 (
vÆue
, 
SImode
))));

2613 
	}
}

2649 
	$¨c_öôülize_åampﬁöe
 (
πx
 
åamp
, 
åì
 
‚de˛
,Ñtx 
cxt
)

2651 
πx
 
‚addr
 = 
	`XEXP
 (
	`DECL_RTL
 (
‚de˛
), 0);

2653 
	`emô_°‹e_dúe˘
 (
åamp
, 0, 
TARGET_BIG_ENDIAN
 ? 0x78e0d403 : 0xd40378e0);

2654 
	`emô_°‹e_dúe˘
 (
åamp
, 4, 
TARGET_BIG_ENDIAN
 ? 0x170c700b : 0x700b170c);

2655 
	`emô_°‹e_dúe˘
 (
åamp
, 8, 
TARGET_BIG_ENDIAN
 ? 0x7c0078e0 : 0x78e07c00);

2656 
	`emô_move_ö¢
 (
	`adju°_addªss
 (
åamp
, 
SImode
, 12), 
‚addr
);

2657 
	`emô_move_ö¢
 (
	`adju°_addªss
 (
åamp
, 
SImode
, 16), 
cxt
);

2658 
	`emô_ö¢
 (
	`gí_Êush_iˇche
 (
	`adju°_addªss
 (
åamp
, 
SImode
, 0)));

2659 
	}
}

2664 
πx


2665 
	$¨c_åampﬁöe_adju°_addªss
 (
πx
 
addr
)

2667  
	`∂us_c⁄°™t
 (
Pmode
, 
addr
, 2);

2668 
	}
}

2672 
	gouçut_sˇÀd
 = 0;

2708 
	$¨c_¥öt_›î™d
 (
FILE
 *
fûe
, 
πx
 
x
, 
code
)

2710 
code
)

2713 i‡(
	`GET_CODE
 (
x
Ë=
CONST_INT
)

2714 
	`Ârötf
 (
fûe
, "%d",
	`exa˘_log2
(
	`INTVAL
 (
x
) + 1) - 1 );

2716 
	`ouçut_›î™d_losßge
 ("invalid operandÅo %%Z code");

2721 i‡(
	`GET_CODE
 (
x
Ë=
CONST_INT
)

2722 
	`Ârötf
 (
fûe
, "%d",
	`exa˘_log2
(
	`INTVAL
 (
x
)) );

2724 
	`ouçut_›î™d_losßge
 ("invalid operandÅo %%z code");

2729 i‡(
	`GET_CODE
 (
x
Ë=
CONST_INT
)

2730 
	`Ârötf
 (
fûe
, "%d",
	`exa˘_log2
(~
	`INTVAL
 (
x
)) );

2732 
	`ouçut_›î™d_losßge
 ("invalid operandÅo %%M code");

2748 i‡(
föÆ_£quí˚
 && 
	`XVECLEN
 (final_sequence, 0) != 1)

2750 
πx
 
jump
 = 
	`XVECEXP
 (
föÆ_£quí˚
, 0, 0);

2751 
πx
 
dñay
 = 
	`XVECEXP
 (
föÆ_£quí˚
, 0, 1);

2754 i‡(
	`INSN_DELETED_P
 (
dñay
))

2756 i‡(
	`JUMP_P
 (
jump
Ë&& 
	`INSN_ANNULLED_BRANCH_P
 (jump))

2757 
	`Âuts
 (
	`INSN_FROM_TARGET_P
 (
dñay
)

2759 : (
TARGET_AT_DBR_CONDEXEC
 && 
code
 == '#' ? ".d" : ".nd"),

2760 
fûe
);

2762 
	`Âuts
 (".d", 
fûe
);

2772 i‡(
cuºít_ö¢_¥ediˇã
)

2773 
¨c_ccfsm_cuºít
.
cc


2774 
	`gë_¨c_c⁄dôi⁄_code
 (
cuºít_ö¢_¥ediˇã
);

2775 i‡(
	`ARC_CCFSM_COND_EXEC_P
 (&
¨c_ccfsm_cuºít
))

2778 i‡(!
föÆ_£quí˚
 || 
	`XVECLEN
 (final_sequence, 0) < 2

2779 || 
cuºít_ö¢_¥ediˇã


2780 || 
	`CALL_P
 (
	`XVECEXP
 (
föÆ_£quí˚
, 0, 0))

2781 || 
	`sim∂ejump_p
 (
	`XVECEXP
 (
föÆ_£quí˚
, 0, 0)))

2785 
	`Ârötf
 (
fûe
, "%s%s",

2786 
code
 == '?' ? "." : "",

2787 
¨c_c⁄dôi⁄_codes
[
¨c_ccfsm_cuºít
.
cc
]);

2791 i‡(
code
 == '!'

2792 && (
¨c_ccfsm_cuºít
.
cc
 =
ARC_CC_EQ


2793 || 
¨c_ccfsm_cuºít
.
cc
 =
ARC_CC_NE


2795 
	`ouçut_sh‹t_suffix
 (
fûe
);

2797 i‡(
code
 == '!')

2798 
	`Âuts
 (
¨c_c⁄dôi⁄_codes
[
¨c_ccfsm_cuºít
.
cc
], 
fûe
);

2801 
πx
 
jump
 = 
	`XVECEXP
 (
föÆ_£quí˚
, 0, 0);

2802 
πx
 
ö¢
 = 
	`XVECEXP
 (
föÆ_£quí˚
, 0, 1);

2806 i‡(
	`JUMP_P
 (
jump
Ë&& 
	`INSN_ANNULLED_BRANCH_P
 (jump))

2808 i‡(
	`INSN_FROM_TARGET_P
 (
ö¢
))

2809 
	`Ârötf
 (
fûe
, "%s%s",

2810 
code
 == '?' ? "." : "",

2811 
¨c_c⁄dôi⁄_codes
[
	`ARC_INVERSE_CONDITION_CODE
 (
¨c_ccfsm_cuºít
.
cc
)]);

2813 
	`Ârötf
 (
fûe
, "%s%s",

2814 
code
 == '?' ? "." : "",

2815 
¨c_c⁄dôi⁄_codes
[
¨c_ccfsm_cuºít
.
cc
]);

2816 i‡(
¨c_ccfsm_cuºít
.
°©e
 == 5)

2817 
¨c_ccfsm_cuºít
.
°©e
 = 0;

2822 
	`ouçut_sh‹t_suffix
 (
fûe
);

2827 
	`ouçut_sh‹t_suffix
 (
fûe
);

2831 
	`gcc_uƒóchabÀ
 ();

2833 
	`Âuts
 (
¨c_c⁄dôi⁄_codes
[
	`gë_¨c_c⁄dôi⁄_code
 (
x
)], 
fûe
);

2836 
	`Âuts
 (
¨c_c⁄dôi⁄_codes
[
ARC_INVERSE_CONDITION_CODE


2837 (
	`gë_¨c_c⁄dôi⁄_code
 (
x
))],

2838 
fûe
);

2843 i‡(
	`GET_CODE
 (
x
Ë=
REG
)

2844 
	`Âuts
 (
ªg_«mes
[
	`REGNO
 (
x
)+1], 
fûe
);

2845 i‡(
	`GET_CODE
 (
x
Ë=
MEM
)

2847 
	`Âutc
 ('[', 
fûe
);

2855 i‡(
	`GET_CODE
 (
	`XEXP
 (
x
, 0)Ë=
PRE_INC


2856 || 
	`GET_CODE
 (
	`XEXP
 (
x
, 0)Ë=
PRE_DEC


2857 || 
	`GET_CODE
 (
	`XEXP
 (
x
, 0)Ë=
PRE_MODIFY


2858 || 
	`GET_CODE
 (
	`XEXP
 (
x
, 0)Ë=
POST_INC


2859 || 
	`GET_CODE
 (
	`XEXP
 (
x
, 0)Ë=
POST_DEC


2860 || 
	`GET_CODE
 (
	`XEXP
 (
x
, 0)Ë=
POST_MODIFY
)

2861 
	`ouçut_addªss
 (
	`∂us_c⁄°™t
 (
Pmode
, 
	`XEXP
 (XEXP (
x
, 0), 0), 4));

2862 i‡(
ouçut_sˇÀd
)

2864 
πx
 
addr
 = 
	`XEXP
 (
x
, 0);

2865 
size
 = 
	`GET_MODE_SIZE
 (
	`GET_MODE
 (
x
));

2867 
	`ouçut_addªss
 (
	`∂us_c⁄°™t
 (
Pmode
, 
	`XEXP
 (
addr
, 0),

2868 ((
	`INTVAL
 (
	`XEXP
 (
addr
, 1)) + 4)

2869 >> (
size
 == 2 ? 1 : 2))));

2870 
ouçut_sˇÀd
 = 0;

2873 
	`ouçut_addªss
 (
	`∂us_c⁄°™t
 (
Pmode
, 
	`XEXP
 (
x
, 0), 4));

2874 
	`Âutc
 (']', 
fûe
);

2877 
	`ouçut_›î™d_losßge
 ("invalid operandÅo %%R code");

2883 i‡(
	`CONSTANT_P
 (
x
))

2885 
	`ouçut_addr_c⁄°
 (
fûe
, 
x
);

2891 i‡(
	`GET_CODE
 (
x
Ë=
REG
)

2894 i‡((
WORDS_BIG_ENDIAN
 !0Ë^ (
code
 == 'L'))

2895 
	`Âuts
 (
ªg_«mes
[
	`REGNO
 (
x
)], 
fûe
);

2897 
	`Âuts
 (
ªg_«mes
[
	`REGNO
 (
x
)+1], 
fûe
);

2899 i‡(
	`GET_CODE
 (
x
Ë=
CONST_INT


2900 || 
	`GET_CODE
 (
x
Ë=
CONST_DOUBLE
)

2902 
πx
 
fú°
, 
£c⁄d
;

2904 
	`•lô_doubÀ
 (
x
, &
fú°
, &
£c⁄d
);

2906 if((
WORDS_BIG_ENDIAN
) == 0)

2907 
	`Ârötf
 (
fûe
, "0x%08lx",

2908 
code
 ='L' ? 
	`INTVAL
 (
fú°
Ë: INTVAL (
£c⁄d
));

2910 
	`Ârötf
 (
fûe
, "0x%08lx",

2911 
code
 ='L' ? 
	`INTVAL
 (
£c⁄d
Ë: INTVAL (
fú°
));

2916 
	`ouçut_›î™d_losßge
 ("invalid operandÅo %%H/%%L code");

2920 
°r
[30];

2922 
	`gcc_as£π
 (
	`GET_CODE
 (
x
Ë=
CONST_DOUBLE


2923 && 
	`GET_MODE_CLASS
 (
	`GET_MODE
 (
x
)Ë=
MODE_FLOAT
);

2925 
	`ªÆ_to_decimÆ
 (
°r
, 
	`CONST_DOUBLE_REAL_VALUE
 (
x
),  (str), 0, 1);

2926 
	`Ârötf
 (
fûe
, "%s", 
°r
);

2931 i‡(
	`GET_CODE
 (
x
Ë=
MEM
)

2933 
πx
 
addr
 = 
	`XEXP
 (
x
, 0);

2934 
	`GET_CODE
 (
addr
))

2936 
PRE_INC
: 
PRE_DEC
: 
PRE_MODIFY
:

2937 
	`Âuts
 (".a", 
fûe
); ;

2938 
POST_INC
: 
POST_DEC
: 
POST_MODIFY
:

2939 
	`Âuts
 (".ab", 
fûe
); ;

2940 
PLUS
:

2942 i‡(
	`GET_CODE
 (
	`XEXP
 (
addr
, 0)Ë=
MULT
)

2943 
	`Âuts
 (".as", 
fûe
);

2945 i‡(
	`CONST_INT_P
 (
	`XEXP
 (
addr
, 1))

2946 && 
	`GET_MODE_SIZE
 (
	`GET_MODE
 (
x
)) > 1

2947 && (!(
	`INTVAL
 (
	`XEXP
 (
addr
, 1))

2948 & (
	`GET_MODE_SIZE
 (
	`GET_MODE
 (
x
)) - 1) & 3))

2950 && !
	`SMALL_INT_RANGE
(
	`INTVAL
 (
	`XEXP
 (
addr
, 1)),

2951 
	`GET_MODE_SIZE
 (
	`GET_MODE
 (
x
)) - 2, 0))

2953 
	`Âuts
 (".as", 
fûe
);

2954 
ouçut_sˇÀd
 = 1;

2957 
REG
:

2960 
	`gcc_as£π
 (
	`CONSTANT_P
 (
addr
)); ;

2964 
	`ouçut_›î™d_losßge
 ("invalid operandÅo %%U code");

2969 i‡(
	`GET_CODE
 (
x
Ë=
MEM
)

2971 i‡(
	`MEM_VOLATILE_P
 (
x
Ë&& !
TARGET_VOLATILE_CACHE_SET
 )

2972 
	`Âuts
 (".di", 
fûe
);

2975 
	`ouçut_›î™d_losßge
 ("invalid operandÅo %%V code");

2983 
	`Âuts
 (
ªg_«mes
[
	`REGNO
 (
x
)]+1, 
fûe
);

2991 
	`Âutc
('@',
fûe
);

2995 
	`GET_CODE
 (
x
))

2997 
PLUS
: 
	`Âuts
 ("add", 
fûe
); ;

2998 
SS_PLUS
: 
	`Âuts
 ("adds", 
fûe
); ;

2999 
AND
: 
	`Âuts
 ("™d", 
fûe
); ;

3000 
IOR
: 
	`Âuts
 ("‹", 
fûe
); ;

3001 
XOR
: 
	`Âuts
 ("x‹", 
fûe
); ;

3002 
MINUS
: 
	`Âuts
 ("sub", 
fûe
); ;

3003 
SS_MINUS
: 
	`Âuts
 ("subs", 
fûe
); ;

3004 
ASHIFT
: 
	`Âuts
 ("a¶", 
fûe
); ;

3005 
ASHIFTRT
: 
	`Âuts
 ("a§", 
fûe
); ;

3006 
LSHIFTRT
: 
	`Âuts
 ("l§", 
fûe
); ;

3007 
ROTATERT
: 
	`Âuts
 ("r‹", 
fûe
); ;

3008 
MULT
: 
	`Âuts
 ("mpy", 
fûe
); ;

3009 
ABS
: 
	`Âuts
 ("abs", 
fûe
); ;

3010 
NEG
: 
	`Âuts
 ("√g", 
fûe
); ;

3011 
SS_NEG
: 
	`Âuts
 ("√gs", 
fûe
); ;

3012 
NOT
: 
	`Âuts
 ("nŸ", 
fûe
); ;

3013 
ZERO_EXTEND
:

3014 
	`Âuts
 ("ext", 
fûe
);

3015 
size_suffix
;

3016 
SIGN_EXTEND
:

3017 
	`Âuts
 ("£x", 
fûe
);

3018 
size_suffix
:

3019 
	`GET_MODE
 (
	`XEXP
 (
x
, 0)))

3021 
QImode
: 
	`Âuts
 ("b", 
fûe
); ;

3022 
HImode
: 
	`Âuts
 ("w", 
fûe
); ;

3026 
SS_TRUNCATE
:

3027 i‡(
	`GET_MODE
 (
x
Ë!
HImode
)

3029 
	`Âuts
 ("ßt16", 
fûe
);

3032 
	`ouçut_›î™d_losßge
 ("invalid operandÅo %%O code"); ;

3034 i‡(
	`GET_CODE
 (
x
Ë=
SYMBOL_REF
)

3036 
	`as£mbÀ_«me
 (
fûe
, 
	`XSTR
 (
x
, 0));

3041 i‡(
TARGET_ANNOTATE_ALIGN
 && 
cfun
->
machöe
->
size_ªas⁄
)

3042 
	`Ârötf
 (
fûe
, "; u«lign: %d", 
cfun
->
machöe
->
u«lign
);

3046 
	`ouçut_›î™d_losßge
 ("invalid operand output code");

3049 
	`GET_CODE
 (
x
))

3051 
REG
 :

3052 
	`Âuts
 (
ªg_«mes
[
	`REGNO
 (
x
)], 
fûe
);

3054 
MEM
 :

3056 
πx
 
addr
 = 
	`XEXP
 (
x
, 0);

3057 
size
 = 
	`GET_MODE_SIZE
 (
	`GET_MODE
 (
x
));

3059 
	`Âutc
 ('[', 
fûe
);

3061 
	`GET_CODE
 (
addr
))

3063 
PRE_INC
: 
POST_INC
:

3064 
	`ouçut_addªss
 (
	`∂us_c⁄°™t
 (
Pmode
, 
	`XEXP
 (
addr
, 0), 
size
)); ;

3065 
PRE_DEC
: 
POST_DEC
:

3066 
	`ouçut_addªss
 (
	`∂us_c⁄°™t
 (
Pmode
, 
	`XEXP
 (
addr
, 0), -
size
));

3068 
PRE_MODIFY
: 
POST_MODIFY
:

3069 
	`ouçut_addªss
 (
	`XEXP
 (
addr
, 1)); ;

3070 
PLUS
:

3071 i‡(
ouçut_sˇÀd
)

3073 
	`ouçut_addªss
 (
	`∂us_c⁄°™t
 (
Pmode
, 
	`XEXP
 (
addr
, 0),

3074 (
	`INTVAL
 (
	`XEXP
 (
addr
, 1))

3075 >> (
size
 == 2 ? 1 : 2))));

3076 
ouçut_sˇÀd
 = 0;

3079 
	`ouçut_addªss
 (
addr
);

3082 i‡(
Êag_pic
 && 
	`CONSTANT_ADDRESS_P
 (
addr
))

3083 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
addr
, 
code
);

3085 
	`ouçut_addªss
 (
addr
);

3088 
	`Âutc
 (']', 
fûe
);

3091 
CONST_DOUBLE
 :

3093 i‡(
	`GET_MODE
 (
x
Ë=
SFmode
)

3095 
REAL_VALUE_TYPE
 
d
;

3096 
l
;

3098 
	`REAL_VALUE_FROM_CONST_DOUBLE
 (
d
, 
x
);

3099 
	`REAL_VALUE_TO_TARGET_SINGLE
 (
d
, 
l
);

3100 
	`Ârötf
 (
fûe
, "0x%08lx", 
l
);

3105 i‡(
Êag_pic
)

3106 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
x
, 
code
);

3111 i‡(
	`GET_CODE
 (
x
Ë=
CONST
 && GET_CODE (
	`XEXP
 (x, 0)Ë=
PLUS
)

3113 
x
 = 
	`XEXP
 (x, 0);

3114 
	`ouçut_addr_c⁄°
 (
fûe
, 
	`XEXP
 (
x
, 0));

3115 i‡(
	`GET_CODE
 (
	`XEXP
 (
x
, 0)Ë=
SYMBOL_REF
 && 
	`SYMBOL_REF_SMALL_P
 (XEXP (x, 0)))

3116 
	`Ârötf
 (
fûe
, "@sda");

3118 i‡(
	`GET_CODE
 (
	`XEXP
 (
x
, 1)Ë!
CONST_INT


3119 || 
	`INTVAL
 (
	`XEXP
 (
x
, 1)) >= 0)

3120 
	`Ârötf
 (
fûe
, "+");

3121 
	`ouçut_addr_c⁄°
 (
fûe
, 
	`XEXP
 (
x
, 1));

3124 
	`ouçut_addr_c⁄°
 (
fûe
, 
x
);

3126 i‡(
	`GET_CODE
 (
x
Ë=
SYMBOL_REF
 && 
	`SYMBOL_REF_SMALL_P
 (x))

3127 
	`Ârötf
 (
fûe
, "@sda");

3130 
	}
}

3135 
	$¨c_¥öt_›î™d_addªss
 (
FILE
 *
fûe
 , 
πx
 
addr
)

3137 
πx
 
ba£
, 
ödex
 = 0;

3139 
	`GET_CODE
 (
addr
))

3141 
REG
 :

3142 
	`Âuts
 (
ªg_«mes
[
	`REGNO
 (
addr
)], 
fûe
);

3144 
SYMBOL_REF
 :

3145 
	`ouçut_addr_c⁄°
 (
fûe
, 
addr
);

3146 i‡(
	`SYMBOL_REF_SMALL_P
 (
addr
))

3147 
	`Ârötf
 (
fûe
, "@sda");

3149 
PLUS
 :

3150 i‡(
	`GET_CODE
 (
	`XEXP
 (
addr
, 0)Ë=
MULT
)

3151 
ödex
 = 
	`XEXP
 (XEXP (
addr
, 0), 0), 
ba£
 = XEXP (addr, 1);

3152 i‡(
	`CONST_INT_P
 (
	`XEXP
 (
addr
, 0)))

3153 
ödex
 = 
	`XEXP
 (
addr
, 0), 
ba£
 = XEXP (addr, 1);

3155 
ba£
 = 
	`XEXP
 (
addr
, 0), 
ödex
 = XEXP (addr, 1);

3157 
	`gcc_as£π
 (
	`OBJECT_P
 (
ba£
));

3158 
	`¨c_¥öt_›î™d_addªss
 (
fûe
, 
ba£
);

3159 i‡(
	`CONSTANT_P
 (
ba£
Ë&& 
	`CONST_INT_P
 (
ödex
))

3160 
	`Âutc
 ('+', 
fûe
);

3162 
	`Âutc
 (',', 
fûe
);

3163 
	`gcc_as£π
 (
	`OBJECT_P
 (
ödex
));

3164 
	`¨c_¥öt_›î™d_addªss
 (
fûe
, 
ödex
);

3166 
CONST
:

3168 
πx
 
c
 = 
	`XEXP
 (
addr
, 0);

3170 
	`gcc_as£π
 (
	`GET_CODE
 (
	`XEXP
 (
c
, 0)Ë=
SYMBOL_REF
);

3171 
	`gcc_as£π
 (
	`GET_CODE
 (
	`XEXP
 (
c
, 1)Ë=
CONST_INT
);

3173 
	`ouçut_addªss
(
	`XEXP
(
addr
,0));

3177 
PRE_INC
 :

3178 
PRE_DEC
 :

3181 
	`gcc_uƒóchabÀ
 ();

3184 i‡(
Êag_pic
)

3185 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
addr
, 0);

3187 
	`ouçut_addr_c⁄°
 (
fûe
, 
addr
);

3190 
	}
}

3202 
	$wrôe_¥ofûe_£˘i⁄s
 (
πx
 
de°
 
ATTRIBUTE_UNUSED
,Ñtx 
x
, *
d©a
)

3204 
πx
 *
§˝
, 
§c
;

3205 
hèb_t
 
hèb
 = (hèb_tË
d©a
;

3206 
πx
 *
¶Ÿ
;

3208 i‡(
	`GET_CODE
 (
x
Ë!
SET
)

3210 
§˝
 = &
	`SET_SRC
 (
x
);

3211 i‡(
	`MEM_P
 (*
§˝
))

3212 
§˝
 = &
	`XEXP
 (*srcp, 0);

3213 i‡(
	`MEM_P
 (
	`SET_DEST
 (
x
)))

3214 
§˝
 = &
	`XEXP
 (
	`SET_DEST
 (
x
), 0);

3215 
§c
 = *
§˝
;

3216 i‡(
	`GET_CODE
 (
§c
Ë!
CONST
)

3218 
§c
 = 
	`XEXP
 (src, 0);

3219 i‡(
	`GET_CODE
 (
§c
Ë!
UNSPEC
 || 
	`XINT
 (§c, 1Ë!
UNSPEC_PROF
)

3222 
	`gcc_as£π
 (
	`XVECLEN
 (
§c
, 0) == 3);

3223 i‡(!
	`hèb_ñemíts
 (
hèb
))

3225 
	`ouçut_asm_ö¢
 (".section .__arc_profile_desc, \"a\"\n"

3227 &
	`XVECEXP
 (
§c
, 0, 0));

3229 
¶Ÿ
 = (
πx
 *Ë
	`hèb_föd_¶Ÿ
 (
hèb
, 
§c
, 
INSERT
);

3230 i‡(*
¶Ÿ
 =
HTAB_EMPTY_ENTRY
)

3232 
cou¡_ƒ
;

3233 
buf
[24];

3234 
πx
 
cou¡
;

3236 *
¶Ÿ
 = 
§c
;

3237 
	`•rötf
 (
buf
, "__¥of_cou¡%d", 
cou¡_ƒ
++);

3238 
cou¡
 = 
	`gí_πx_SYMBOL_REF
 (
Pmode
, 
	`x°rdup
 (
buf
));

3239 
	`XVECEXP
 (
§c
, 0, 2Ë
cou¡
;

3240 
	`ouçut_asm_ö¢
 (".section\t.__arc_profile_desc, \"a\"\n"

3246 &
	`XVECEXP
 (
§c
, 0, 0));

3247 *
§˝
 = 
cou¡
;

3250 *
§˝
 = 
	`XVECEXP
 (*
¶Ÿ
, 0, 2);

3251 
	}
}

3256 
hashvÆ_t


3257 
	$un•ec_¥of_hash
 (c⁄° *
x
)

3259 
c⁄°_πx
 
u
 = (c⁄°_πxË
x
;

3260 
c⁄°_πx
 
s1
 = 
	`XVECEXP
 (
u
, 0, 1);

3262  (
	`hèb_hash_°rög
 (
	`XSTR
 (
	`XVECEXP
 (
u
, 0, 0), 0))

3263 ^ (
s1
->
code
 =
SYMBOL_REF
 ? 
	`hèb_hash_°rög
 (
	`XSTR
 (s1, 0)) : 0));

3264 
	}
}

3271 
	$un•ec_¥of_hèb_eq
 (c⁄° *
x
, c⁄° *
y
)

3273 
c⁄°_πx
 
u0
 = (c⁄°_πxË
x
;

3274 
c⁄°_πx
 
u1
 = (c⁄°_πxË
y
;

3275 
c⁄°_πx
 
s01
 = 
	`XVECEXP
 (
u0
, 0, 1);

3276 
c⁄°_πx
 
s11
 = 
	`XVECEXP
 (
u1
, 0, 1);

3278  (!
	`°rcmp
 (
	`XSTR
 (
	`XVECEXP
 (
u0
, 0, 0), 0),

3279 
	`XSTR
 (
	`XVECEXP
 (
u1
, 0, 0), 0))

3280 && 
	`πx_equÆ_p
 (
s01
, 
s11
));

3281 
	}
}

3335 
	$¨c_ccfsm_adv™˚
 (
πx
 
ö¢
, 
¨c_ccfsm
 *
°©e
)

3338 
πx
 
body
;

3342 
ªvî£
 = 0;

3345 
£ekög_ªtu∫
 = 0;

3349 
πx
 
°¨t_ö¢
 = 
ö¢
;

3353 
©å_ty≥
 
jump_ö¢_ty≥
;

3358 i‡(
›timize
 < 2 || 
TARGET_NO_COND_EXEC
)

3362 i‡(!
	`INSN_P
 (
ö¢
))

3364 
body
 = 
	`PATTERN
 (
ö¢
);

3367 i‡(
°©e
->state == 4)

3369 i‡(
ö¢
 =
°©e
->
èrgë_ö¢
)

3371 
°©e
->
èrgë_ö¢
 = 
NULL
;

3372 
°©e
->state = 0;

3382 i‡(
°©e
->state == 3)

3384 i‡(
	`sim∂ejump_p
 (
ö¢
))

3386 
°¨t_ö¢
 = 
	`√xt_n⁄nŸe_ö¢
 (start_insn);

3387 i‡(
	`GET_CODE
 (
°¨t_ö¢
Ë=
BARRIER
)

3390 
°¨t_ö¢
 = 
	`√xt_n⁄nŸe_ö¢
 (start_insn);

3392 i‡(
	`GET_CODE
 (
°¨t_ö¢
Ë=
CODE_LABEL


3393 && 
	`CODE_LABEL_NUMBER
 (
°¨t_ö¢
Ë=
°©e
->
èrgë_œbñ


3394 && 
	`LABEL_NUSES
 (
°¨t_ö¢
) == 1)

3395 
ªvî£
 = 
TRUE
;

3399 i‡(
	`GET_CODE
 (
body
Ë=
RETURN
)

3401 
°¨t_ö¢
 = 
	`√xt_n⁄nŸe_ö¢
 (start_insn);

3402 i‡(
	`GET_CODE
 (
°¨t_ö¢
Ë=
BARRIER
)

3403 
°¨t_ö¢
 = 
	`√xt_n⁄nŸe_ö¢
 (start_insn);

3404 i‡(
	`GET_CODE
 (
°¨t_ö¢
Ë=
CODE_LABEL


3405 && 
	`CODE_LABEL_NUMBER
 (
°¨t_ö¢
Ë=
°©e
->
èrgë_œbñ


3406 && 
	`LABEL_NUSES
 (
°¨t_ö¢
) == 1)

3408 
ªvî£
 = 
TRUE
;

3409 
£ekög_ªtu∫
 = 1;

3418 i‡(
	`GET_CODE
 (
ö¢
Ë!
JUMP_INSN


3419 || 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
ADDR_VEC


3420 || 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
ADDR_DIFF_VEC
)

3423 
jump_ö¢_ty≥
 = 
	`gë_©å_ty≥
 (
ö¢
);

3424 i‡(
jump_ö¢_ty≥
 =
TYPE_BRCC


3425 || 
jump_ö¢_ty≥
 =
TYPE_BRCC_NO_DELAY_SLOT


3426 || 
jump_ö¢_ty≥
 =
TYPE_LOOP_END
)

3431 i‡(
	`GET_CODE
 (
body
Ë=
PARALLEL
 && 
	`XVECLEN
 (body, 0) > 0)

3432 
body
 = 
	`XVECEXP
 (body, 0, 0);

3434 i‡(
ªvî£


3435 || (
	`GET_CODE
 (
body
Ë=
SET
 && GET_CODE (
	`SET_DEST
 (body)Ë=
PC


3436 && 
	`GET_CODE
 (
	`SET_SRC
 (
body
)Ë=
IF_THEN_ELSE
))

3438 
ö¢s_skù≥d
 = 0, 
Áû
 = 
FALSE
, 
suc˚ed
 = FALSE;

3440 
thí_nŸ_ñ£
 = 
TRUE
;

3442 
√xt_mu°_be_èrgë_œbñ_p
;

3443 
πx
 
this_ö¢
 = 
°¨t_ö¢
, 
œbñ
 = 0;

3446 i‡(
ªvî£
)

3448 i‡(!
£ekög_ªtu∫
)

3449 
œbñ
 = 
	`XEXP
 (
	`SET_SRC
 (
body
), 0);

3451 i‡(
	`GET_CODE
 (
	`XEXP
 (
	`SET_SRC
 (
body
), 1)Ë=
LABEL_REF
)

3452 
œbñ
 = 
	`XEXP
 (XEXP (
	`SET_SRC
 (
body
), 1), 0);

3453 i‡(
	`GET_CODE
 (
	`XEXP
 (
	`SET_SRC
 (
body
), 2)Ë=
LABEL_REF
)

3455 
œbñ
 = 
	`XEXP
 (XEXP (
	`SET_SRC
 (
body
), 2), 0);

3456 
thí_nŸ_ñ£
 = 
FALSE
;

3458 i‡(
	`GET_CODE
 (
	`XEXP
 (
	`SET_SRC
 (
body
), 1)Ë=
RETURN
)

3459 
£ekög_ªtu∫
 = 1;

3460 i‡(
	`GET_CODE
 (
	`XEXP
 (
	`SET_SRC
 (
body
), 2)Ë=
RETURN
)

3462 
£ekög_ªtu∫
 = 1;

3463 
thí_nŸ_ñ£
 = 
FALSE
;

3466 
	`gcc_uƒóchabÀ
 ();

3470 i‡(
	`NEXT_INSN
 (
	`PREV_INSN
 (
ö¢
)) != insn

3471 && 
°©e
->°©ê=0 && !
	`INSN_ANNULLED_BRANCH_P
 (
ö¢
))

3473 
this_ö¢
 = 
	`NEXT_INSN
 (this_insn);

3474 
	`gcc_as£π
 (
	`NEXT_INSN
 (NEXT_INSN (
	`PREV_INSN
 (
°¨t_ö¢
)))

3475 =
	`NEXT_INSN
 (
this_ö¢
));

3480 
ö¢s_skù≥d
 = 0, 
√xt_mu°_be_èrgë_œbñ_p
 = 
FALSE
;

3481 !
Áû
 && !
suc˚ed
 && 
ö¢s_skù≥d
 < 
MAX_INSNS_SKIPPED
;

3482 
ö¢s_skù≥d
++)

3484 
πx
 
sˇnbody
;

3486 
this_ö¢
 = 
	`√xt_n⁄nŸe_ö¢
 (this_insn);

3487 i‡(!
this_ö¢
)

3490 i‡(
√xt_mu°_be_èrgë_œbñ_p
)

3492 i‡(
	`GET_CODE
 (
this_ö¢
Ë=
BARRIER
)

3494 i‡(
	`GET_CODE
 (
this_ö¢
Ë=
CODE_LABEL


3495 && 
this_ö¢
 =
œbñ
)

3497 
°©e
->state = 1;

3498 
suc˚ed
 = 
TRUE
;

3501 
Áû
 = 
TRUE
;

3505 
sˇnbody
 = 
	`PATTERN
 (
this_ö¢
);

3507 
	`GET_CODE
 (
this_ö¢
))

3509 
CODE_LABEL
:

3512 i‡(
this_ö¢
 =
œbñ
)

3514 
°©e
->state = 1;

3515 
suc˚ed
 = 
TRUE
;

3518 
Áû
 = 
TRUE
;

3521 
BARRIER
:

3526 
√xt_mu°_be_èrgë_œbñ_p
 = 
TRUE
;

3529 
CALL_INSN
:

3534 i‡(
	`gë_©å_c⁄d
 (
this_ö¢
Ë=
COND_CANUSE
)

3535 
√xt_mu°_be_èrgë_œbñ_p
 = 
TRUE
;

3537 
Áû
 = 
TRUE
;

3540 
JUMP_INSN
:

3547 i‡(
	`GET_CODE
 (
sˇnbody
Ë=
SET


3548 && 
	`GET_CODE
 (
	`SET_DEST
 (
sˇnbody
)Ë=
PC
)

3550 i‡(
	`GET_CODE
 (
	`SET_SRC
 (
sˇnbody
)Ë=
LABEL_REF


3551 && 
	`XEXP
 (
	`SET_SRC
 (
sˇnbody
), 0Ë=
œbñ
 && !
ªvî£
)

3553 
°©e
->state = 2;

3554 
suc˚ed
 = 
TRUE
;

3556 i‡(
	`GET_CODE
 (
	`SET_SRC
 (
sˇnbody
)Ë=
IF_THEN_ELSE
)

3557 
Áû
 = 
TRUE
;

3558 i‡(
	`gë_©å_c⁄d
 (
this_ö¢
Ë!
COND_CANUSE
)

3559 
Áû
 = 
TRUE
;

3561 i‡(
	`GET_CODE
 (
sˇnbody
Ë=
RETURN


3562 && 
£ekög_ªtu∫
)

3564 
°©e
->state = 2;

3565 
suc˚ed
 = 
TRUE
;

3567 i‡(
	`GET_CODE
 (
sˇnbody
Ë=
PARALLEL
)

3569 i‡(
	`gë_©å_c⁄d
 (
this_ö¢
Ë!
COND_CANUSE
)

3570 
Áû
 = 
TRUE
;

3574 
INSN
:

3577 i‡(
	`GET_CODE
 (
sˇnbody
Ë=
SET


3578 || 
	`GET_CODE
 (
sˇnbody
Ë=
PARALLEL
)

3580 i‡(
	`gë_©å_c⁄d
 (
this_ö¢
Ë!
COND_CANUSE
)

3581 
Áû
 = 
TRUE
;

3585 
Áû
 = 
TRUE
;

3593 i‡(
suc˚ed
)

3595 i‡((!
£ekög_ªtu∫
Ë&& (
°©e
->°©ê=1 || 
ªvî£
))

3596 
°©e
->
èrgë_œbñ
 = 
	`CODE_LABEL_NUMBER
 (
œbñ
);

3597 i‡(
£ekög_ªtu∫
 || 
°©e
->state == 2)

3599 
this_ö¢
 && 
	`GET_CODE
 (
	`PATTERN
 (this_ö¢)Ë=
USE
)

3601 
this_ö¢
 = 
	`√xt_n⁄nŸe_ö¢
 (this_insn);

3603 
	`gcc_as£π
 (!
this_ö¢
 ||

3604 (
	`GET_CODE
 (
this_ö¢
Ë!
BARRIER


3605 && 
	`GET_CODE
 (
this_ö¢
Ë!
CODE_LABEL
));

3607 i‡(!
this_ö¢
)

3610 
	`exåa˘_ö¢_ˇched
 (
ö¢
);

3611 
°©e
->state = 0;

3612 
°©e
->
èrgë_ö¢
 = 
NULL
;

3615 
°©e
->
èrgë_ö¢
 = 
this_ö¢
;

3618 
	`gcc_uƒóchabÀ
 ();

3622 i‡(!
ªvî£
)

3624 
°©e
->
c⁄d
 = 
	`XEXP
 (
	`SET_SRC
 (
body
), 0);

3625 
°©e
->
cc
 = 
	`gë_¨c_c⁄dôi⁄_code
 (
	`XEXP
 (
	`SET_SRC
 (
body
), 0));

3628 i‡(
ªvî£
 || 
thí_nŸ_ñ£
)

3629 
°©e
->
cc
 = 
	`ARC_INVERSE_CONDITION_CODE
 (state->cc);

3636 
	`exåa˘_ö¢_ˇched
 (
ö¢
);

3638 
	}
}

3646 
	$¨c_ccfsm_©_œbñ
 (c⁄° *
¥efix
, 
num
, 
¨c_ccfsm
 *
°©e
)

3648 i‡(
°©e
->°©ê=3 && sèã->
èrgë_œbñ
 =
num


3649 && !
	`°rcmp
 (
¥efix
, "L"))

3651 
°©e
->state = 0;

3652 
°©e
->
èrgë_ö¢
 = 
NULL_RTX
;

3654 
	}
}

3661 
	$¨c_ccfsm_ªc‹d_c⁄dôi⁄
 (
πx
 
c⁄d
, 
ªvî£
,Ñtx 
jump
,

3662 
¨c_ccfsm
 *
°©e
)

3664 
πx
 
£q_ö¢
 = 
	`NEXT_INSN
 (
	`PREV_INSN
 (
jump
));

3665 i‡(!
°©e
)

3666 
°©e
 = &
¨c_ccfsm_cuºít
;

3668 
	`gcc_as£π
 (
°©e
->state == 0);

3669 i‡(
£q_ö¢
 !
jump
)

3671 
πx
 
ö¢
 = 
	`XVECEXP
 (
	`PATTERN
 (
£q_ö¢
), 0, 1);

3673 i‡(
	`INSN_ANNULLED_BRANCH_P
 (
jump
)

3674 && (
TARGET_AT_DBR_CONDEXEC
 || 
	`INSN_FROM_TARGET_P
 (
ö¢
)))

3676 
°©e
->
c⁄d
 = cond;

3677 
°©e
->
cc
 = 
	`gë_¨c_c⁄dôi⁄_code
 (
c⁄d
);

3678 i‡(!
ªvî£
)

3679 
¨c_ccfsm_cuºít
.
cc


3680 
	`ARC_INVERSE_CONDITION_CODE
 (
°©e
->
cc
);

3681 
πx
 
∑t
 = 
	`PATTERN
 (
ö¢
);

3682 i‡(
	`GET_CODE
 (
∑t
Ë=
COND_EXEC
)

3683 
	`gcc_as£π
 ((
	`INSN_FROM_TARGET_P
 (
ö¢
)

3684 ? 
	`ARC_INVERSE_CONDITION_CODE
 (
°©e
->
cc
) : state->cc)

3685 =
	`gë_¨c_c⁄dôi⁄_code
 (
	`XEXP
 (
∑t
, 0)));

3687 
°©e
->state = 5;

3690 
	}
}

3695 
	$¨c_ccfsm_po°_adv™˚
 (
πx
 
ö¢
, 
¨c_ccfsm
 *
°©e
)

3697 i‡(
	`LABEL_P
 (
ö¢
))

3698 
	`¨c_ccfsm_©_œbñ
 ("L", 
	`CODE_LABEL_NUMBER
 (
ö¢
), 
°©e
);

3699 i‡(
	`JUMP_P
 (
ö¢
)

3700 && 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë!
ADDR_VEC


3701 && 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë!
ADDR_DIFF_VEC


3702 && 
	`gë_©å_ty≥
 (
ö¢
Ë=
TYPE_BRANCH
)

3704 i‡(
	`ARC_CCFSM_BRANCH_DELETED_P
 (
°©e
))

3705 
	`ARC_CCFSM_RECORD_BRANCH_DELETED
 (
°©e
);

3708 
πx
 
§c
 = 
	`SET_SRC
 (
	`PATTERN
 (
ö¢
));

3709 
	`¨c_ccfsm_ªc‹d_c⁄dôi⁄
 (
	`XEXP
 (
§c
, 0), XEXP (§c, 1Ë=
pc_πx
,

3710 
ö¢
, 
°©e
);

3713 i‡(
¨c_ccfsm_cuºít
.
°©e
 == 5)

3714 
¨c_ccfsm_cuºít
.
°©e
 = 0;

3715 
	}
}

3720 
boﬁ


3721 
	$¨c_ccfsm_bønch_dñëed_p
 ()

3723  
	`ARC_CCFSM_BRANCH_DELETED_P
 (&
¨c_ccfsm_cuºít
);

3724 
	}
}

3730 
	$¨c_ccfsm_ªc‹d_bønch_dñëed
 ()

3732 
	`ARC_CCFSM_RECORD_BRANCH_DELETED
 (&
¨c_ccfsm_cuºít
);

3733 
	}
}

3737 
boﬁ


3738 
	$¨c_ccfsm_c⁄d_exec_p
 ()

3740  (
cfun
->
machöe
->
¥esˇn_öôülized


3741 && 
	`ARC_CCFSM_COND_EXEC_P
 (&
¨c_ccfsm_cuºít
));

3742 
	}
}

3747 
πx


3748 
	$¨c_√xt_a˘ive_ö¢
 (
πx
 
ö¢
, 
¨c_ccfsm
 *
°©ï
)

3750 
πx
 
∑t
;

3754 i‡(
°©ï
)

3755 
	`¨c_ccfsm_po°_adv™˚
 (
ö¢
, 
°©ï
);

3756 
ö¢
 = 
	`NEXT_INSN
 (insn);

3757 i‡(!
ö¢
 || 
	`BARRIER_P
 (insn))

3758  
NULL_RTX
;

3759 i‡(
°©ï
)

3760 
	`¨c_ccfsm_adv™˚
 (
ö¢
, 
°©ï
);

3762 
	`NOTE_P
 (
ö¢
)

3763 || (
cfun
->
machöe
->
¨c_ª‹g_°¨ãd


3764 && 
	`LABEL_P
 (
ö¢
Ë&& !
	`œbñ_to_Æignmít
 (insn))

3765 || (
	`NONJUMP_INSN_P
 (
ö¢
)

3766 && (
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
USE


3767 || 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
CLOBBER
)));

3768 i‡(!
	`LABEL_P
 (
ö¢
))

3770 
	`gcc_as£π
 (
	`INSN_P
 (
ö¢
));

3771 
∑t
 = 
	`PATTERN
 (
ö¢
);

3772 i‡(
	`GET_CODE
 (
∑t
Ë=
ADDR_VEC
 || GET_CODE (∑tË=
ADDR_DIFF_VEC
)

3773  
NULL_RTX
;

3774 i‡(
	`GET_CODE
 (
∑t
Ë=
SEQUENCE
)

3775  
	`XVECEXP
 (
∑t
, 0, 0);

3777  
ö¢
;

3778 
	}
}

3805 
	$¨c_vîify_sh‹t
 (
πx
 
ö¢
, , 
check_©å
)

3807 
©å_iscom∑˘
 
iscom∑˘
;

3808 
machöe_fun˘i⁄
 *
machöe
;

3810 i‡(
check_©å
 > 0)

3812 
iscom∑˘
 = 
	`gë_©å_iscom∑˘
 (
ö¢
);

3813 i‡(
iscom∑˘
 =
ISCOMPACT_FALSE
)

3816 
machöe
 = 
cfun
->machine;

3818 i‡(
machöe
->
f‹˚_sh‹t_suffix
 >= 0)

3819  
machöe
->
f‹˚_sh‹t_suffix
;

3821  (
	`gë_©å_Àngth
 (
ö¢
) & 2) != 0;

3822 
	}
}

3829 
	$ouçut_sh‹t_suffix
 (
FILE
 *
fûe
)

3831 
πx
 
ö¢
 = 
cuºít_ouçut_ö¢
;

3833 i‡(
	`¨c_vîify_sh‹t
 (
ö¢
, 
cfun
->
machöe
->
u«lign
, 1))

3835 
	`Ârötf
 (
fûe
, "_s");

3836 
cfun
->
machöe
->
u«lign
 ^= 2;

3839 
	`exåa˘_ö¢_ˇched
 (
ö¢
);

3840 
	}
}

3845 
	$¨c_föÆ_¥esˇn_ö¢
 (
πx
 
ö¢
,Ñtx *
›vec
 
ATTRIBUTE_UNUSED
,

3846 
n›î™ds
 
ATTRIBUTE_UNUSED
)

3848 i‡(
TARGET_DUMPISIZE
)

3849 
	`Ârötf
 (
asm_out_fûe
, "\n;áà%04x\n", 
	`INSN_ADDRESSES
 (
	`INSN_UID
 (
ö¢
)));

3856 i‡(
	`PREV_INSN
 (
ö¢
)

3857 && 
	`PREV_INSN
 (
	`NEXT_INSN
 (
ö¢
)) == insn

3858 && 
	`¨c_haz¨d
 (
	`¥ev_ªÆ_ö¢
 (
ö¢
), insn))

3860 
cuºít_ouçut_ö¢
 =

3861 
	`emô_ö¢_bef‹e
 (
	`gí_n›
 (), 
	`NEXT_INSN
 (
	`PREV_INSN
 (
ö¢
)));

3862 
	`föÆ_sˇn_ö¢
 (
cuºít_ouçut_ö¢
, 
asm_out_fûe
, 
›timize
, 1, 
NULL
);

3863 
cuºít_ouçut_ö¢
 = 
ö¢
;

3866 
	`exåa˘_c⁄°øö_ö¢_ˇched
 (
ö¢
);

3868 i‡(!
cfun
->
machöe
->
¥esˇn_öôülized
)

3871 
	`mem£t
 (&
¨c_ccfsm_cuºít
, 0, árc_ccfsm_current);

3872 
cfun
->
machöe
->
¥esˇn_öôülized
 = 1;

3874 
	`¨c_ccfsm_adv™˚
 (
ö¢
, &
¨c_ccfsm_cuºít
);

3876 
cfun
->
machöe
->
size_ªas⁄
 = 0;

3877 
	}
}

3886 
boﬁ


3887 
	$¨c_ˇn_ñimö©e
 (c⁄° 
‰om
 
ATTRIBUTE_UNUSED
, c⁄° 
to
)

3889  
to
 =
FRAME_POINTER_REGNUM
 || !
	`¨c_‰ame_poöãr_ªquúed
 ();

3890 
	}
}

3896 
	$¨c_öôül_ñimö©i⁄_off£t
 (
‰om
, 
to
)

3898 i‡(! 
cfun
->
machöe
->
‰ame_öfo
.
öôülized
)

3899 
	`¨c_compuã_‰ame_size
 (
	`gë_‰ame_size
 ());

3901 i‡(
‰om
 =
ARG_POINTER_REGNUM
 && 
to
 =
FRAME_POINTER_REGNUM
)

3903  (
cfun
->
machöe
->
‰ame_öfo
.
exåa_size


3904 + 
cfun
->
machöe
->
‰ame_öfo
.
ªg_size
);

3907 i‡(
‰om
 =
ARG_POINTER_REGNUM
 && 
to
 =
STACK_POINTER_REGNUM
)

3909  (
cfun
->
machöe
->
‰ame_öfo
.
tŸÆ_size


3910 - 
cfun
->
machöe
->
‰ame_öfo
.
¥ëíd_size
);

3913 i‡((
‰om
 =
FRAME_POINTER_REGNUM
Ë&& (
to
 =
STACK_POINTER_REGNUM
))

3915  (
cfun
->
machöe
->
‰ame_öfo
.
tŸÆ_size


3916 - (
cfun
->
machöe
->
‰ame_öfo
.
¥ëíd_size


3917 + 
cfun
->
machöe
->
‰ame_öfo
.
exåa_size


3918 + 
cfun
->
machöe
->
‰ame_öfo
.
ªg_size
));

3921 
	`gcc_uƒóchabÀ
 ();

3922 
	}
}

3924 
boﬁ


3925 
	$¨c_‰ame_poöãr_ªquúed
 ()

3927  
cfun
->
ˇŒs_Æloˇ
;

3928 
	}
}

3934 
	$bønch_de°
 (
πx
 
bønch
)

3936 
πx
 
∑t
 = 
	`PATTERN
 (
bønch
);

3937 
πx
 
de°
 = (
	`GET_CODE
 (
∑t
Ë=
PARALLEL


3938 ? 
	`SET_SRC
 (
	`XVECEXP
 (
∑t
, 0, 0)) : SET_SRC (pat));

3939 
de°_uid
;

3941 i‡(
	`GET_CODE
 (
de°
Ë=
IF_THEN_ELSE
)

3942 
de°
 = 
	`XEXP
 (de°, XEXP (de°, 1Ë=
pc_πx
 ? 2 : 1);

3944 
de°
 = 
	`XEXP
 (dest, 0);

3945 
de°_uid
 = 
	`INSN_UID
 (
de°
);

3947  
	`INSN_ADDRESSES
 (
de°_uid
);

3948 
	}
}

3958 
	$¨c_ícode_£˘i⁄_öfo
 (
åì
 
de˛
, 
πx
 
πl
, 
fú°
)

3962 
	`deÁu…_ícode_£˘i⁄_öfo
 (
de˛
, 
πl
, 
fú°
);

3966 i‡(
	`TREE_CODE
 (
de˛
Ë=
FUNCTION_DECL
)

3968 
πx
 
symbﬁ
 = 
	`XEXP
 (
πl
, 0);

3969 
Êags
 = 
	`SYMBOL_REF_FLAGS
 (
symbﬁ
);

3971 
åì
 
©å
 = (
	`TREE_TYPE
 (
de˛
Ë!
îr‹_m¨k_node


3972 ? 
	`TYPE_ATTRIBUTES
 (
	`TREE_TYPE
 (
de˛
)Ë: 
NULL_TREE
);

3973 
åì
 
l⁄g_ˇŒ_©å
 = 
	`lookup_©åibuã
 ("l⁄g_ˇŒ", 
©å
);

3974 
åì
 
sh‹t_ˇŒ_©å
 = 
	`lookup_©åibuã
 ("sh‹t_ˇŒ", 
©å
);

3976 i‡(
l⁄g_ˇŒ_©å
 !
NULL_TREE
)

3977 
Êags
 |
SYMBOL_FLAG_LONG_CALL
;

3978 i‡(
sh‹t_ˇŒ_©å
 !
NULL_TREE
)

3979 
Êags
 |
SYMBOL_FLAG_SHORT_CALL
;

3981 
	`SYMBOL_REF_FLAGS
 (
symbﬁ
Ë
Êags
;

3983 
	}
}

3988 
	$¨c_öã∫Æ_œbñ
 (
FILE
 *
°ªam
, c⁄° *
¥efix
, 
œbñno
)

3990 i‡(
cfun
)

3991 
	`¨c_ccfsm_©_œbñ
 (
¥efix
, 
œbñno
, &
¨c_ccfsm_cuºít
);

3992 
	`deÁu…_öã∫Æ_œbñ
 (
°ªam
, 
¥efix
, 
œbñno
);

3993 
	}
}

3998 
	$¨c_fûe_°¨t
 ()

4000 
	`deÁu…_fûe_°¨t
 ();

4001 
	`Ârötf
 (
asm_out_fûe
, "\t.˝u %s\n", 
¨c_˝u_°rög
);

4002 
	}
}

4010 
boﬁ


4011 
	$¨c_πx_co°s
 (
πx
 
x
, 
code
, 
ouãr_code
, 
›no
 
ATTRIBUTE_UNUSED
,

4012 *
tŸÆ
, 
boﬁ
 
•ìd
)

4014 
code
)

4017 
CONST_INT
:

4019 
boﬁ
 
nﬁimm
 = 
Ál£
;

4020 
boﬁ
 
Á°
 = 
Ál£
;

4021 
boﬁ
 
c⁄dexec
 = 
Ál£
;

4022 
boﬁ
 
com∑˘
 = 
Ál£
;

4026 
nﬁimm
 = 
com∑˘
 = 
c⁄dexec
 = 
Ál£
;

4027 i‡(
	`UNSIGNED_INT6
 (
	`INTVAL
 (
x
)))

4028 
nﬁimm
 = 
c⁄dexec
 = 
com∑˘
 = 
åue
;

4031 i‡(
	`SMALL_INT
 (
	`INTVAL
 (
x
)))

4032 
nﬁimm
 = 
Á°
 = 
åue
;

4033 
ouãr_code
)

4035 
AND
:

4036 i‡(
	`ßtisfõs_c⁄°øöt_C˝
 (
x
)

4037 || 
	`ßtisfõs_c⁄°øöt_C1p
 (
x
) )

4038 
nﬁimm
 = 
Á°
 = 
c⁄dexec
 = 
com∑˘
 = 
åue
;

4040 
IOR
:

4041 i‡(
	`ßtisfõs_c⁄°øöt_C0p
 (
x
))

4042 
nﬁimm
 = 
Á°
 = 
c⁄dexec
 = 
com∑˘
 = 
åue
;

4044 
XOR
:

4045 i‡(
	`ßtisfõs_c⁄°øöt_C0p
 (
x
))

4046 
nﬁimm
 = 
Á°
 = 
c⁄dexec
 = 
åue
;

4048 
SET
:

4049 i‡(
	`ßtisfõs_c⁄°øöt_Cº
 (
x
))

4050 
nﬁimm
 = 
åue
;

4057 i‡(
nﬁimm
)

4059 *
tŸÆ
 = 0;

4060  
åue
;

4067 
CONST
:

4068 
LABEL_REF
:

4069 
SYMBOL_REF
:

4070 *
tŸÆ
 = 
	`COSTS_N_INSNS
 (1);

4071  
åue
;

4073 
CONST_DOUBLE
:

4075 
πx
 
high
, 
low
;

4077 i‡(
TARGET_DPFP
)

4079 *
tŸÆ
 = 
	`COSTS_N_INSNS
 (1);

4080  
åue
;

4083 
	`•lô_doubÀ
 (
x
, &
high
, &
low
);

4084 *
tŸÆ
 = 
	`COSTS_N_INSNS
 (!
	`SMALL_INT
 (
	`INTVAL
 (
high
))

4085 + !
	`SMALL_INT
 (
	`INTVAL
 (
low
)));

4086  
åue
;

4092 
ASHIFT
:

4093 
ASHIFTRT
:

4094 
LSHIFTRT
:

4095 i‡(
TARGET_BARREL_SHIFTER
)

4102 i‡(
	`CONSTANT_P
 (
	`XEXP
 (
x
, 0)))

4104 *
tŸÆ
 +(
	`COSTS_N_INSNS
 (2)

4105 + 
	`πx_co°
 (
	`XEXP
 (
x
, 1), (
πx_code
Ë
code
, 0, 
•ìd
));

4106  
åue
;

4108 *
tŸÆ
 = 
	`COSTS_N_INSNS
 (1);

4110 i‡(
	`GET_CODE
 (
	`XEXP
 (
x
, 1)Ë!
CONST_INT
)

4111 *
tŸÆ
 = 
	`COSTS_N_INSNS
 (16);

4114 *
tŸÆ
 = 
	`COSTS_N_INSNS
 (
	`INTVAL
 (
	`XEXP
 ((
x
), 1)));

4118 i‡(*
tŸÆ
 < 0)

4119 *
tŸÆ
 = 0;

4121  
Ál£
;

4123 
DIV
:

4124 
UDIV
:

4125 i‡(
•ìd
)

4126 *
tŸÆ
 = 
	`COSTS_N_INSNS
(30);

4128 *
tŸÆ
 = 
	`COSTS_N_INSNS
(1);

4129  
Ál£
;

4131 
MULT
:

4132 i‡((
TARGET_DPFP
 && 
	`GET_MODE
 (
x
Ë=
DFmode
))

4133 *
tŸÆ
 = 
	`COSTS_N_INSNS
 (1);

4134 i‡(
•ìd
)

4135 *
tŸÆ

¨c_mu…co°
;

4138 i‡(
TARGET_MUL64_SET
 || (
TARGET_ARC700
 && !
TARGET_NOMPY_SET
))

4139 *
tŸÆ
 = 
	`COSTS_N_INSNS
 (1);

4141 *
tŸÆ
 = 
	`COSTS_N_INSNS
 (2);

4142  
Ál£
;

4143 
PLUS
:

4144 i‡(
	`GET_CODE
 (
	`XEXP
 (
x
, 0)Ë=
MULT


4145 && 
	`_2_4_8_›î™d
 (
	`XEXP
 (XEXP (
x
, 0), 1), 
VOIDmode
))

4147 *
tŸÆ
 +(
	`πx_co°
 (
	`XEXP
 (
x
, 1), 
PLUS
, 0, 
•ìd
)

4148 + 
	`πx_co°
 (
	`XEXP
 (XEXP (
x
, 0), 0), 
PLUS
, 1, 
•ìd
));

4149  
åue
;

4151  
Ál£
;

4152 
MINUS
:

4153 i‡(
	`GET_CODE
 (
	`XEXP
 (
x
, 1)Ë=
MULT


4154 && 
	`_2_4_8_›î™d
 (
	`XEXP
 (XEXP (
x
, 1), 1), 
VOIDmode
))

4156 *
tŸÆ
 +(
	`πx_co°
 (
	`XEXP
 (
x
, 0), 
PLUS
, 0, 
•ìd
)

4157 + 
	`πx_co°
 (
	`XEXP
 (XEXP (
x
, 1), 0), 
PLUS
, 1, 
•ìd
));

4158  
åue
;

4160  
Ál£
;

4161 
COMPARE
:

4163 
πx
 
›0
 = 
	`XEXP
 (
x
, 0);

4164 
πx
 
›1
 = 
	`XEXP
 (
x
, 1);

4166 i‡(
	`GET_CODE
 (
›0
Ë=
ZERO_EXTRACT
 && 
›1
 =
c⁄°0_πx


4167 && 
	`XEXP
 (
›0
, 1Ë=
c⁄°1_πx
)

4172 *
tŸÆ
 = (
	`πx_co°
 (
	`XEXP
 (
›0
, 0), 
SET
, 1, 
•ìd
)

4173 + 
	`πx_co°
 (
	`XEXP
 (
›0
, 2), 
SET
, 1, 
•ìd
));

4174  
åue
;

4176 i‡(
	`GET_CODE
 (
›0
Ë=
AND
 && 
›1
 =
c⁄°0_πx


4177 && 
	`ßtisfõs_c⁄°øöt_C1p
 (
	`XEXP
 (
›0
, 1)))

4180 *
tŸÆ
 = 
	`πx_co°
 (
	`XEXP
 (
›0
, 0), 
SET
, 1, 
•ìd
);

4181  
åue
;

4184 i‡(
	`GET_CODE
 (
›1
Ë=
NEG
)

4189 *
tŸÆ
 = (
	`πx_co°
 (
›0
, 
PLUS
, 1, 
•ìd
)

4190 + 
	`πx_co°
 (
	`XEXP
 (
›1
, 0), 
PLUS
, 0, 
•ìd
));

4192  
Ál£
;

4194 
EQ
: 
NE
:

4195 i‡(
ouãr_code
 =
IF_THEN_ELSE


4196 && 
	`GET_CODE
 (
	`XEXP
 (
x
, 0)Ë=
ZERO_EXTRACT


4197 && 
	`XEXP
 (
x
, 1Ë=
c⁄°0_πx


4198 && 
	`XEXP
 (XEXP (
x
, 0), 1Ë=
c⁄°1_πx
)

4203 
πx
 
›0
 = 
	`XEXP
 (
x
, 0);

4205 *
tŸÆ
 = (
	`πx_co°
 (
	`XEXP
 (
›0
, 0), 
SET
, 1, 
•ìd
)

4206 + 
	`πx_co°
 (
	`XEXP
 (
›0
, 2), 
SET
, 1, 
•ìd
));

4207  
åue
;

4211 
GTU
: 
GEU
: 
LEU
:

4212 i‡(
	`GET_MODE
 (
x
Ë=
SImode
)

4213 *
tŸÆ
 +
	`COSTS_N_INSNS
 (1);

4214  
Ál£
;

4215 
LTU
:

4216 i‡(
	`GET_MODE
 (
x
Ë=
SImode
)

4217 *
tŸÆ
 +
	`COSTS_N_INSNS
 (1) - 1;

4218  
Ál£
;

4220  
Ál£
;

4222 
	}
}

4227 
boﬁ


4228 
	$¨c_Àgôim©e_pc_off£t_p
 (
πx
 
addr
)

4230 i‡(
	`GET_CODE
 (
addr
Ë!
CONST
)

4231  
Ál£
;

4232 
addr
 = 
	`XEXP
 (addr, 0);

4233 i‡(
	`GET_CODE
 (
addr
Ë=
PLUS
)

4235 i‡(
	`GET_CODE
 (
	`XEXP
 (
addr
, 1)Ë!
CONST_INT
)

4236  
Ál£
;

4237 
addr
 = 
	`XEXP
 (addr, 0);

4239  (
	`GET_CODE
 (
addr
Ë=
UNSPEC


4240 && 
	`XVECLEN
 (
addr
, 0) == 1

4241 && 
	`XINT
 (
addr
, 1Ë=
ARC_UNSPEC_GOT


4242 && 
	`GET_CODE
 (
	`XVECEXP
 (
addr
, 0, 0)Ë=
SYMBOL_REF
);

4243 
	}
}

4249 
boﬁ


4250 
	$¨c_Àgôim©e_pic_addr_p
 (
πx
 
addr
)

4252 i‡(
	`GET_CODE
 (
addr
Ë=
LABEL_REF
)

4253  
åue
;

4254 i‡(
	`GET_CODE
 (
addr
Ë!
CONST
)

4255  
Ál£
;

4257 
addr
 = 
	`XEXP
 (addr, 0);

4260 i‡(
	`GET_CODE
 (
addr
Ë=
PLUS
)

4262 i‡(
	`GET_CODE
 (
	`XEXP
 (
addr
, 1)Ë!
CONST_INT
)

4263  
Ál£
;

4264 
addr
 = 
	`XEXP
 (addr, 0);

4267 i‡(
	`GET_CODE
 (
addr
Ë!
UNSPEC


4268 || 
	`XVECLEN
 (
addr
, 0) != 1)

4269  
Ál£
;

4272 i‡(
	`XINT
 (
addr
, 1Ë!
ARC_UNSPEC_GOT


4273 && 
	`XINT
 (
addr
, 1Ë!
ARC_UNSPEC_GOTOFF
)

4274  
Ál£
;

4276 i‡(
	`GET_CODE
 (
	`XVECEXP
 (
addr
, 0, 0)Ë!
SYMBOL_REF


4277 && 
	`GET_CODE
 (
	`XVECEXP
 (
addr
, 0, 0)Ë!
LABEL_REF
)

4278  
Ál£
;

4280  
åue
;

4281 
	}
}

4287 
boﬁ


4288 
	$symbﬁic_ª„ªn˚_míti⁄ed_p
 (
πx
 
›
)

4290 c⁄° *
fmt
;

4291 
i
;

4293 i‡(
	`GET_CODE
 (
›
Ë=
SYMBOL_REF
 || GET_CODE (›Ë=
LABEL_REF
)

4294  
åue
;

4296 
fmt
 = 
	`GET_RTX_FORMAT
 (
	`GET_CODE
 (
›
));

4297 
i
 = 
	`GET_RTX_LENGTH
 (
	`GET_CODE
 (
›
)) - 1; i >= 0; i--)

4299 i‡(
fmt
[
i
] == 'E')

4301 
j
;

4303 
j
 = 
	`XVECLEN
 (
›
, 
i
) - 1; j >= 0; j--)

4304 i‡(
	`symbﬁic_ª„ªn˚_míti⁄ed_p
 (
	`XVECEXP
 (
›
, 
i
, 
j
)))

4305  
åue
;

4308 i‡(
fmt
[
i
] ='e' && 
	`symbﬁic_ª„ªn˚_míti⁄ed_p
 (
	`XEXP
 (
›
, i)))

4309  
åue
;

4312  
Ál£
;

4313 
	}
}

4320 
boﬁ


4321 
	$¨c_øw_symbﬁic_ª„ªn˚_míti⁄ed_p
 (
πx
 
›
, 
boﬁ
 
skù_loˇl
)

4323 c⁄° *
fmt
;

4324 
i
;

4326 i‡(
	`GET_CODE
(
›
Ë=
UNSPEC
)

4327  
Ál£
;

4329 i‡(
	`GET_CODE
 (
›
Ë=
SYMBOL_REF
)

4331 
åì
 
de˛
 = 
	`SYMBOL_REF_DECL
 (
›
);

4332  !
skù_loˇl
 || !
de˛
 || !
	`deÁu…_böds_loˇl_p
 (decl);

4335 
fmt
 = 
	`GET_RTX_FORMAT
 (
	`GET_CODE
 (
›
));

4336 
i
 = 
	`GET_RTX_LENGTH
 (
	`GET_CODE
 (
›
)) - 1; i >= 0; i--)

4338 i‡(
fmt
[
i
] == 'E')

4340 
j
;

4342 
j
 = 
	`XVECLEN
 (
›
, 
i
) - 1; j >= 0; j--)

4343 i‡(
	`¨c_øw_symbﬁic_ª„ªn˚_míti⁄ed_p
 (
	`XVECEXP
 (
›
, 
i
, 
j
),

4344 
skù_loˇl
))

4345  
åue
;

4348 i‡(
fmt
[
i
] == 'e'

4349 && 
	`¨c_øw_symbﬁic_ª„ªn˚_míti⁄ed_p
 (
	`XEXP
 (
›
, 
i
),

4350 
skù_loˇl
))

4351  
åue
;

4354  
Ál£
;

4355 
	}
}

4361 
πx


4362 
	$¨c_Àgôimize_pic_addªss
 (
πx
 
‹ig
,Ñtx 
ﬁdx
)

4364 
πx
 
addr
 = 
‹ig
;

4365 
πx
 
∑t
 = 
‹ig
;

4366 
πx
 
ba£
;

4368 i‡(
ﬁdx
 =
‹ig
)

4369 
ﬁdx
 = 
NULL
;

4371 i‡(
	`GET_CODE
 (
addr
Ë=
LABEL_REF
)

4373 i‡(
	`GET_CODE
 (
addr
Ë=
SYMBOL_REF


4374 && (
	`CONSTANT_POOL_ADDRESS_P
 (
addr
)

4375 || 
	`SYMBOL_REF_LOCAL_P
 (
addr
)))

4382 
¸é
->
u£s_pic_off£t_èbÀ
 = 1;

4383 
∑t
 = 
	`gí_πx_UNSPEC
 (
Pmode
, 
	`gí_πvec
 (1, 
addr
), 
ARC_UNSPEC_GOTOFF
);

4384 
∑t
 = 
	`gí_πx_CONST
 (
Pmode
,Öat);

4385 
∑t
 = 
	`gí_πx_PLUS
 (
Pmode
, 
pic_off£t_èbÀ_πx
,Öat);

4387 i‡(
ﬁdx
 =
NULL
)

4388 
ﬁdx
 = 
	`gí_ªg_πx
 (
Pmode
);

4390 i‡(
ﬁdx
 != 0)

4392 
	`emô_move_ö¢
 (
ﬁdx
, 
∑t
);

4393 
∑t
 = 
ﬁdx
;

4397 i‡(
	`GET_CODE
 (
addr
Ë=
SYMBOL_REF
)

4402 
∑t
 = 
	`gí_πx_UNSPEC
 (
Pmode
, 
	`gí_πvec
 (1, 
addr
), 
ARC_UNSPEC_GOT
);

4403 
∑t
 = 
	`gí_πx_CONST
 (
Pmode
,Öat);

4404 
∑t
 = 
	`gí_c⁄°_mem
 (
Pmode
,Öat);

4406 i‡(
ﬁdx
 == 0)

4407 
ﬁdx
 = 
	`gí_ªg_πx
 (
Pmode
);

4409 
	`emô_move_ö¢
 (
ﬁdx
, 
∑t
);

4410 
∑t
 = 
ﬁdx
;

4414 i‡(
	`GET_CODE
 (
addr
Ë=
CONST
)

4416 
addr
 = 
	`XEXP
 (addr, 0);

4417 i‡(
	`GET_CODE
 (
addr
Ë=
UNSPEC
)

4422 
	`gcc_as£π
 (
	`GET_CODE
 (
addr
Ë=
PLUS
);

4425 i‡(
	`GET_CODE
 (
addr
Ë=
PLUS
)

4427 
πx
 
›0
 = 
	`XEXP
 (
addr
, 0), 
›1
 = XEXP (addr, 1);

4431 i‡((
	`GET_CODE
 (
›0
Ë=
LABEL_REF


4432 || (
	`GET_CODE
 (
›0
Ë=
SYMBOL_REF


4433 && (
	`CONSTANT_POOL_ADDRESS_P
 (
›0
)

4434 || 
	`SYMBOL_REF_LOCAL_P
 (
›0
))))

4435 && 
	`GET_CODE
 (
›1
Ë=
CONST_INT
)

4438 
¸é
->
u£s_pic_off£t_èbÀ
 = 1;

4439 
∑t


4440 
	`gí_πx_UNSPEC
 (
Pmode
, 
	`gí_πvec
 (1, 
›0
), 
ARC_UNSPEC_GOTOFF
);

4441 
∑t
 = 
	`gí_πx_PLUS
 (
Pmode
,Ö©, 
›1
);

4442 
∑t
 = 
	`gí_πx_CONST
 (
Pmode
,Öat);

4443 
∑t
 = 
	`gí_πx_PLUS
 (
Pmode
, 
pic_off£t_èbÀ_πx
,Öat);

4445 i‡(
ﬁdx
 != 0)

4447 
	`emô_move_ö¢
 (
ﬁdx
, 
∑t
);

4448 
∑t
 = 
ﬁdx
;

4453 
ba£
 = 
	`¨c_Àgôimize_pic_addªss
 (
	`XEXP
 (
addr
, 0), 
ﬁdx
);

4454 
∑t
 = 
	`¨c_Àgôimize_pic_addªss
 (
	`XEXP
 (
addr
, 1),

4455 
ba£
 =
ﬁdx
 ? 
NULL_RTX
 : oldx);

4457 i‡(
	`GET_CODE
 (
∑t
Ë=
CONST_INT
)

4458 
∑t
 = 
	`∂us_c⁄°™t
 (
Pmode
, 
ba£
, 
	`INTVAL
 (pat));

4461 i‡(
	`GET_CODE
 (
∑t
Ë=
PLUS
 && 
	`CONSTANT_P
 (
	`XEXP
 (pat, 1)))

4463 
ba£
 = 
	`gí_πx_PLUS
 (
Pmode
, ba£, 
	`XEXP
 (
∑t
, 0));

4464 
∑t
 = 
	`XEXP
 (pat, 1);

4466 
∑t
 = 
	`gí_πx_PLUS
 (
Pmode
, 
ba£
,Öat);

4472  
∑t
;

4473 
	}
}

4478 
	$¨c_ouçut_pic_addr_c⁄°
 (
FILE
 * 
fûe
, 
πx
 
x
, 
code
)

4480 
buf
[256];

4482 
ª°¨t
:

4483 
	`GET_CODE
 (
x
))

4485 
PC
:

4486 i‡(
Êag_pic
)

4487 
	`putc
 ('.', 
fûe
);

4489 
	`gcc_uƒóchabÀ
 ();

4492 
SYMBOL_REF
:

4493 
	`ouçut_addr_c⁄°
 (
fûe
, 
x
);

4496 i‡(
code
 ='P' && ! 
	`SYMBOL_REF_LOCAL_P
 (
x
))

4497 
	`Âuts
 ("@∂t", 
fûe
);

4500 
LABEL_REF
:

4501 
	`ASM_GENERATE_INTERNAL_LABEL
 (
buf
, "L", 
	`CODE_LABEL_NUMBER
 (
	`XEXP
 (
x
, 0)));

4502 
	`as£mbÀ_«me
 (
fûe
, 
buf
);

4505 
CODE_LABEL
:

4506 
	`ASM_GENERATE_INTERNAL_LABEL
 (
buf
, "L", 
	`CODE_LABEL_NUMBER
 (
x
));

4507 
	`as£mbÀ_«me
 (
fûe
, 
buf
);

4510 
CONST_INT
:

4511 
	`Ârötf
 (
fûe
, 
HOST_WIDE_INT_PRINT_DEC
, 
	`INTVAL
 (
x
));

4514 
CONST
:

4515 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
	`XEXP
 (
x
, 0), 
code
);

4518 
CONST_DOUBLE
:

4519 i‡(
	`GET_MODE
 (
x
Ë=
VOIDmode
)

4522 i‡(
	`CONST_DOUBLE_HIGH
 (
x
))

4523 
	`Ârötf
 (
fûe
, 
HOST_WIDE_INT_PRINT_DOUBLE_HEX
,

4524 
	`CONST_DOUBLE_HIGH
 (
x
), 
	`CONST_DOUBLE_LOW
 (x));

4525 i‡(
	`CONST_DOUBLE_LOW
 (
x
) < 0)

4526 
	`Ârötf
 (
fûe
, 
HOST_WIDE_INT_PRINT_HEX
, 
	`CONST_DOUBLE_LOW
 (
x
));

4528 
	`Ârötf
 (
fûe
, 
HOST_WIDE_INT_PRINT_DEC
, 
	`CONST_DOUBLE_LOW
 (
x
));

4533 
	`ouçut_›î™d_losßge
 ("floating constant misused");

4536 
PLUS
:

4539 i‡(
	`GET_CODE
 (
	`XEXP
 (
x
, 0)Ë=
CONST_INT
)

4541 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
	`XEXP
 (
x
, 1), 
code
);

4542 
	`Ârötf
 (
fûe
, "+");

4543 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
	`XEXP
 (
x
, 0), 
code
);

4545 i‡(
	`GET_CODE
 (
	`XEXP
 (
x
, 1)Ë=
CONST_INT
)

4547 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
	`XEXP
 (
x
, 0), 
code
);

4548 i‡(
	`INTVAL
 (
	`XEXP
 (
x
, 1)) >= 0)

4549 
	`Ârötf
 (
fûe
, "+");

4550 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
	`XEXP
 (
x
, 1), 
code
);

4553 
	`gcc_uƒóchabÀ
();

4556 
MINUS
:

4559 
x
 = 
	`sim∂ify_subåa˘i⁄
 (x);

4560 i‡(
	`GET_CODE
 (
x
Ë!
MINUS
)

4561 
ª°¨t
;

4563 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
	`XEXP
 (
x
, 0), 
code
);

4564 
	`Ârötf
 (
fûe
, "-");

4565 i‡(
	`GET_CODE
 (
	`XEXP
 (
x
, 1)Ë=
CONST_INT


4566 && 
	`INTVAL
 (
	`XEXP
 (
x
, 1)) < 0)

4568 
	`Ârötf
 (
fûe
, "(");

4569 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
	`XEXP
 (
x
, 1), 
code
);

4570 
	`Ârötf
 (
fûe
, ")");

4573 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
	`XEXP
 (
x
, 1), 
code
);

4576 
ZERO_EXTEND
:

4577 
SIGN_EXTEND
:

4578 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
	`XEXP
 (
x
, 0), 
code
);

4582 
UNSPEC
:

4583 
	`gcc_as£π
 (
	`XVECLEN
 (
x
, 0) == 1);

4584 i‡(
	`XINT
 (
x
, 1Ë=
ARC_UNSPEC_GOT
)

4585 
	`Âuts
 ("p˛,", 
fûe
);

4586 
	`¨c_ouçut_pic_addr_c⁄°
 (
fûe
, 
	`XVECEXP
 (
x
, 0, 0), 
code
);

4587 
	`XINT
 (
x
, 1))

4589 
ARC_UNSPEC_GOT
:

4590 
	`Âuts
 ("@gŸpc", 
fûe
);

4592 
ARC_UNSPEC_GOTOFF
:

4593 
	`Âuts
 ("@gŸoff", 
fûe
);

4595 
ARC_UNSPEC_PLT
:

4596 
	`Âuts
 ("@∂t", 
fûe
);

4599 
	`ouçut_›î™d_losßge
 ("övÆid UNSPECá†›î™d: %d", 
	`XINT
 (
x
,1));

4605 
	`ouçut_›î™d_losßge
 ("invalidÉxpressionás operand");

4607 
	}
}

4609 
	#SYMBOLIC_CONST
(
X
) \

4610 (
	`GET_CODE
 (
X
Ë=
SYMBOL_REF
 \

4611 || 
	`GET_CODE
 (
X
Ë=
LABEL_REF
 \

4612 || (
	`GET_CODE
 (
X
Ë=
CONST
 && 
	`symbﬁic_ª„ªn˚_míti⁄ed_p
 (X)))

	)

4617 
	$emô_pic_move
 (
πx
 *
›î™ds
, 
machöe_mode
)

4619 
πx
 
ãmp
 = 
ªlﬂd_ö_¥ogªss
 ? 
›î™ds
[0] : 
	`gí_ªg_πx
 (
Pmode
);

4621 i‡(
	`GET_CODE
 (
›î™ds
[0]Ë=
MEM
 && 
	`SYMBOLIC_CONST
 (operands[1]))

4622 
›î™ds
[1] = 
	`f‹˚_ªg
 (
Pmode
, operands[1]);

4624 
›î™ds
[1] = 
	`¨c_Àgôimize_pic_addªss
 (›î™ds[1], 
ãmp
);

4625 
	}
}

4650 
	#GPR_REST_ARG_REGS
(
REGNO
Ë–((REGNOË<(
MAX_ARC_PARM_REGS
)) \

4651 ? ((
MAX_ARC_PARM_REGS
Ë- (
REGNO
)) \

4652 : 0 )

	)

4655 
	#ARC_NEXT_ARG_REG
(
REGNO
Ë–(REGNOË+ 1 )

	)

4660 
	$¨c_¨g_∑πül_byãs
 (
cumuœtive_¨gs_t
 
cum_v
, 
machöe_mode
 
mode
,

4661 
åì
 
ty≥
, 
boﬁ
 
«med
 
ATTRIBUTE_UNUSED
)

4663 
CUMULATIVE_ARGS
 *
cum
 = 
	`gë_cumuœtive_¨gs
 (
cum_v
);

4664 
byãs
 = (
mode
 =
BLKmode


4665 ? 
	`öt_size_ö_byãs
 (
ty≥
Ë: (Ë
	`GET_MODE_SIZE
 (
mode
));

4666 
w‹ds
 = (
byãs
 + 
UNITS_PER_WORD
 - 1) / UNITS_PER_WORD;

4667 
¨g_num
 = *
cum
;

4668 
ªt
;

4670 
¨g_num
 = 
	`ROUND_ADVANCE_CUM
 (¨g_num, 
mode
, 
ty≥
);

4671 
ªt
 = 
	`GPR_REST_ARG_REGS
 (
¨g_num
);

4674 
ªt
 = (ªà>
w‹ds
 ? 0 :Ñë * 
UNITS_PER_WORD
);

4676  
ªt
;

4677 
	}
}

4717 
πx


4718 
	$¨c_fun˘i⁄_¨g
 (
cumuœtive_¨gs_t
 
cum_v
, 
machöe_mode
 
mode
,

4719 
c⁄°_åì
 
ty≥
 
ATTRIBUTE_UNUSED
, 
boﬁ
 
«med
 ATTRIBUTE_UNUSED)

4721 
CUMULATIVE_ARGS
 *
cum
 = 
	`gë_cumuœtive_¨gs
 (
cum_v
);

4722 
¨g_num
 = *
cum
;

4723 
πx
 
ªt
;

4724 c⁄° *
deb°r
 
ATTRIBUTE_UNUSED
;

4726 
¨g_num
 = 
	`ROUND_ADVANCE_CUM
 (¨g_num, 
mode
, 
ty≥
);

4728 i‡(
mode
 =
VOIDmode
)

4730 
ªt
 = 
c⁄°0_πx
;

4731 
deb°r
 = "<0>";

4733 i‡(
	`GPR_REST_ARG_REGS
 (
¨g_num
) > 0)

4735 
ªt
 = 
	`gí_πx_REG
 (
mode
, 
¨g_num
);

4736 
deb°r
 = 
ªg_«mes
 [
¨g_num
];

4740 
ªt
 = 
NULL_RTX
;

4741 
deb°r
 = "memory";

4743  
ªt
;

4744 
	}
}

4765 
	$¨c_fun˘i⁄_¨g_adv™˚
 (
cumuœtive_¨gs_t
 
cum_v
, 
machöe_mode
 
mode
,

4766 
c⁄°_åì
 
ty≥
, 
boﬁ
 
«med
 
ATTRIBUTE_UNUSED
)

4768 
CUMULATIVE_ARGS
 *
cum
 = 
	`gë_cumuœtive_¨gs
 (
cum_v
);

4769 
byãs
 = (
mode
 =
BLKmode


4770 ? 
	`öt_size_ö_byãs
 (
ty≥
Ë: (Ë
	`GET_MODE_SIZE
 (
mode
));

4771 
w‹ds
 = (
byãs
 + 
UNITS_PER_WORD
 - 1) / UNITS_PER_WORD;

4772 
i
;

4774 i‡(
w‹ds
)

4775 *
cum
 = 
	`ROUND_ADVANCE_CUM
 (*cum, 
mode
, 
ty≥
);

4776 
i
 = 0; i < 
w‹ds
; i++)

4777 *
cum
 = 
	`ARC_NEXT_ARG_REG
 (*cum);

4779 
	}
}

4786 
πx


4787 
	$¨c_fun˘i⁄_vÆue
 (
c⁄°_åì
 
vÆty≥
,

4788 
c⁄°_åì
 
‚_de˛_‹_ty≥
 
ATTRIBUTE_UNUSED
,

4789 
boﬁ
 
outgoög
 
ATTRIBUTE_UNUSED
)

4791 
machöe_mode
 
mode
 = 
	`TYPE_MODE
 (
vÆty≥
);

4792 
unsig√dp
 
ATTRIBUTE_UNUSED
;

4794 
unsig√dp
 = 
	`TYPE_UNSIGNED
 (
vÆty≥
);

4795 i‡(
	`INTEGRAL_TYPE_P
 (
vÆty≥
Ë|| 
	`TREE_CODE
 (vÆty≥Ë=
OFFSET_TYPE
)

4796 
	`PROMOTE_MODE
 (
mode
, 
unsig√dp
, 
vÆty≥
);

4797  
	`gí_πx_REG
 (
mode
, 0);

4798 
	}
}

4802 
πx


4803 
	$¨c_ªtu∫_addr_πx
 (
cou¡
, 
ATTRIBUTE_UNUSED
 
πx
 
‰ame
)

4805 i‡(
cou¡
 != 0)

4806  
c⁄°0_πx
;

4808  
	`gë_h¨d_ªg_öôül_vÆ
 (
Pmode
 , 
RETURN_ADDR_REGNUM
);

4809 
	}
}

4815 
boﬁ


4816 
	$¨c_Àgôim©e_pic_›î™d_p
 (
πx
 
x
)

4818  !
	`¨c_øw_symbﬁic_ª„ªn˚_míti⁄ed_p
 (
x
, 
åue
);

4819 
	}
}

4824 
boﬁ


4825 
	$¨c_Àgôim©e_c⁄°™t_p
 (
machöe_mode
, 
πx
 
x
)

4827 i‡(!
Êag_pic
)

4828  
åue
;

4830 
	`GET_CODE
 (
x
))

4832 
CONST
:

4833 
x
 = 
	`XEXP
 (x, 0);

4835 i‡(
	`GET_CODE
 (
x
Ë=
PLUS
)

4837 i‡(
	`GET_CODE
 (
	`XEXP
 (
x
, 1)Ë!
CONST_INT
)

4838  
Ál£
;

4839 
x
 = 
	`XEXP
 (x, 0);

4843 i‡(
	`GET_CODE
 (
x
Ë=
UNSPEC
)

4844 
	`XINT
 (
x
, 1))

4846 
ARC_UNSPEC_PLT
:

4847 
ARC_UNSPEC_GOTOFF
:

4848 
ARC_UNSPEC_GOT
:

4849 
UNSPEC_PROF
:

4850  
åue
;

4853 
	`gcc_uƒóchabÀ
 ();

4857 i‡(
	`¨c_øw_symbﬁic_ª„ªn˚_míti⁄ed_p
 (
x
, 
åue
))

4858  
Ál£
;

4863 
LABEL_REF
:

4864 
SYMBOL_REF
:

4865  
Ál£
;

4872  
åue
;

4873 
	}
}

4875 
boﬁ


4876 
	$¨c_Àgôim©e_addªss_p
 (
machöe_mode
 
mode
, 
πx
 
x
, 
boﬁ
 
°ri˘
)

4878 i‡(
	`RTX_OK_FOR_BASE_P
 (
x
, 
°ri˘
))

4879  
åue
;

4880 i‡(
	`LEGITIMATE_OFFSET_ADDRESS_P
 (
mode
, 
x
, 
TARGET_INDEXED_LOADS
, 
°ri˘
))

4881  
åue
;

4882 i‡(
	`LEGITIMATE_SCALED_ADDRESS_P
 (
mode
, 
x
, 
°ri˘
))

4883  
åue
;

4884 i‡(
	`LEGITIMATE_SMALL_DATA_ADDRESS_P
 (
x
))

4885  
åue
;

4886 i‡(
	`GET_CODE
 (
x
Ë=
CONST_INT
 && 
	`LARGE_INT
 (
	`INTVAL
 (x)))

4887  
åue
;

4888 i‡((
	`GET_MODE_SIZE
 (
mode
) != 16)

4889 && (
	`GET_CODE
 (
x
Ë=
SYMBOL_REF


4890 || 
	`GET_CODE
 (
x
Ë=
LABEL_REF


4891 || 
	`GET_CODE
 (
x
Ë=
CONST
))

4893 i‡(!
Êag_pic
 || 
	`¨c_Àgôim©e_pic_addr_p
 (
x
))

4894  
åue
;

4896 i‡((
	`GET_CODE
 (
x
Ë=
PRE_DEC
 || GET_CODE (xË=
PRE_INC


4897 || 
	`GET_CODE
 (
x
Ë=
POST_DEC
 || GET_CODE (xË=
POST_INC
)

4898 && 
	`RTX_OK_FOR_BASE_P
 (
	`XEXP
 (
x
, 0), 
°ri˘
))

4899  
åue
;

4901 i‡((
	`GET_CODE
 (
x
Ë=
PRE_MODIFY
 || GET_CODE (xË=
POST_MODIFY
)

4902 && 
	`GET_CODE
 (
	`XEXP
 ((
x
), 1)Ë=
PLUS


4903 && 
	`πx_equÆ_p
 (
	`XEXP
 ((
x
), 0), XEXP (XEXP (x, 1), 0))

4904 && 
	`LEGITIMATE_OFFSET_ADDRESS_P
 (
QImode
, 
	`XEXP
 (
x
, 1),

4905 
TARGET_AUTO_MODIFY_REG
, 
°ri˘
))

4906  
åue
;

4907  
Ál£
;

4908 
	}
}

4913 
boﬁ


4914 
	$¨c_mode_dïídít_addªss_p
 (
c⁄°_πx
 
addr
, 
addr_•a˚_t
)

4921 i‡(
	`GET_CODE
 (
addr
Ë=
PLUS


4922 && (
	`GET_CODE
 (
	`XEXP
 ((
addr
), 0)Ë=
MULT


4923 || (
	`CONST_INT_P
 (
	`XEXP
 ((
addr
), 1))

4924 && !
	`SMALL_INT
 (
	`INTVAL
 (
	`XEXP
 ((
addr
), 1))))))

4925  
åue
;

4926  
Ál£
;

4927 
	}
}

4931 
boﬁ


4932 
	$¨c_ˇ¬Ÿ_f‹˚_c⁄°_mem
 (
machöe_mode
 
mode
, 
πx
 
x
)

4934  !
	`¨c_Àgôim©e_c⁄°™t_p
 (
mode
, 
x
);

4935 
	}
}

4939 
	#def_mbuûtö
(
MASK
, 
NAME
, 
TYPE
, 
CODE
) \

4942 i‡(
MASK
) \

4943 
	`add_buûtö_fun˘i⁄
 ((
NAME
), (
TYPE
), (
CODE
), 
BUILT_IN_MD
, 
NULL
, 
NULL_TREE
); \

4945 0)

	)

4949 
	$¨c_öô_buûtös
 ()

4951 
åì
 
ídlök
 = 
void_li°_node
;

4953 
åì
 
void_·y≥_void


4954 
	`buûd_fun˘i⁄_ty≥
 (
void_ty≥_node
,

4955 
ídlök
);

4957 
åì
 
öt_·y≥_öt


4958 
	`buûd_fun˘i⁄_ty≥
 (
öãgî_ty≥_node
,

4959 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
, 
ídlök
));

4961 
åì
 
pcvoid_ty≥_node


4962 
	`buûd_poöãr_ty≥
 (
	`buûd_quÆifõd_ty≥
 (
void_ty≥_node
, 
TYPE_QUAL_CONST
));

4963 
åì
 
öt_·y≥_pcvoid_öt


4964 
	`buûd_fun˘i⁄_ty≥
 (
öãgî_ty≥_node
,

4965 
	`åì_c⁄s
 (
NULL_TREE
, 
pcvoid_ty≥_node
,

4966 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
,

4967 
ídlök
)));

4969 
åì
 
öt_·y≥_sh‹t_öt


4970 
	`buûd_fun˘i⁄_ty≥
 (
öãgî_ty≥_node
,

4971 
	`åì_c⁄s
 (
NULL_TREE
, 
sh‹t_öãgî_ty≥_node
, 
ídlök
));

4973 
åì
 
void_·y≥_öt_öt


4974 
	`buûd_fun˘i⁄_ty≥
 (
void_ty≥_node
,

4975 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
,

4976 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
, 
ídlök
)));

4977 
åì
 
void_·y≥_usöt_usöt


4978 
	`buûd_fun˘i⁄_ty≥
 (
void_ty≥_node
,

4979 
	`åì_c⁄s
 (
NULL_TREE
, 
l⁄g_unsig√d_ty≥_node
,

4980 
	`åì_c⁄s
 (
NULL_TREE
, 
l⁄g_unsig√d_ty≥_node
, 
ídlök
)));

4982 
åì
 
öt_·y≥_öt_öt


4983 
	`buûd_fun˘i⁄_ty≥
 (
öãgî_ty≥_node
,

4984 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
,

4985 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
, 
ídlök
)));

4987 
åì
 
usöt_·y≥_usöt


4988 
	`buûd_fun˘i⁄_ty≥
 (
l⁄g_unsig√d_ty≥_node
,

4989 
	`åì_c⁄s
 (
NULL_TREE
, 
l⁄g_unsig√d_ty≥_node
, 
ídlök
));

4991 
åì
 
void_·y≥_usöt


4992 
	`buûd_fun˘i⁄_ty≥
 (
void_ty≥_node
,

4993 
	`åì_c⁄s
 (
NULL_TREE
, 
l⁄g_unsig√d_ty≥_node
, 
ídlök
));

4996 
	`def_mbuûtö
 (1,"__buûtö_¨c_n›", 
void_·y≥_void
, 
ARC_BUILTIN_NOP
);

4997 
	`def_mbuûtö
 (
TARGET_NORM
, "__buûtö_¨c_n‹m", 
öt_·y≥_öt
, 
ARC_BUILTIN_NORM
);

4998 
	`def_mbuûtö
 (
TARGET_NORM
, "__buûtö_¨c_n‹mw", 
öt_·y≥_sh‹t_öt
, 
ARC_BUILTIN_NORMW
);

4999 
	`def_mbuûtö
 (
TARGET_SWAP
, "__buûtö_¨c_sw≠", 
öt_·y≥_öt
, 
ARC_BUILTIN_SWAP
);

5000 
	`def_mbuûtö
 (
TARGET_MUL64_SET
,"__buûtö_¨c_mul64", 
void_·y≥_öt_öt
, 
ARC_BUILTIN_MUL64
);

5001 
	`def_mbuûtö
 (
TARGET_MUL64_SET
,"__buûtö_¨c_mulu64", 
void_·y≥_usöt_usöt
, 
ARC_BUILTIN_MULU64
);

5002 
	`def_mbuûtö
 (1,"__buûtö_¨c_πõ", 
void_·y≥_void
, 
ARC_BUILTIN_RTIE
);

5003 
	`def_mbuûtö
 (
TARGET_ARC700
,"__buûtö_¨c_sync", 
void_·y≥_void
, 
ARC_BUILTIN_SYNC
);

5004 
	`def_mbuûtö
 ((
TARGET_EA_SET
),"__buûtö_¨c_divaw", 
öt_·y≥_öt_öt
, 
ARC_BUILTIN_DIVAW
);

5005 
	`def_mbuûtö
 (1,"__buûtö_¨c_brk", 
void_·y≥_void
, 
ARC_BUILTIN_BRK
);

5006 
	`def_mbuûtö
 (1,"__buûtö_¨c_Êag", 
void_·y≥_usöt
, 
ARC_BUILTIN_FLAG
);

5007 
	`def_mbuûtö
 (1,"__buûtö_¨c_¶ìp", 
void_·y≥_usöt
, 
ARC_BUILTIN_SLEEP
);

5008 
	`def_mbuûtö
 (1,"__buûtö_¨c_swi", 
void_·y≥_void
, 
ARC_BUILTIN_SWI
);

5009 
	`def_mbuûtö
 (1,"__buûtö_¨c_c‹e_ªad", 
usöt_·y≥_usöt
, 
ARC_BUILTIN_CORE_READ
);

5010 
	`def_mbuûtö
 (1,"__buûtö_¨c_c‹e_wrôe", 
void_·y≥_usöt_usöt
, 
ARC_BUILTIN_CORE_WRITE
);

5011 
	`def_mbuûtö
 (1,"__buûtö_¨c_Ã", 
usöt_·y≥_usöt
, 
ARC_BUILTIN_LR
);

5012 
	`def_mbuûtö
 (1,"__buûtö_¨c_§", 
void_·y≥_usöt_usöt
, 
ARC_BUILTIN_SR
);

5013 
	`def_mbuûtö
 (
TARGET_ARC700
,"__buûtö_¨c_å≠_s", 
void_·y≥_usöt
, 
ARC_BUILTIN_TRAP_S
);

5014 
	`def_mbuûtö
 (
TARGET_ARC700
,"__buûtö_¨c_unimp_s", 
void_·y≥_void
, 
ARC_BUILTIN_UNIMP_S
);

5015 
	`def_mbuûtö
 (1,"__buûtö_¨c_Æig√d", 
öt_·y≥_pcvoid_öt
, 
ARC_BUILTIN_ALIGNED
);

5017 i‡(
TARGET_SIMD_SET
)

5018 
	`¨c_öô_simd_buûtös
 ();

5019 
	}
}

5021 
πx
 
¨c_ex∑nd_simd_buûtö
 (
åì
,Ñtx,Ñtx, 
machöe_mode
, );

5029 
πx


5030 
	$¨c_ex∑nd_buûtö
 (
åì
 
exp
,

5031 
πx
 
èrgë
,

5032 
πx
 
subèrgë
,

5033 
machöe_mode
 
mode
,

5034 
ign‹e
)

5036 
åì
 
‚de˛
 = 
	`TREE_OPERAND
 (
	`CALL_EXPR_FN
 (
exp
), 0);

5037 
åì
 
¨g0
;

5038 
åì
 
¨g1
;

5039 
πx
 
›0
;

5040 
πx
 
›1
;

5041 
fcode
 = 
	`DECL_FUNCTION_CODE
 (
‚de˛
);

5042 
icode
;

5043 
machöe_mode
 
mode0
;

5044 
machöe_mode
 
mode1
;

5046 i‡(
fcode
 > 
ARC_SIMD_BUILTIN_BEGIN
 && fcodê< 
ARC_SIMD_BUILTIN_END
)

5047  
	`¨c_ex∑nd_simd_buûtö
 (
exp
, 
èrgë
, 
subèrgë
, 
mode
, 
ign‹e
);

5049 
fcode
)

5051 
ARC_BUILTIN_NOP
:

5052 
	`emô_ö¢
 (
	`gí_n›
 ());

5053  
NULL_RTX
;

5055 
ARC_BUILTIN_NORM
:

5056 
icode
 = 
CODE_FOR_n‹m
;

5057 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5058 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5059 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

5060 
èrgë
 = 
	`gí_ªg_πx
 (
SImode
);

5062 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›0
, 
mode0
))

5063 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

5065 
	`emô_ö¢
 (
	`gí_n‹m
 (
èrgë
, 
›0
));

5066  
èrgë
;

5068 
ARC_BUILTIN_NORMW
:

5071 
icode
 = 
CODE_FOR_n‹mw
;

5072 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5073 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5074 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

5075 
èrgë
 = 
	`gí_ªg_πx
 (
SImode
);

5077 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›0
, 
mode0
))

5078 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, 
	`c⁄vît_to_mode
 (mode0, op0,0));

5080 
	`emô_ö¢
 (
	`gí_n‹mw
 (
èrgë
, 
›0
));

5081  
èrgë
;

5083 
ARC_BUILTIN_MUL64
:

5084 
icode
 = 
CODE_FOR_mul64
;

5085 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5086 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

5087 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5088 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5090 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[0].
mode
;

5091 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

5093 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[0].
¥ediˇã
Ë(
›0
, 
mode0
))

5094 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

5096 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›1
, 
mode1
))

5097 
›1
 = 
	`c›y_to_mode_ªg
 (
mode1
, op1);

5099 
	`emô_ö¢
 (
	`gí_mul64
 (
›0
,
›1
));

5100  
NULL_RTX
;

5102 
ARC_BUILTIN_MULU64
:

5103 
icode
 = 
CODE_FOR_mulu64
;

5104 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5105 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

5106 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5107 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5109 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[0].
mode
;

5110 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

5112 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[0].
¥ediˇã
Ë(
›0
, 
mode0
))

5113 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

5115 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[0].
¥ediˇã
Ë(
›1
, 
mode1
))

5116 
›1
 = 
	`c›y_to_mode_ªg
 (
mode1
, op1);

5118 
	`emô_ö¢
 (
	`gí_mulu64
 (
›0
,
›1
));

5119  
NULL_RTX
;

5121 
ARC_BUILTIN_RTIE
:

5122 
icode
 = 
CODE_FOR_πõ
;

5123 
	`emô_ö¢
 (
	`gí_πõ
 (
c⁄°1_πx
));

5124  
NULL_RTX
;

5126 
ARC_BUILTIN_SYNC
:

5127 
icode
 = 
CODE_FOR_sync
;

5128 
	`emô_ö¢
 (
	`gí_sync
 (
c⁄°1_πx
));

5129  
NULL_RTX
;

5131 
ARC_BUILTIN_SWAP
:

5132 
icode
 = 
CODE_FOR_sw≠
;

5133 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5134 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5135 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

5136 
èrgë
 = 
	`gí_ªg_πx
 (
SImode
);

5138 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›0
, 
mode0
))

5139 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

5141 
	`emô_ö¢
 (
	`gí_sw≠
 (
èrgë
, 
›0
));

5142  
èrgë
;

5144 
ARC_BUILTIN_DIVAW
:

5145 
icode
 = 
CODE_FOR_divaw
;

5146 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5147 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

5149 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5150 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5151 
èrgë
 = 
	`gí_ªg_πx
 (
SImode
);

5153 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[0].
mode
;

5154 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

5156 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[0].
¥ediˇã
Ë(
›0
, 
mode0
))

5157 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

5159 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›1
, 
mode1
))

5160 
›1
 = 
	`c›y_to_mode_ªg
 (
mode1
, op1);

5162 
	`emô_ö¢
 (
	`gí_divaw
 (
èrgë
, 
›0
, 
›1
));

5163  
èrgë
;

5165 
ARC_BUILTIN_BRK
:

5166 
icode
 = 
CODE_FOR_brk
;

5167 
	`emô_ö¢
 (
	`gí_brk
 (
c⁄°1_πx
));

5168  
NULL_RTX
;

5170 
ARC_BUILTIN_SLEEP
:

5171 
icode
 = 
CODE_FOR_¶ìp
;

5172 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5174 
	`fﬁd
 (
¨g0
);

5176 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5177 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

5179 
	`emô_ö¢
 (
	`gí_¶ìp
 (
›0
));

5180  
NULL_RTX
;

5182 
ARC_BUILTIN_SWI
:

5183 
icode
 = 
CODE_FOR_swi
;

5184 
	`emô_ö¢
 (
	`gí_swi
 (
c⁄°1_πx
));

5185  
NULL_RTX
;

5187 
ARC_BUILTIN_FLAG
:

5188 
icode
 = 
CODE_FOR_Êag
;

5189 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5190 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5191 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[0].
mode
;

5193 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[0].
¥ediˇã
Ë(
›0
, 
mode0
))

5194 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

5196 
	`emô_ö¢
 (
	`gí_Êag
 (
›0
));

5197  
NULL_RTX
;

5199 
ARC_BUILTIN_CORE_READ
:

5200 
icode
 = 
CODE_FOR_c‹e_ªad
;

5201 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5202 
èrgë
 = 
	`gí_ªg_πx
 (
SImode
);

5204 
	`fﬁd
 (
¨g0
);

5206 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5207 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

5209 
	`emô_ö¢
 (
	`gí_c‹e_ªad
 (
èrgë
, 
›0
));

5210  
èrgë
;

5212 
ARC_BUILTIN_CORE_WRITE
:

5213 
icode
 = 
CODE_FOR_c‹e_wrôe
;

5214 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5215 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

5217 
	`fﬁd
 (
¨g1
);

5219 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5220 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5222 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[0].
mode
;

5223 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

5225 
	`emô_ö¢
 (
	`gí_c‹e_wrôe
 (
›0
, 
›1
));

5226  
NULL_RTX
;

5228 
ARC_BUILTIN_LR
:

5229 
icode
 = 
CODE_FOR_Ã
;

5230 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5231 
èrgë
 = 
	`gí_ªg_πx
 (
SImode
);

5233 
	`fﬁd
 (
¨g0
);

5235 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5236 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

5238 
	`emô_ö¢
 (
	`gí_Ã
 (
èrgë
, 
›0
));

5239  
èrgë
;

5241 
ARC_BUILTIN_SR
:

5242 
icode
 = 
CODE_FOR_§
;

5243 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5244 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

5246 
	`fﬁd
 (
¨g1
);

5248 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5249 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5251 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[0].
mode
;

5252 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

5254 
	`emô_ö¢
 (
	`gí_§
 (
›0
, 
›1
));

5255  
NULL_RTX
;

5257 
ARC_BUILTIN_TRAP_S
:

5258 
icode
 = 
CODE_FOR_å≠_s
;

5259 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5261 
	`fﬁd
 (
¨g0
);

5263 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5264 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

5269 i‡(
	`CONST_INT_P
 (
›0
Ë&& !
	`ßtisfõs_c⁄°øöt_L
 (op0))

5273 
	`îr‹
 ("operandÅoÅrap_s should beán unsigned 6-bit value");

5275 
	`emô_ö¢
 (
	`gí_å≠_s
 (
›0
));

5276  
NULL_RTX
;

5278 
ARC_BUILTIN_UNIMP_S
:

5279 
icode
 = 
CODE_FOR_unimp_s
;

5280 
	`emô_ö¢
 (
	`gí_unimp_s
 (
c⁄°1_πx
));

5281  
NULL_RTX
;

5283 
ARC_BUILTIN_ALIGNED
:

5285 #ifde‡
CALL_EXPR_ARG


5286 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

5287 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

5289 
¨g0
 = 
	`TREE_VALUE
 (
¨gli°
);

5290 
¨g1
 = 
	`TREE_VALUE
 (
	`TREE_CHAIN
 (
¨gli°
));

5292 
	`fﬁd
 (
¨g1
);

5293 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5294 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
VOIDmode
, 
EXPAND_NORMAL
);

5295 
èrgë
 = 
	`gí_ªg_πx
 (
SImode
);

5298 
	`emô_ö¢
 (
	`gí_movsi
 (
èrgë
, 
c⁄°0_πx
));

5300 i‡(
	`GET_CODE
 (
›0
Ë=
CONST_INT
)

5302 
HOST_WIDE_INT
 
Æign
 = 
	`INTVAL
 (
›0
);

5304 
ÆignTe°
 = 0x00;

5305 
	`INTVAL
 (
›1
))

5308 32: 
ÆignTe°
 = 0xFF ;  ;;

5309 16: 
ÆignTe°
 = 0x7F ;  ;;

5310 8: 
ÆignTe°
 = 0x3F ;  ;;

5312 
	`îr‹
 ("invalidálignment value for __builtin_arc_aligned");

5313  
NULL_RTX
;

5318 i‡((
Æign
 & 
ÆignTe°
) == 0)

5320 
	`emô_ö¢
 (
	`gí_movsi
 (
èrgë
, 
c⁄°1_πx
));

5325 
Æign
 = 
	`gë_poöãr_Æignmít
 (
¨g0
);

5326 i‡(
Æign
)

5328 
numBôs
 = 
	`INTVAL
 (
›1
Ë* 
BITS_PER_UNIT
;

5329 i‡(
Æign
 =
numBôs
)

5331 
	`emô_ö¢
 (
	`gí_movsi
 (
èrgë
, 
c⁄°1_πx
));

5336  
èrgë
;

5343  
NULL_RTX
;

5344 
	}
}

5350 
boﬁ


5351 
	$check_if_vÆid_ªgno_c⁄°
 (
πx
 *
›î™ds
, 
›no
)

5354 
	`GET_CODE
 (
›î™ds
[
›no
]))

5356 
SYMBOL_REF
 :

5357 
CONST
 :

5358 
CONST_INT
 :

5359  
åue
;

5361 
	`îr‹
 ("registerÇumber must beá compile-time constant. Try giving higher optimizationÜevels");

5364  
Ál£
;

5365 
	}
}

5370 
boﬁ


5371 
	$check_if_vÆid_¶ìp_›î™d
 (
πx
 *
›î™ds
, 
›no
)

5373 
	`GET_CODE
 (
›î™ds
[
›no
]))

5375 
CONST
 :

5376 
CONST_INT
 :

5377 if–
	`UNSIGNED_INT6
 (
	`INTVAL
 (
›î™ds
[
›no
])))

5378  
åue
;

5380 
	`Áèl_îr‹
("operand for sleep instruction must beán unsigned 6 bit compile-time constant");

5383  
Ál£
;

5384 
	}
}

5388 
boﬁ


5389 
	$¨c_fun˘i⁄_ok_f‹_sibˇŒ
 (
åì
 
de˛
 
ATTRIBUTE_UNUSED
,

5390 
åì
 
exp
 
ATTRIBUTE_UNUSED
)

5393 i‡(
	`ARC_INTERRUPT_P
 (
	`¨c_compuã_fun˘i⁄_ty≥
 (
cfun
)))

5394  
Ál£
;

5397  
åue
;

5398 
	}
}

5404 
	$¨c_ouçut_mi_thunk
 (
FILE
 *
fûe
, 
åì
 
thunk
 
ATTRIBUTE_UNUSED
,

5405 
HOST_WIDE_INT
 
dñè
,

5406 
HOST_WIDE_INT
 
vˇŒ_off£t
,

5407 
åì
 
fun˘i⁄
)

5409 
mi_dñè
 = 
dñè
;

5410 c⁄° *c⁄° 
mi_›
 = 
mi_dñè
 < 0 ? "sub" : "add";

5411 
shi·
 = 0;

5412 
this_ªgno


5413 
	`aggªg©e_vÆue_p
 (
	`TREE_TYPE
 (TREE_TYPE (
fun˘i⁄
)), function) ? 1 : 0;

5414 
πx
 
‚addr
;

5416 i‡(
mi_dñè
 < 0)

5417 
mi_dñè
 = - mi_delta;

5422 
mi_dñè
 != 0)

5424 i‡((
mi_dñè
 & (3 << 
shi·
)) == 0)

5425 
shi·
 += 2;

5428 
	`asm_Ârötf
 (
fûe
, "\t%s\t%s, %s, %d\n",

5429 
mi_›
, 
ªg_«mes
[
this_ªgno
],Ñeg_names[this_regno],

5430 
mi_dñè
 & (0xf‡<< 
shi·
));

5431 
mi_dñè
 &~(0xf‡<< 
shi·
);

5432 
shi·
 += 8;

5437 i‡(
vˇŒ_off£t
 != 0)

5443 
	`asm_Ârötf
 (
fûe
, "\tld\t%s, [%s]\n",

5444 
ARC_TEMP_SCRATCH_REG
, 
ªg_«mes
[
this_ªgno
]);

5445 
	`asm_Ârötf
 (
fûe
, "\tadd\t%s, %s, %ld\n",

5446 
ARC_TEMP_SCRATCH_REG
, ARC_TEMP_SCRATCH_REG, 
vˇŒ_off£t
);

5447 
	`asm_Ârötf
 (
fûe
, "\tld\t%s, [%s]\n",

5448 
ARC_TEMP_SCRATCH_REG
, ARC_TEMP_SCRATCH_REG);

5449 
	`asm_Ârötf
 (
fûe
, "\èdd\t%s, %s, %s\n", 
ªg_«mes
[
this_ªgno
],

5450 
ªg_«mes
[
this_ªgno
], 
ARC_TEMP_SCRATCH_REG
);

5453 
‚addr
 = 
	`XEXP
 (
	`DECL_RTL
 (
fun˘i⁄
), 0);

5455 i‡(
	`¨c_is_l⁄gˇŒ_p
 (
‚addr
))

5456 
	`Âuts
 ("\tj\t", 
fûe
);

5458 
	`Âuts
 ("\tb\t", 
fûe
);

5459 
	`as£mbÀ_«me
 (
fûe
, 
	`XSTR
 (
‚addr
, 0));

5460 
	`Âutc
 ('\n', 
fûe
);

5461 
	}
}

5475 
boﬁ


5476 
	$¨c_is_l⁄gˇŒ_p
 (
πx
 
sym_ªf
)

5478 i‡(
	`GET_CODE
 (
sym_ªf
Ë!
SYMBOL_REF
)

5479  
Ál£
;

5481  (
	`SYMBOL_REF_LONG_CALL_P
 (
sym_ªf
)

5482 || (
TARGET_LONG_CALLS_SET
 && !
	`SYMBOL_REF_SHORT_CALL_P
 (
sym_ªf
)));

5484 
	}
}

5489 
boﬁ


5490 
	$¨c_¥ofûe_ˇŒ
 (
πx
 
ˇŒì
)

5492 
πx
 
‰om
 = 
	`XEXP
 (
	`DECL_RTL
 (
cuºít_fun˘i⁄_de˛
), 0);

5494 i‡(
	`CONSTANT_P
 (
ˇŒì
))

5496 
πx
 
cou¡_±r


5497 
	`gí_πx_CONST
 (
Pmode
,

5498 
	`gí_πx_UNSPEC
 (
Pmode
,

5499 
	`gí_πvec
 (3, 
‰om
, 
ˇŒì
,

5500 
	`CONST0_RTX
 (
Pmode
)),

5501 
UNSPEC_PROF
));

5502 
πx
 
cou¡î
 = 
	`gí_πx_MEM
 (
SImode
, 
cou¡_±r
);

5505 
	`emô_move_ö¢
 (
cou¡î
,

5506 
	`f‹˚_ªg
 (
SImode
, 
	`∂us_c⁄°™t
 (SImode, 
cou¡î
, 1)));

5507  
Ál£
;

5511 
πx
 
cou¡_li°_±r


5512 
	`gí_πx_CONST
 (
Pmode
,

5513 
	`gí_πx_UNSPEC
 (
Pmode
,

5514 
	`gí_πvec
 (3, 
‰om
, 
	`CONST0_RTX
 (
Pmode
),

5515 
	`CONST0_RTX
 (
Pmode
)),

5516 
UNSPEC_PROF
));

5517 
	`emô_move_ö¢
 (
	`gí_πx_REG
 (
Pmode
, 8), 
cou¡_li°_±r
);

5518 
	`emô_move_ö¢
 (
	`gí_πx_REG
 (
Pmode
, 9), 
ˇŒì
);

5519  
åue
;

5521 
	}
}

5525 
boﬁ


5526 
	$¨c_ªtu∫_ö_mem‹y
 (
c⁄°_åì
 
ty≥
, c⁄°_åì 
‚ty≥
 
ATTRIBUTE_UNUSED
)

5528 i‡(
	`AGGREGATE_TYPE_P
 (
ty≥
Ë|| 
	`TREE_ADDRESSABLE
 (type))

5529  
åue
;

5532 
HOST_WIDE_INT
 
size
 = 
	`öt_size_ö_byãs
 (
ty≥
);

5533  (
size
 == -1 || size > 8);

5535 
	}
}

5557 
wÆk_°‹es
 (
πx
 
x
, (*
fun
Ë‘tx,Ñtx, *), *
d©a
)

5559 
i
;

5561 i‡(
	`GET_CODE
 (
x
Ë=
COND_EXEC
)

5562 
x
 = 
	`COND_EXEC_CODE
 (x);

5564 i‡(
	`GET_CODE
 (
x
Ë=
SET
 || GET_CODE (xË=
CLOBBER
)

5566 
πx
 
de°
 = 
	`SET_DEST
 (
x
);

5568 (
	`GET_CODE
 (
de°
Ë=
SUBREG


5569 && (!
	`REG_P
 (
	`SUBREG_REG
 (
de°
))

5570 || 
	`REGNO
 (
	`SUBREG_REG
 (
de°
)Ë>
FIRST_PSEUDO_REGISTER
))

5571 || 
	`GET_CODE
 (
de°
Ë=
ZERO_EXTRACT


5572 || 
	`GET_CODE
 (
de°
Ë=
STRICT_LOW_PART
)

5573 
de°
 = 
	`XEXP
 (dest, 0);

5577 i‡(
	`GET_CODE
 (
de°
Ë=
PARALLEL
)

5579 
i
 = 
	`XVECLEN
 (
de°
, 0) - 1; i >= 0; i--)

5580 i‡(
	`XEXP
 (
	`XVECEXP
 (
de°
, 0, 
i
), 0) != 0)

5581 (*
fun
Ë(
	`XEXP
 (
	`XVECEXP
 (
de°
, 0, 
i
), 0), 
x
, 
d©a
);

5584 (*
fun
Ë(
de°
, 
x
, 
d©a
);

5587 i‡(
	`GET_CODE
 (
x
Ë=
PARALLEL
)

5588 
i
 = 
	`XVECLEN
 (
x
, 0) - 1; i >= 0; i--)

5589 
	`wÆk_°‹es
 (
	`XVECEXP
 (
x
, 0, 
i
), 
fun
, 
d©a
);

5590 
	}
}

5592 
boﬁ


5593 
	$¨c_∑ss_by_ª„ªn˚
 (
cumuœtive_¨gs_t
 
ˇ_v
 
ATTRIBUTE_UNUSED
,

5594 
machöe_mode
 
mode
 
ATTRIBUTE_UNUSED
,

5595 
c⁄°_åì
 
ty≥
,

5596 
boﬁ
 
«med
 
ATTRIBUTE_UNUSED
)

5598  (
ty≥
 != 0

5599 && (
	`TREE_CODE
 (
	`TYPE_SIZE
 (
ty≥
)Ë!
INTEGER_CST


5600 || 
	`TREE_ADDRESSABLE
 (
ty≥
)));

5601 
	}
}

5608 
	$¨c_övÆid_wôhö_dﬁo›
 (
c⁄°_πx
 
ö¢
)

5610 i‡(
	`CALL_P
 (
ö¢
))

5612  
NULL
;

5613 
	}
}

5615 
	g¨c_ª‹g_ö_¥ogªss
 = 0;

5620 
	$¨c_ª‹g
 ()

5622 
πx
 
ö¢
, 
∑âîn
;

5623 
πx
 
pc_èrgë
;

5624 
off£t
;

5625 
ch™ged
;

5627 
cfun
->
machöe
->
¨c_ª‹g_°¨ãd
 = 1;

5628 
¨c_ª‹g_ö_¥ogªss
 = 1;

5631 i‡(
¸é
->
¥ofûe
)

5633 
£˘i⁄
 *
ßve_ãxt_£˘i⁄
;

5634 
πx
 
ö¢
;

5635 
size
 = 
	`gë_max_uid
 () >> 4;

5636 
hèb_t
 
hèb
 = 
	`hèb_¸óã
 (
size
, 
un•ec_¥of_hash
, 
un•ec_¥of_hèb_eq
,

5637 
NULL
);

5639 
ßve_ãxt_£˘i⁄
 = 
ö_£˘i⁄
;

5640 
ö¢
 = 
	`gë_ö¢s
 (); in¢; in¢ = 
	`NEXT_INSN
 (insn))

5641 i‡(
	`NONJUMP_INSN_P
 (
ö¢
))

5642 
	`wÆk_°‹es
 (
	`PATTERN
 (
ö¢
), 
wrôe_¥ofûe_£˘i⁄s
, 
hèb
);

5643 i‡(
	`hèb_ñemíts
 (
hèb
))

5644 
ö_£˘i⁄
 = 0;

5645 
	`swôch_to_£˘i⁄
 (
ßve_ãxt_£˘i⁄
);

5646 
	`hèb_dñëe
 (
hèb
);

5651 
ö¢
 = 
	`gë_ö¢s
 (); in¢; in¢ = 
	`NEXT_INSN
 (insn))

5652 i‡(
	`GET_CODE
 (
ö¢
Ë=
JUMP_INSN


5653 && 
	`ªcog_memoized
 (
ö¢
Ë=
CODE_FOR_dﬁo›_íd_i
)

5655 
πx
 
t›_œbñ


5656 
	`XEXP
 (XEXP (
	`SET_SRC
 (
	`XVECEXP
 (
	`PATTERN
 (
ö¢
), 0, 0)), 1), 0);

5657 
πx
 
num
 = 
	`GEN_INT
 (
	`CODE_LABEL_NUMBER
 (
t›_œbñ
));

5658 
πx
 
Õ
, 
¥ev
 = 
	`¥ev_n⁄nŸe_ö¢
 (
t›_œbñ
);

5659 
πx
 
Õ_sim∂e
 = 
NULL_RTX
;

5660 
πx
 
√xt
 = 
NULL_RTX
;

5661 
πx
 
›0
 = 
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
ö¢
), 0, 1), 0);

5662 
£í_œbñ
 = 0;

5664 
Õ
 = 
¥ev
;

5665 (
Õ
 && 
	`NONJUMP_INSN_P
 (lp)

5666 && 
	`ªcog_memoized
 (
Õ
Ë!
CODE_FOR_dﬁo›_begö_i
);

5667 
Õ
 = 
	`¥ev_n⁄nŸe_ö¢
 (lp))

5669 i‡(!
Õ
 || !
	`NONJUMP_INSN_P
 (lp)

5670 || 
	`dód_‹_£t_ªgno_p
 (
Õ
, 
LP_COUNT
))

5672 
¥ev
 = 
√xt
 = 
ö¢
, 
Õ
 = 
NULL_RTX
 ;Örev ||Çext;)

5674 i‡(
¥ev
)

5676 i‡(
	`NONJUMP_INSN_P
 (
¥ev
)

5677 && 
	`ªcog_memoized
 (
¥ev
Ë=
CODE_FOR_dﬁo›_begö_i


5678 && (
	`INTVAL
 (
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
¥ev
), 0, 5), 0))

5679 =
	`INSN_UID
 (
ö¢
)))

5681 
Õ
 = 
¥ev
;

5684 i‡(
	`LABEL_P
 (
¥ev
))

5685 
£í_œbñ
 = 1;

5686 
¥ev
 = 
	`¥ev_n⁄nŸe_ö¢
 (prev);

5688 i‡(
√xt
)

5690 i‡(
	`NONJUMP_INSN_P
 (
√xt
)

5691 && 
	`ªcog_memoized
 (
√xt
Ë=
CODE_FOR_dﬁo›_begö_i


5692 && (
	`INTVAL
 (
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
√xt
), 0, 5), 0))

5693 =
	`INSN_UID
 (
ö¢
)))

5695 
Õ
 = 
√xt
;

5698 
√xt
 = 
	`√xt_n⁄nŸe_ö¢
 (next);

5701 
¥ev
 = 
NULL_RTX
;

5704 
Õ_sim∂e
 = 
Õ
;

5705 i‡(
Õ
 && !
	`dód_‹_£t_ªgno_p
 (Õ, 
LP_COUNT
))

5707 
πx
 
begö_˙t
 = 
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
Õ
), 0 ,3), 0);

5708 i‡(
	`INTVAL
 (
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
Õ
), 0, 4), 0)))

5712 
Áûuª
;

5718 i‡((
	`åue_ªgnum
 (
›0
Ë!
LP_COUNT
 || !
	`REG_P
 (
begö_˙t
))

5721 || (!
Õ_sim∂e
 && 
Õ
 !
√xt
 && !
£í_œbñ
))

5723 
	`ªmove_ö¢
 (
Õ
);

5724 
Áûuª
;

5735 i‡(
	`åue_ªgnum
 (
begö_˙t
Ë!
LP_COUNT
)

5737 
πx
 
mov
, 
£t
, 
nŸe
;

5739 
mov
 = 
	`¥ev_n⁄nŸe_ö¢
 (
Õ
); mov;

5740 
mov
 = 
	`¥ev_n⁄nŸe_ö¢
 (mov))

5742 i‡(!
	`NONJUMP_INSN_P
 (
mov
))

5743 
mov
 = 0;

5744 i‡((
£t
 = 
	`sögÀ_£t
 (
mov
))

5745 && 
	`πx_equÆ_p
 (
	`SET_SRC
 (
£t
), 
begö_˙t
)

5746 && 
	`πx_equÆ_p
 (
	`SET_DEST
 (
£t
), 
›0
))

5749 i‡(
mov
)

5751 
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
Õ
), 0 ,3), 0Ë
›0
;

5752 
nŸe
 = 
	`föd_ªgno_nŸe
 (
Õ
, 
REG_DEAD
, 
	`REGNO
 (
begö_˙t
));

5753 i‡(
nŸe
)

5754 
	`ªmove_nŸe
 (
Õ
, 
nŸe
);

5758 
	`ªmove_ö¢
 (
Õ
);

5759 
Áûuª
;

5762 
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
ö¢
), 0, 4), 0Ë
num
;

5763 
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
Õ
), 0, 4), 0Ë
num
;

5764 i‡(
√xt
 =
Õ
)

5765 
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
Õ
), 0, 6), 0Ë
c⁄°2_πx
;

5766 i‡(!
Õ_sim∂e
)

5767 
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
Õ
), 0, 6), 0Ë
c⁄°1_πx
;

5768 i‡(
¥ev
 !
Õ
)

5770 
	`ªmove_ö¢
 (
Õ
);

5771 
	`add_ö¢_a·î
 (
Õ
, 
¥ev
, 
NULL
);

5773 i‡(!
Õ_sim∂e
)

5775 
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
Õ
), 0, 7), 0)

5776 
	`gí_πx_LABEL_REF
 (
Pmode
, 
t›_œbñ
);

5777 
	`add_ªg_nŸe
 (
Õ
, 
REG_LABEL_OPERAND
, 
t›_œbñ
);

5778 
	`LABEL_NUSES
 (
t›_œbñ
)++;

5782 i‡(
	`√xt_a˘ive_ö¢
 (
t›_œbñ
Ë=
ö¢
)

5784 
πx
 
lc_£t


5785 
	`gí_πx_SET
 (
VOIDmode
,

5786 
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
Õ
), 0, 3), 0),

5787 
c⁄°0_πx
);

5789 
lc_£t
 = 
	`emô_ö¢_bef‹e
 (lc_£t, 
ö¢
);

5790 
	`dñëe_ö¢
 (
Õ
);

5791 
	`dñëe_ö¢
 (
ö¢
);

5792 
ö¢
 = 
lc_£t
;

5798 
πx
 
sˇn
;

5800 
sˇn
 = 
t›_œbñ
;

5801 (
sˇn
 && sˇ¿!
ö¢


5802 && (!
	`NONJUMP_INSN_P
 (
sˇn
Ë|| !
	`gë_©å_Àngth
 (scan)));

5803 
sˇn
 = 
	`NEXT_INSN
 (scan));

5804 i‡(
sˇn
 =
ö¢
)

5806 
	`ªmove_ö¢
 (
Õ
);

5807 
Áûuª
;

5822 
Áûuª
:

5823 i‡(!
	`REG_P
 (
›0
))

5825 
πx
 
›3
 = 
	`XEXP
 (
	`XVECEXP
 (
	`PATTERN
 (
ö¢
), 0, 5), 0);

5827 
	`emô_ö¢_bef‹e
 (
	`gí_move_ö¢
 (
›3
, 
›0
), 
ö¢
);

5828 
	`PATTERN
 (
ö¢
)

5829 
	`gí_dﬁo›_ÁŒback_m
 (
›3
, 
	`JUMP_LABEL
 (
ö¢
), 
›0
);

5832 
	`XVEC
 (
	`PATTERN
 (
ö¢
), 0)

5833 
	`gí_πvec
 (2, 
	`XVECEXP
 (
	`PATTERN
 (
ö¢
), 0, 0),

5834 
	`XVECEXP
 (
	`PATTERN
 (
ö¢
), 0, 1));

5835 
	`INSN_CODE
 (
ö¢
) = -1;

5871 i‡(
TARGET_NO_BRCC_SET
)

5876 
	`öô_ö¢_Àngths
();

5877 
ch™ged
 = 0;

5879 i‡(
›timize
 > 1 && !
TARGET_NO_COND_EXEC
)

5881 
	`¨c_ifcvt
 ();

5882 
Êags
 = 
∑ss_¨c_ifcvt
.
∑ss
.
todo_Êags_föish
;

5883 
	`df_föish_∑ss
 ((
Êags
 & 
TODO_df_vîify
) != 0);

5887 
	`sh‹ãn_bønches
 (
	`gë_ö¢s
());

5888 
cfun
->
machöe
->
ccfsm_cuºít_ö¢
 = 
NULL_RTX
;

5890 i‡(!
	`INSN_ADDRESSES_SET_P
())

5891 
	`Áèl_îr‹
 ("InsnáddressesÇot setáfter shorten_branches");

5893 
ö¢
 = 
	`gë_ö¢s
 (); in¢; in¢ = 
	`NEXT_INSN
 (insn))

5895 
πx
 
œbñ
;

5896 
©å_ty≥
 
ö¢_ty≥
;

5899 i‡(
	`GET_CODE
 (
ö¢
Ë!
JUMP_INSN
 ||

5900 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
ADDR_VEC


5901 || 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
ADDR_DIFF_VEC
)

5907 i‡(
	`ªcog_memoized
 (
ö¢
Ë=
CODE_FOR_cbønchsi4_s¸©ch
)

5909 
πx
 
∑t
 = 
	`PATTERN
 (
ö¢
);

5910 
πx
 
›
 = 
	`XEXP
 (
	`SET_SRC
 (
	`XVECEXP
 (
∑t
, 0, 0)), 0);

5911 
πx
 *
c˝
 = &
	`XEXP
 (
	`XVECEXP
 (
∑t
, 0, 1), 0);

5913 
off£t
 = 
	`bønch_de°
 (
ö¢
Ë- 
	`INSN_ADDRESSES
 (
	`INSN_UID
 (insn));

5914 i‡((
off£t
 >= -140 && offset < 140)

5915 && 
	`πx_equÆ_p
 (
	`XEXP
 (
›
, 1), 
c⁄°0_πx
)

5916 && 
	`com∑˘_ªgi°î_›î™d
 (
	`XEXP
 (
›
, 0), 
VOIDmode
)

5917 && 
	`equÆôy_com∑ris⁄_›î©‹
 (
›
, 
VOIDmode
))

5918 
	`PUT_MODE
 (*
c˝
, 
CC_Zmode
);

5919 i‡(
	`GET_MODE
 (*
c˝
Ë=
CC_Zmode
)

5920 
	`PUT_MODE
 (*
c˝
, 
CC_ZNmode
);

5923 i‡((
ö¢_ty≥
 = 
	`gë_©å_ty≥
 (
ö¢
)Ë=
TYPE_BRCC


5924 || 
ö¢_ty≥
 =
TYPE_BRCC_NO_DELAY_SLOT
)

5930 
∑âîn
 = 
	`PATTERN
 (
ö¢
);

5931 i‡(
	`GET_CODE
 (
∑âîn
Ë!
SET


5932 || 
	`GET_CODE
 (
	`SET_SRC
 (
∑âîn
)Ë!
IF_THEN_ELSE


5933 || 
	`ANY_RETURN_P
 (
	`XEXP
 (
	`SET_SRC
 (
∑âîn
), 1)))

5937 i‡(
	`föd_ªg_nŸe
 (
ö¢
, 
REG_CROSSING_JUMP
, 
NULL_RTX
))

5939 
off£t
 = 
	`bønch_de°
 (
ö¢
Ë- 
	`INSN_ADDRESSES
 (
	`INSN_UID
 (insn));

5941 if(
off£t
 > 253 || offset < -254)

5944 
pc_èrgë
 = 
	`SET_SRC
 (
∑âîn
);

5948 
œbñ
 = 
	`XEXP
 (
pc_èrgë
, 1);

5951 
πx
 
∑t
, 
sˇn
, 
lök_ö¢
 = 
NULL
;

5953 
sˇn
 = 
	`PREV_INSN
 (
ö¢
);

5954 
sˇn
 && 
	`GET_CODE
 (sˇnË!
CODE_LABEL
;

5955 
sˇn
 = 
	`PREV_INSN
 (scan))

5957 i‡(! 
	`INSN_P
 (
sˇn
))

5959 
∑t
 = 
	`PATTERN
 (
sˇn
);

5960 i‡(
	`GET_CODE
 (
∑t
Ë=
SET


5961 && 
	`cc_ªgi°î
 (
	`SET_DEST
 (
∑t
), 
VOIDmode
))

5963 
lök_ö¢
 = 
sˇn
;

5967 i‡(! 
lök_ö¢
)

5972 
πx
 
›
, 
cc_˛ob_πx
, 
›0
, 
›1
, 
brcc_ö¢
, 
nŸe
;

5973 
πx
 
cmp0
, 
cmp1
;

5976 
›
 = 
	`XEXP
 (
pc_èrgë
, 0);

5978 
›0
 = 
cmp0
 = 
	`XEXP
 (
	`SET_SRC
 (
∑t
), 0);

5979 
›1
 = 
cmp1
 = 
	`XEXP
 (
	`SET_SRC
 (
∑t
), 1);

5980 i‡(
	`GET_CODE
 (
›0
Ë=
ZERO_EXTRACT


5981 && 
	`XEXP
 (
›0
, 1Ë=
c⁄°1_πx


5982 && (
	`GET_CODE
 (
›
Ë=
EQ


5983 || 
	`GET_CODE
 (
›
Ë=
NE
))

5986 
›0
 = 
	`XEXP
 (
cmp0
, 0);

5987 
›1
 = 
	`XEXP
 (
cmp0
, 2);

5989 i‡(!
	`ªgi°î_›î™d
 (
›0
, 
VOIDmode
)

5990 || !
	`gíîÆ_›î™d
 (
›1
, 
VOIDmode
))

5995 i‡(
TARGET_SPFP


5996 && 
	`GET_MODE
 (
›0
Ë=
SFmode


5997 && 
	`GET_MODE
 (
›1
Ë=
SFmode
)

6002 i‡(
	`ªg_£t_bëwìn_p
 (
›0
, 
lök_ö¢
, 
ö¢
))

6005 i‡(
	`ªg_£t_bëwìn_p
 (
›1
, 
lök_ö¢
, 
ö¢
))

6012 i‡((
	`ªg_£t_bëwìn_p
 (
	`SET_DEST
 (
∑t
), 
lök_ö¢
, 
ö¢
))

6013 || (
	`ªg_u£d_bëwìn_p
 (
	`SET_DEST
 (
∑t
), 
lök_ö¢
, 
ö¢
)))

6017 i‡(!
	`föd_ªgno_nŸe
 (
ö¢
, 
REG_DEAD
, 
CC_REG
))

6020 
›
 = 
	`gí_πx_fmt_ì
 (
	`GET_CODE
 (op),

6021 
	`GET_MODE
 (
›
), 
cmp0
, 
cmp1
);

6027 i‡(!
	`brcc_nﬁimm_›î©‹
 (
›
, 
VOIDmode
)

6028 && !
	`l⁄g_immedüã_›î™d
 (
›1
, 
VOIDmode
)

6029 && (
TARGET_ARC700


6030 || 
	`√xt_a˘ive_ö¢
 (
lök_ö¢
Ë!
ö¢
))

6036 i‡(
›0
 !
cmp0
)

6037 
cc_˛ob_πx
 = 
	`gí_πx_REG
 (
CC_ZNmode
, 
CC_REG
);

6038 i‡((
off£t
 >= -140 && offset < 140)

6039 && 
	`πx_equÆ_p
 (
›1
, 
c⁄°0_πx
)

6040 && 
	`com∑˘_ªgi°î_›î™d
 (
›0
, 
VOIDmode
)

6041 && (
	`GET_CODE
 (
›
Ë=
EQ


6042 || 
	`GET_CODE
 (
›
Ë=
NE
))

6043 
cc_˛ob_πx
 = 
	`gí_πx_REG
 (
CC_Zmode
, 
CC_REG
);

6045 
cc_˛ob_πx
 = 
	`gí_πx_REG
 (
CCmode
, 
CC_REG
);

6047 
brcc_ö¢


6048 
	`gí_πx_IF_THEN_ELSE
 (
VOIDmode
, 
›
, 
œbñ
, 
pc_πx
);

6049 
brcc_ö¢
 = 
	`gí_πx_SET
 (
VOIDmode
, 
pc_πx
, brcc_insn);

6050 
cc_˛ob_πx
 = 
	`gí_πx_CLOBBER
 (
VOIDmode
, cc_clob_rtx);

6051 
brcc_ö¢


6052 
gí_πx_PARALLEL


6053 (
VOIDmode
, 
	`gí_πvec
 (2, 
brcc_ö¢
, 
cc_˛ob_πx
));

6054 
brcc_ö¢
 = 
	`emô_jump_ö¢_bef‹e
 (brcc_ö¢, 
ö¢
);

6056 
	`JUMP_LABEL
 (
brcc_ö¢
ËJUMP_LABEL (
ö¢
);

6057 
nŸe
 = 
	`föd_ªg_nŸe
 (
ö¢
, 
REG_BR_PROB
, 0);

6058 i‡(
nŸe
)

6060 
	`XEXP
 (
nŸe
, 1Ë
	`REG_NOTES
 (
brcc_ö¢
);

6061 
	`REG_NOTES
 (
brcc_ö¢
Ë
nŸe
;

6063 
nŸe
 = 
	`föd_ªg_nŸe
 (
lök_ö¢
, 
REG_DEAD
, 
›0
);

6064 i‡(
nŸe
)

6066 
	`ªmove_nŸe
 (
lök_ö¢
, 
nŸe
);

6067 
	`XEXP
 (
nŸe
, 1Ë
	`REG_NOTES
 (
brcc_ö¢
);

6068 
	`REG_NOTES
 (
brcc_ö¢
Ë
nŸe
;

6070 
nŸe
 = 
	`föd_ªg_nŸe
 (
lök_ö¢
, 
REG_DEAD
, 
›1
);

6071 i‡(
nŸe
)

6073 
	`XEXP
 (
nŸe
, 1Ë
	`REG_NOTES
 (
brcc_ö¢
);

6074 
	`REG_NOTES
 (
brcc_ö¢
Ë
nŸe
;

6077 
ch™ged
 = 1;

6080 
	`£t_ö¢_dñëed
 (
ö¢
);

6083 
	`£t_ö¢_dñëed
 (
lök_ö¢
);

6089 
	`INSN_ADDRESSES_FREE
 ();

6091 } 
ch™ged
);

6093 i‡(
	`INSN_ADDRESSES_SET_P
())

6094 
	`Áèl_îr‹
 ("insnáddressesÇot freed");

6096 
¨c_ª‹g_ö_¥ogªss
 = 0;

6097 
	}
}

6110 
boﬁ


6111 
	$vÆid_brcc_wôh_dñay_p
 (
πx
 *
›î™ds
)

6113 i‡(
›timize_size
 && 
	`GET_MODE
 (
›î™ds
[4]Ë=
CC_Zmode
)

6114  
Ál£
;

6115  
	`brcc_nﬁimm_›î©‹
 (
›î™ds
[0], 
VOIDmode
);

6116 
	}
}

6119 
boﬁ


6120 
	$¨c_de˛_™⁄_ns_mem_p
 (
c⁄°_åì
 
de˛
)

6124 i‡(
de˛
 =
NULL_TREE
 || de˛ =
îr‹_m¨k_node
)

6125  
Ál£
;

6126 i‡(
	`TREE_CODE
 (
de˛
Ë=
NAMESPACE_DECL


6127 && 
	`DECL_NAME
 (
de˛
Ë=
NULL_TREE
)

6128  
åue
;

6131 i‡(
	`TYPE_P
 (
de˛
))

6132  (
	`TREE_PUBLIC
 (
	`TYPE_NAME
 (
de˛
)) == 0);

6133 i‡(
	`TREE_CODE
 (
de˛
Ë=
NAMESPACE_DECL
)

6134  (
	`TREE_PUBLIC
 (
de˛
) == 0);

6136 
de˛
 = 
	`DECL_CONTEXT
 (decl);

6138 
	}
}

6143 
boﬁ


6144 
	$¨c_ö_smÆl_d©a_p
 (
c⁄°_åì
 
de˛
)

6146 
HOST_WIDE_INT
 
size
;

6148 i‡(
	`TREE_CODE
 (
de˛
Ë=
STRING_CST
 || TREE_CODE (de˛Ë=
FUNCTION_DECL
)

6149  
Ál£
;

6154 i‡(
TARGET_NO_SDATA_SET
)

6155  
Ál£
;

6157 i‡(
	`TREE_CODE
 (
de˛
Ë=
VAR_DECL
 && 
	`DECL_SECTION_NAME
 (decl) != 0)

6159 c⁄° *
«me
;

6162 
«me
 = 
	`TREE_STRING_POINTER
 (
	`DECL_SECTION_NAME
 (
de˛
));

6163 i‡(
	`°rcmp
 (
«me
, ".sdata") != 0 && strcmp (name, ".sbss") != 0)

6164  
Ál£
;

6168 i‡(!
	`DECL_EXTERNAL
 (
de˛
))

6169  
åue
;

6176 i‡(
	`TREE_CODE
 (
de˛
Ë!
VAR_DECL
)

6177  
Ál£
;

6179 i‡(
	`TREE_READONLY
 (
de˛
)

6180 && !
	`TREE_SIDE_EFFECTS
 (
de˛
)

6181 && (!
	`DECL_INITIAL
 (
de˛
Ë|| 
	`TREE_CONSTANT
 (DECL_INITIAL (decl))))

6182  
Ál£
;

6186 i‡(
	`deÁu…_böds_loˇl_p_1
 (
de˛
, 1)

6187 || 
	`¨c_de˛_™⁄_ns_mem_p
 (
de˛
))

6188  
Ál£
;

6192 i‡(
	`TREE_THIS_VOLATILE
 (
de˛
))

6193  
Ál£
;

6197 i‡(
	`DECL_WEAK
 (
de˛
))

6198  
Ál£
;

6200 
size
 = 
	`öt_size_ö_byãs
 (
	`TREE_TYPE
 (
de˛
));

6206  (
size
 > 0 && size <= 4);

6207 
	}
}

6212 
boﬁ


6213 
	$¨c_ªwrôe_smÆl_d©a_p
 (
πx
 
x
)

6215 i‡(
	`GET_CODE
 (
x
Ë=
CONST
)

6216 
x
 = 
	`XEXP
 (x, 0);

6218 i‡(
	`GET_CODE
 (
x
Ë=
PLUS
)

6220 i‡(
	`GET_CODE
 (
	`XEXP
 (
x
, 1)Ë=
CONST_INT
)

6221 
x
 = 
	`XEXP
 (x, 0);

6224  (
	`GET_CODE
 (
x
Ë=
SYMBOL_REF


6225 && 
	`SYMBOL_REF_SMALL_P
(
x
));

6226 
	}
}

6231 
	$¨c_ªwrôe_smÆl_d©a_1
 (
πx
 *
loc
, *
d©a
)

6233 i‡(
	`¨c_ªwrôe_smÆl_d©a_p
 (*
loc
))

6235 
πx
 
t›
;

6237 *
loc
 = 
	`gí_πx_PLUS
 (
Pmode
, 
pic_off£t_èbÀ_πx
, *loc);

6238 i‡(
loc
 =
d©a
)

6240 
t›
 = *(
πx
*Ë
d©a
;

6241 i‡(
	`GET_CODE
 (
t›
Ë=
MEM
 && &
	`XEXP
 (t›, 0Ë=
loc
)

6243 i‡(
	`GET_CODE
 (
t›
Ë=
MEM


6244 && 
	`GET_CODE
 (
	`XEXP
 (
t›
, 0)Ë=
PLUS


6245 && 
	`GET_CODE
 (
	`XEXP
 (XEXP (
t›
, 0), 0)Ë=
MULT
)

6246 *
loc
 = 
	`f‹˚_ªg
 (
Pmode
, *loc);

6248 
	`gcc_uƒóchabÀ
 ();

6252 i‡(
	`GET_CODE
 (*
loc
Ë=
PLUS


6253 && 
	`πx_equÆ_p
 (
	`XEXP
 (*
loc
, 0), 
pic_off£t_èbÀ_πx
))

6257 
	}
}

6262 
πx


6263 
	$¨c_ªwrôe_smÆl_d©a
 (
πx
 
›
)

6265 
›
 = 
	`c›y_ö¢
 (op);

6266 
	`f‹_óch_πx
 (&
›
, 
¨c_ªwrôe_smÆl_d©a_1
, &op);

6267  
›
;

6268 
	}
}

6273 
	$smÆl_d©a_∑âîn_1
 (
πx
 *
loc
, *
d©a
 
ATTRIBUTE_UNUSED
)

6275 i‡(
	`GET_CODE
 (*
loc
Ë=
PLUS


6276 && 
	`πx_equÆ_p
 (
	`XEXP
 (*
loc
, 0), 
pic_off£t_èbÀ_πx
))

6279  
	`¨c_ªwrôe_smÆl_d©a_p
 (*
loc
);

6280 
	}
}

6285 
boﬁ


6286 
	$smÆl_d©a_∑âîn
 (
πx
 
›
, 
machöe_mode
)

6288  (
	`GET_CODE
 (
›
Ë!
SEQUENCE


6289 && 
	`f‹_óch_πx
 (&
›
, 
smÆl_d©a_∑âîn_1
, 0));

6290 
	}
}

6299 
boﬁ


6300 
	$com∑˘_sda_mem‹y_›î™d
 (
πx
 
›
, 
machöe_mode
 
mode
)

6302 
πx
 
addr
;

6303 
size
;

6306 i‡(
	`GET_CODE
 (
›
Ë!
MEM
)

6307  
Ál£
;

6309 i‡(
mode
 =
VOIDmode
)

6310 
mode
 = 
	`GET_MODE
 (
›
);

6312 
size
 = 
	`GET_MODE_SIZE
 (
mode
);

6315 i‡(
size
 > 
UNITS_PER_WORD
)

6316  
Ál£
;

6319 
addr
 = 
	`XEXP
 (
›
, 0);

6321  
	`LEGITIMATE_SMALL_DATA_ADDRESS_P
 (
addr
);

6322 
	}
}

6327 
	$¨c_asm_ouçut_Æig√d_de˛_loˇl
 (
FILE
 * 
°ªam
, 
åì
 
de˛
, c⁄° * 
«me
,

6328 
HOST_WIDE_INT
 
size
,

6329 
HOST_WIDE_INT
 
Æign
,

6330 
HOST_WIDE_INT
 
globÆize_p
)

6332 
ö_smÆl_d©a
 = 
	`¨c_ö_smÆl_d©a_p
 (
de˛
);

6334 i‡(
ö_smÆl_d©a
)

6335 
	`swôch_to_£˘i⁄
 (
	`gë_«med_£˘i⁄
 (
NULL
, ".sbss", 0));

6338 
	`swôch_to_£˘i⁄
 (
bss_£˘i⁄
);

6340 i‡(
globÆize_p
)

6341 (*
èrgëm
.
asm_out
.
globÆize_œbñ
Ë(
°ªam
, 
«me
);

6343 
	`ASM_OUTPUT_ALIGN
 (
°ªam
, 
	`Êo‹_log2
 ((
Æign
Ë/ 
BITS_PER_UNIT
));

6344 
	`ASM_OUTPUT_TYPE_DIRECTIVE
 (
°ªam
, 
«me
, "object");

6345 
	`ASM_OUTPUT_SIZE_DIRECTIVE
 (
°ªam
, 
«me
, 
size
);

6346 
	`ASM_OUTPUT_LABEL
 (
°ªam
, 
«me
);

6348 i‡(
size
 != 0)

6349 
	`ASM_OUTPUT_SKIP
 (
°ªam
, 
size
);

6350 
	}
}

6386 
	esimd_ö¢_¨gs_ty≥
 {

6387 
	mVa_Vb_Vc
,

6388 
	mVa_Vb_æimm
,

6389 
	mVa_Vb_Ic
,

6390 
	mVa_Vb_u6
,

6391 
	mVa_Vb_u8
,

6392 
	mVa_æimm_u8
,

6394 
	mVa_Vb
,

6396 
	mvoid_æimm
,

6397 
	mvoid_u6
,

6399 
	mDa_u3_æimm
,

6400 
	mDa_æimm_æimm
,

6402 
	mVa_Ib_u8
,

6403 
	mvoid_Va_Ib_u8
,

6405 
	mVa_Vb_Ic_u8
,

6406 
	mvoid_Va_u3_Ib_u8


6409 
	sbuûtö_des¸ùti⁄


6411 
simd_ö¢_¨gs_ty≥
 
	m¨gs_ty≥
;

6412 c⁄° 
ö¢_code
 
	micode
;

6413 c⁄° * c⁄° 
	m«me
;

6414 c⁄° 
¨c_buûtös
 
	mcode
;

6417 c⁄° 
buûtö_des¸ùti⁄
 
	g¨c_simd_buûtö_desc_li°
[] =

6420 
	#SIMD_BUILTIN
(
ty≥
, 
code
, 
°rög
, 
buûtö
) \

6421 { 
ty≥
,
CODE_FOR_
##
code
, "__buûtö_¨c_" 
°rög
, \

6422 
ARC_SIMD_BUILTIN_
##
buûtö
 },

	)

6424 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vaddaw_ö¢
, "vaddaw", 
VADDAW
)

6425 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vaddw_ö¢
, "vaddw", 
VADDW
)

6426 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vavb_ö¢
, "vavb", 
VAVB
)

6427 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vavrb_ö¢
, "vavrb", 
VAVRB
)

6428 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vdiÁw_ö¢
, "vdiÁw", 
VDIFAW
)

6429 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vdifw_ö¢
, "vdifw", 
VDIFW
)

6430 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmaxaw_ö¢
, "vmaxaw", 
VMAXAW
)

6431 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmaxw_ö¢
, "vmaxw", 
VMAXW
)

6432 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmöaw_ö¢
, "vmöaw", 
VMINAW
)

6433 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmöw_ö¢
, "vmöw", 
VMINW
)

6434 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmuœw_ö¢
, "vmuœw", 
VMULAW
)

6435 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmulÁw_ö¢
, "vmulÁw", 
VMULFAW
)

6436 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmulfw_ö¢
, "vmulfw", 
VMULFW
)

6437 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmulw_ö¢
, "vmulw", 
VMULW
)

6438 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vsubaw_ö¢
, "vsubaw", 
VSUBAW
)

6439 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vsubw_ö¢
, "vsubw", 
VSUBW
)

6440 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vsummw_ö¢
, "vsummw", 
VSUMMW
)

6441 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
v™d_ö¢
, "v™d", 
VAND
)

6442 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
v™daw_ö¢
, "v™daw", 
VANDAW
)

6443 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vbic_ö¢
, "vbic", 
VBIC
)

6444 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vbiˇw_ö¢
, "vbiˇw", 
VBICAW
)

6445 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
v‹_ö¢
, "v‹", 
VOR
)

6446 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vx‹_ö¢
, "vx‹", 
VXOR
)

6447 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vx‹aw_ö¢
, "vx‹aw", 
VXORAW
)

6448 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
veqw_ö¢
, "veqw", 
VEQW
)

6449 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vÀw_ö¢
, "vÀw", 
VLEW
)

6450 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
v…w_ö¢
, "v…w", 
VLTW
)

6451 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
v√w_ö¢
, "v√w", 
VNEW
)

6452 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr1aw_ö¢
, "vmr1aw", 
VMR1AW
)

6453 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr1w_ö¢
, "vmr1w", 
VMR1W
)

6454 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr2aw_ö¢
, "vmr2aw", 
VMR2AW
)

6455 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr2w_ö¢
, "vmr2w", 
VMR2W
)

6456 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr3aw_ö¢
, "vmr3aw", 
VMR3AW
)

6457 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr3w_ö¢
, "vmr3w", 
VMR3W
)

6458 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr4aw_ö¢
, "vmr4aw", 
VMR4AW
)

6459 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr4w_ö¢
, "vmr4w", 
VMR4W
)

6460 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr5aw_ö¢
, "vmr5aw", 
VMR5AW
)

6461 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr5w_ö¢
, "vmr5w", 
VMR5W
)

6462 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr6aw_ö¢
, "vmr6aw", 
VMR6AW
)

6463 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr6w_ö¢
, "vmr6w", 
VMR6W
)

6464 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr7aw_ö¢
, "vmr7aw", 
VMR7AW
)

6465 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmr7w_ö¢
, "vmr7w", 
VMR7W
)

6466 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vmrb_ö¢
, "vmrb", 
VMRB
)

6467 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vh264f_ö¢
, "vh264f", 
VH264F
)

6468 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vh264·_ö¢
, "vh264·", 
VH264FT
)

6469 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vh264fw_ö¢
, "vh264fw", 
VH264FW
)

6470 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vvc1f_ö¢
, "vvc1f", 
VVC1F
)

6471 
SIMD_BUILTIN
 (
Va_Vb_Vc
, 
vvc1·_ö¢
, "vvc1·", 
VVC1FT
)

6473 
SIMD_BUILTIN
 (
Va_Vb_æimm
, 
vbaddw_ö¢
, "vbaddw", 
VBADDW
)

6474 
SIMD_BUILTIN
 (
Va_Vb_æimm
, 
vbmaxw_ö¢
, "vbmaxw", 
VBMAXW
)

6475 
SIMD_BUILTIN
 (
Va_Vb_æimm
, 
vbmöw_ö¢
, "vbmöw", 
VBMINW
)

6476 
SIMD_BUILTIN
 (
Va_Vb_æimm
, 
vbmuœw_ö¢
, "vbmuœw", 
VBMULAW
)

6477 
SIMD_BUILTIN
 (
Va_Vb_æimm
, 
vbmulfw_ö¢
, "vbmulfw", 
VBMULFW
)

6478 
SIMD_BUILTIN
 (
Va_Vb_æimm
, 
vbmulw_ö¢
, "vbmulw", 
VBMULW
)

6479 
SIMD_BUILTIN
 (
Va_Vb_æimm
, 
vbrsubw_ö¢
, "vbrsubw", 
VBRSUBW
)

6480 
SIMD_BUILTIN
 (
Va_Vb_æimm
, 
vbsubw_ö¢
, "vbsubw", 
VBSUBW
)

6483 
SIMD_BUILTIN
 (
Va_Vb_Ic
, 
va§w_ö¢
, "va§w", 
VASRW
)

6484 
SIMD_BUILTIN
 (
Va_Vb_Ic
, 
v§8_ö¢
, "v§8", 
VSR8
)

6485 
SIMD_BUILTIN
 (
Va_Vb_Ic
, 
v§8aw_ö¢
, "v§8aw", 
VSR8AW
)

6488 
SIMD_BUILTIN
 (
Va_Vb_u6
, 
va§rwi_ö¢
, "va§rwi", 
VASRRWi
)

6489 
SIMD_BUILTIN
 (
Va_Vb_u6
, 
va§§wi_ö¢
, "va§§wi", 
VASRSRWi
)

6490 
SIMD_BUILTIN
 (
Va_Vb_u6
, 
va§wi_ö¢
, "va§wi", 
VASRWi
)

6491 
SIMD_BUILTIN
 (
Va_Vb_u6
, 
va§pwbi_ö¢
, "va§pwbi", 
VASRPWBi
)

6492 
SIMD_BUILTIN
 (
Va_Vb_u6
, 
va§Ωwbi_ö¢
,"va§Ωwbi", 
VASRRPWBi
)

6493 
SIMD_BUILTIN
 (
Va_Vb_u6
, 
v§8awi_ö¢
, "v§8awi", 
VSR8AWi
)

6494 
SIMD_BUILTIN
 (
Va_Vb_u6
, 
v§8i_ö¢
, "v§8i", 
VSR8i
)

6497 
SIMD_BUILTIN
 (
Va_Vb_u8
, 
vmvaw_ö¢
, "vmvaw", 
VMVAW
)

6498 
SIMD_BUILTIN
 (
Va_Vb_u8
, 
vmvw_ö¢
, "vmvw", 
VMVW
)

6499 
SIMD_BUILTIN
 (
Va_Vb_u8
, 
vmvzw_ö¢
, "vmvzw", 
VMVZW
)

6500 
SIMD_BUILTIN
 (
Va_Vb_u8
, 
vd6èpf_ö¢
, "vd6èpf", 
VD6TAPF
)

6503 
SIMD_BUILTIN
 (
Va_æimm_u8
, 
vmovaw_ö¢
, "vmovaw", 
VMOVAW
)

6504 
SIMD_BUILTIN
 (
Va_æimm_u8
, 
vmovw_ö¢
, "vmovw", 
VMOVW
)

6505 
SIMD_BUILTIN
 (
Va_æimm_u8
, 
vmovzw_ö¢
, "vmovzw", 
VMOVZW
)

6508 
SIMD_BUILTIN
 (
Va_Vb
, 
vabßw_ö¢
, "vabßw", 
VABSAW
)

6509 
SIMD_BUILTIN
 (
Va_Vb
, 
vabsw_ö¢
, "vabsw", 
VABSW
)

6510 
SIMD_BUILTIN
 (
Va_Vb
, 
vaddsuw_ö¢
, "vaddsuw", 
VADDSUW
)

6511 
SIMD_BUILTIN
 (
Va_Vb
, 
vsignw_ö¢
, "vsignw", 
VSIGNW
)

6512 
SIMD_BUILTIN
 (
Va_Vb
, 
vexch1_ö¢
, "vexch1", 
VEXCH1
)

6513 
SIMD_BUILTIN
 (
Va_Vb
, 
vexch2_ö¢
, "vexch2", 
VEXCH2
)

6514 
SIMD_BUILTIN
 (
Va_Vb
, 
vexch4_ö¢
, "vexch4", 
VEXCH4
)

6515 
SIMD_BUILTIN
 (
Va_Vb
, 
vupbaw_ö¢
, "vupbaw", 
VUPBAW
)

6516 
SIMD_BUILTIN
 (
Va_Vb
, 
vupbw_ö¢
, "vupbw", 
VUPBW
)

6517 
SIMD_BUILTIN
 (
Va_Vb
, 
vupsbaw_ö¢
, "vupsbaw", 
VUPSBAW
)

6518 
SIMD_BUILTIN
 (
Va_Vb
, 
vupsbw_ö¢
, "vupsbw", 
VUPSBW
)

6521 
SIMD_BUILTIN
 (
Da_æimm_æimm
, 
vdúun_ö¢
, "vdúun", 
VDIRUN
)

6522 
SIMD_BUILTIN
 (
Da_æimm_æimm
, 
vd‹un_ö¢
, "vd‹un", 
VDORUN
)

6525 
SIMD_BUILTIN
 (
Da_u3_æimm
, 
vdiwr_ö¢
, "vdiwr", 
VDIWR
)

6526 
SIMD_BUILTIN
 (
Da_u3_æimm
, 
vdowr_ö¢
, "vdowr", 
VDOWR
)

6529 
SIMD_BUILTIN
 (
void_æimm
, 
vªc_ö¢
, "vªc", 
VREC
)

6530 
SIMD_BUILTIN
 (
void_æimm
, 
vrun_ö¢
, "vrun", 
VRUN
)

6531 
SIMD_BUILTIN
 (
void_æimm
, 
vª¸un_ö¢
, "vª¸un", 
VRECRUN
)

6532 
SIMD_BUILTIN
 (
void_æimm
, 
vídªc_ö¢
, "vídªc", 
VENDREC
)

6535 
SIMD_BUILTIN
 (
Va_Vb_Ic_u8
, 
vld32wh_ö¢
, "vld32wh", 
VLD32WH
)

6536 
SIMD_BUILTIN
 (
Va_Vb_Ic_u8
, 
vld32wl_ö¢
, "vld32wl", 
VLD32WL
)

6537 
SIMD_BUILTIN
 (
Va_Vb_Ic_u8
, 
vld64_ö¢
, "vld64", 
VLD64
)

6538 
SIMD_BUILTIN
 (
Va_Vb_Ic_u8
, 
vld32_ö¢
, "vld32", 
VLD32
)

6540 
SIMD_BUILTIN
 (
Va_Ib_u8
, 
vld64w_ö¢
, "vld64w", 
VLD64W
)

6541 
SIMD_BUILTIN
 (
Va_Ib_u8
, 
vld128_ö¢
, "vld128", 
VLD128
)

6542 
SIMD_BUILTIN
 (
void_Va_Ib_u8
, 
v°128_ö¢
, "v°128", 
VST128
)

6543 
SIMD_BUILTIN
 (
void_Va_Ib_u8
, 
v°64_ö¢
, "v°64", 
VST64
)

6546 
SIMD_BUILTIN
 (
void_Va_u3_Ib_u8
, 
v°16_n_ö¢
, "v°16_n", 
VST16_N
)

6547 
SIMD_BUILTIN
 (
void_Va_u3_Ib_u8
, 
v°32_n_ö¢
, "v°32_n", 
VST32_N
)

6549 
SIMD_BUILTIN
 (
void_u6
, 
vöti_ö¢
, "vöti", 
VINTI
)

6553 
	$¨c_öô_simd_buûtös
 ()

6555 
i
;

6556 
åì
 
ídlök
 = 
void_li°_node
;

6557 
åì
 
V8HI_ty≥_node
 = 
	`buûd_ve˘‹_ty≥_f‹_mode
 (
ötHI_ty≥_node
, 
V8HImode
);

6559 
åì
 
v8hi_·y≥_v8hi_v8hi


6560 
	`buûd_fun˘i⁄_ty≥
 (
V8HI_ty≥_node
,

6561 
	`åì_c⁄s
 (
NULL_TREE
, 
V8HI_ty≥_node
,

6562 
	`åì_c⁄s
 (
NULL_TREE
, 
V8HI_ty≥_node
,

6563 
ídlök
)));

6564 
åì
 
v8hi_·y≥_v8hi_öt


6565 
	`buûd_fun˘i⁄_ty≥
 (
V8HI_ty≥_node
,

6566 
	`åì_c⁄s
 (
NULL_TREE
, 
V8HI_ty≥_node
,

6567 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
,

6568 
ídlök
)));

6570 
åì
 
v8hi_·y≥_v8hi_öt_öt


6571 
	`buûd_fun˘i⁄_ty≥
 (
V8HI_ty≥_node
,

6572 
	`åì_c⁄s
 (
NULL_TREE
, 
V8HI_ty≥_node
,

6573 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
,

6574 
	`åì_c⁄s
 (
NULL_TREE
,

6575 
öãgî_ty≥_node
,

6576 
ídlök
))));

6578 
åì
 
void_·y≥_v8hi_öt_öt


6579 
	`buûd_fun˘i⁄_ty≥
 (
void_ty≥_node
,

6580 
	`åì_c⁄s
 (
NULL_TREE
, 
V8HI_ty≥_node
,

6581 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
,

6582 
	`åì_c⁄s
 (
NULL_TREE
,

6583 
öãgî_ty≥_node
,

6584 
ídlök
))));

6586 
åì
 
void_·y≥_v8hi_öt_öt_öt


6587 (
buûd_fun˘i⁄_ty≥


6588 (
void_ty≥_node
,

6589 
	`åì_c⁄s
 (
NULL_TREE
, 
V8HI_ty≥_node
,

6590 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
,

6591 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
,

6592 
	`åì_c⁄s
 (
NULL_TREE
,

6593 
öãgî_ty≥_node
,

6594 
ídlök
))))));

6596 
åì
 
v8hi_·y≥_öt_öt


6597 
	`buûd_fun˘i⁄_ty≥
 (
V8HI_ty≥_node
,

6598 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
,

6599 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
,

6600 
ídlök
)));

6602 
åì
 
void_·y≥_öt_öt


6603 
	`buûd_fun˘i⁄_ty≥
 (
void_ty≥_node
,

6604 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
,

6605 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
,

6606 
ídlök
)));

6608 
åì
 
void_·y≥_öt


6609 
	`buûd_fun˘i⁄_ty≥
 (
void_ty≥_node
,

6610 
	`åì_c⁄s
 (
NULL_TREE
, 
öãgî_ty≥_node
, 
ídlök
));

6612 
åì
 
v8hi_·y≥_v8hi


6613 
	`buûd_fun˘i⁄_ty≥
 (
V8HI_ty≥_node
, 
	`åì_c⁄s
 (
NULL_TREE
, V8HI_type_node,

6614 
ídlök
));

6618 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [0].
¨gs_ty≥
 =
Va_Vb_Vc
);

6619 
i
=0; 
¨c_simd_buûtö_desc_li°
 [i].
¨gs_ty≥
 =
Va_Vb_Vc
; i++)

6620 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6621 
v8hi_·y≥_v8hi_v8hi
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6623 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Vb_æimm
);

6624 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Vb_æimm
; i++)

6625 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6626 
v8hi_·y≥_v8hi_öt
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6628 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Vb_Ic
);

6629 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Vb_Ic
; i++)

6630 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6631 
v8hi_·y≥_v8hi_öt
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6633 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Vb_u6
);

6634 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Vb_u6
; i++)

6635 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6636 
v8hi_·y≥_v8hi_öt
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6638 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Vb_u8
);

6639 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Vb_u8
; i++)

6640 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6641 
v8hi_·y≥_v8hi_öt
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6643 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_æimm_u8
);

6644 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_æimm_u8
; i++)

6645 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6646 
v8hi_·y≥_öt_öt
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6648 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Vb
);

6649 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Vb
; i++)

6650 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6651 
v8hi_·y≥_v8hi
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6653 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Da_æimm_æimm
);

6654 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Da_æimm_æimm
; i++)

6655 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
 [
i
].
«me
,

6656 
void_·y≥_öt_öt
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6658 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Da_u3_æimm
);

6659 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Da_u3_æimm
; i++)

6660 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6661 
void_·y≥_öt_öt
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6663 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
void_æimm
);

6664 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
void_æimm
; i++)

6665 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6666 
void_·y≥_öt
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6668 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Vb_Ic_u8
);

6669 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Vb_Ic_u8
; i++)

6670 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6671 
v8hi_·y≥_v8hi_öt_öt
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6673 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Ib_u8
);

6674 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
Va_Ib_u8
; i++)

6675 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6676 
v8hi_·y≥_öt_öt
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6678 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
void_Va_Ib_u8
);

6679 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
void_Va_Ib_u8
; i++)

6680 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
 [
i
].
«me
,

6681 
void_·y≥_v8hi_öt_öt
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6683 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
void_Va_u3_Ib_u8
);

6684 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
void_Va_u3_Ib_u8
; i++)

6685 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6686 
void_·y≥_v8hi_öt_öt_öt
,

6687 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6689 
	`gcc_as£π
 (
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
void_u6
);

6690 ; 
¨c_simd_buûtö_desc_li°
 [
i
].
¨gs_ty≥
 =
void_u6
; i++)

6691 
	`def_mbuûtö
 (
TARGET_SIMD_SET
, 
¨c_simd_buûtö_desc_li°
[
i
].
«me
,

6692 
void_·y≥_öt
, 
¨c_simd_buûtö_desc_li°
[
i
].
code
);

6694 
	`gcc_as£π
(
i
 =
	`ARRAY_SIZE
 (
¨c_simd_buûtö_desc_li°
));

6695 
	}
}

6700 
πx


6701 
	$¨c_ex∑nd_simd_buûtö
 (
åì
 
exp
,

6702 
πx
 
èrgë
,

6703 
πx
 
subèrgë
 
ATTRIBUTE_UNUSED
,

6704 
machöe_mode
 
mode
 
ATTRIBUTE_UNUSED
,

6705 
ign‹e
 
ATTRIBUTE_UNUSED
)

6707 
åì
 
‚de˛
 = 
	`TREE_OPERAND
 (
	`CALL_EXPR_FN
 (
exp
), 0);

6708 
åì
 
¨g0
;

6709 
åì
 
¨g1
;

6710 
åì
 
¨g2
;

6711 
åì
 
¨g3
;

6712 
πx
 
›0
;

6713 
πx
 
›1
;

6714 
πx
 
›2
;

6715 
πx
 
›3
;

6716 
πx
 
›4
;

6717 
πx
 
∑t
;

6718 
i
;

6719 
fcode
 = 
	`DECL_FUNCTION_CODE
 (
‚de˛
);

6720 
icode
;

6721 
machöe_mode
 
mode0
;

6722 
machöe_mode
 
mode1
;

6723 
machöe_mode
 
mode2
;

6724 
machöe_mode
 
mode3
;

6725 
machöe_mode
 
mode4
;

6726 c⁄° 
buûtö_des¸ùti⁄
 * 
d
;

6728 
i
 = 0, 
d
 = 
¨c_simd_buûtö_desc_li°
;

6729 
i
 < 
	`ARRAY_SIZE
 (
¨c_simd_buûtö_desc_li°
); i++, 
d
++)

6730 i‡(
d
->
code
 =(c⁄° 
¨c_buûtös
Ë
fcode
)

6734 
	`gcc_as£π
 (
i
 < 
	`ARRAY_SIZE
 (
¨c_simd_buûtö_desc_li°
));

6736 
d
->
¨gs_ty≥
)

6738 
Va_Vb_æimm
:

6739 
icode
 = 
d
->icode;

6740 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

6741 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

6742 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
V8HImode
, 
EXPAND_NORMAL
);

6743 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

6745 
èrgë
 = 
	`gí_ªg_πx
 (
V8HImode
);

6746 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

6747 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[2].
mode
;

6749 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›0
, 
mode0
))

6750 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

6752 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[2].
¥ediˇã
Ë(
›1
, 
mode1
))

6753 
›1
 = 
	`c›y_to_mode_ªg
 (
mode1
, op1);

6755 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
èrgë
, 
›0
, 
›1
);

6756 i‡(! 
∑t
)

6759 
	`emô_ö¢
 (
∑t
);

6760  
èrgë
;

6762 
Va_Vb_u6
:

6763 
Va_Vb_u8
:

6764 
icode
 = 
d
->icode;

6765 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

6766 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

6767 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
V8HImode
, 
EXPAND_NORMAL
);

6768 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

6770 
èrgë
 = 
	`gí_ªg_πx
 (
V8HImode
);

6771 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

6772 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[2].
mode
;

6774 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›0
, 
mode0
))

6775 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

6777 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[2].
¥ediˇã
Ë(
›1
, 
mode1
)

6778 || (
d
->
¨gs_ty≥
 =
Va_Vb_u6
 && !
	`UNSIGNED_INT6
 (
	`INTVAL
 (
›1
)))

6779 || (
d
->
¨gs_ty≥
 =
Va_Vb_u8
 && !
	`UNSIGNED_INT8
 (
	`INTVAL
 (
›1
))))

6780 
	`îr‹
 ("operand 2 of %s instruction should beán unsigned %d-bit value",

6781 
d
->
«me
,

6782 (
d
->
¨gs_ty≥
 =
Va_Vb_u6
)? 6: 8);

6784 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
èrgë
, 
›0
, 
›1
);

6785 i‡(! 
∑t
)

6788 
	`emô_ö¢
 (
∑t
);

6789  
èrgë
;

6791 
Va_æimm_u8
:

6792 
icode
 = 
d
->icode;

6793 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

6794 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

6795 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

6796 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

6798 
èrgë
 = 
	`gí_ªg_πx
 (
V8HImode
);

6799 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

6800 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[2].
mode
;

6802 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›0
, 
mode0
))

6803 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

6805 i‡–(!(*
ö¢_d©a
[
icode
].
›î™d
[2].
¥ediˇã
Ë(
›1
, 
mode1
))

6806 || !(
	`UNSIGNED_INT8
 (
	`INTVAL
 (
›1
))))

6807 
	`îr‹
 ("operand 2 of %s instruction should beán unsigned 8-bit value",

6808 
d
->
«me
);

6810 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
èrgë
, 
›0
, 
›1
);

6811 i‡(! 
∑t
)

6814 
	`emô_ö¢
 (
∑t
);

6815  
èrgë
;

6817 
Va_Vb_Ic
:

6818 
icode
 = 
d
->icode;

6819 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

6820 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

6821 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
V8HImode
, 
EXPAND_NORMAL
);

6822 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

6823 
›2
 = 
	`gí_πx_REG
 (
V8HImode
, 
ARC_FIRST_SIMD_VR_REG
);

6825 
èrgë
 = 
	`gí_ªg_πx
 (
V8HImode
);

6826 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

6827 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[2].
mode
;

6829 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›0
, 
mode0
))

6830 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

6832 i‡–(!(*
ö¢_d©a
[
icode
].
›î™d
[2].
¥ediˇã
Ë(
›1
, 
mode1
))

6833 || !(
	`UNSIGNED_INT3
 (
	`INTVAL
 (
›1
))))

6834 
	`îr‹
 ("operand 2 of %s instruction should beán unsigned 3-bit value (I0-I7)",

6835 
d
->
«me
);

6837 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
èrgë
, 
›0
, 
›1
, 
›2
);

6838 i‡(! 
∑t
)

6841 
	`emô_ö¢
 (
∑t
);

6842  
èrgë
;

6844 
Va_Vb_Vc
:

6845 
icode
 = 
d
->icode;

6846 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

6847 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

6848 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
V8HImode
, 
EXPAND_NORMAL
);

6849 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
V8HImode
, 
EXPAND_NORMAL
);

6851 
èrgë
 = 
	`gí_ªg_πx
 (
V8HImode
);

6852 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

6853 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[2].
mode
;

6855 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›0
, 
mode0
))

6856 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

6858 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[2].
¥ediˇã
Ë(
›1
, 
mode1
))

6859 
›1
 = 
	`c›y_to_mode_ªg
 (
mode1
, op1);

6861 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
èrgë
, 
›0
, 
›1
);

6862 i‡(! 
∑t
)

6865 
	`emô_ö¢
 (
∑t
);

6866  
èrgë
;

6868 
Va_Vb
:

6869 
icode
 = 
d
->icode;

6870 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

6871 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
V8HImode
, 
EXPAND_NORMAL
);

6873 
èrgë
 = 
	`gí_ªg_πx
 (
V8HImode
);

6874 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

6876 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›0
, 
mode0
))

6877 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

6879 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
èrgë
, 
›0
);

6880 i‡(! 
∑t
)

6883 
	`emô_ö¢
 (
∑t
);

6884  
èrgë
;

6886 
Da_æimm_æimm
:

6887 
icode
 = 
d
->icode;

6888 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

6889 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

6890 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

6891 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

6894 i‡(
icode
 =
CODE_FOR_vdúun_ö¢
)

6895 
èrgë
 = 
	`gí_πx_REG
 (
SImode
, 131);

6896 i‡(
icode
 =
CODE_FOR_vd‹un_ö¢
)

6897 
èrgë
 = 
	`gí_πx_REG
 (
SImode
, 139);

6899 
	`gcc_uƒóchabÀ
 ();

6901 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

6902 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[2].
mode
;

6904 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›0
, 
mode0
))

6905 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

6907 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[2].
¥ediˇã
Ë(
›1
, 
mode1
))

6908 
›1
 = 
	`c›y_to_mode_ªg
 (
mode1
, op1);

6911 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
èrgë
, 
›0
, 
›1
);

6912 i‡(! 
∑t
)

6915 
	`emô_ö¢
 (
∑t
);

6916  
NULL_RTX
;

6918 
Da_u3_æimm
:

6919 
icode
 = 
d
->icode;

6920 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

6921 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

6922 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

6923 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

6926 i‡(! (
	`GET_CODE
 (
›0
Ë=
CONST_INT
)

6927 || !(
	`UNSIGNED_INT3
 (
	`INTVAL
 (
›0
))))

6928 
	`îr‹
 ("operand 1 of %s instruction should beán unsigned 3-bit value (DR0-DR7)",

6929 
d
->
«me
);

6931 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

6933 i‡(
icode
 =
CODE_FOR_vdiwr_ö¢
)

6934 
èrgë
 = 
	`gí_πx_REG
 (
SImode
,

6935 
ARC_FIRST_SIMD_DMA_CONFIG_IN_REG
 + 
	`INTVAL
 (
›0
));

6936 i‡(
icode
 =
CODE_FOR_vdowr_ö¢
)

6937 
èrgë
 = 
	`gí_πx_REG
 (
SImode
,

6938 
ARC_FIRST_SIMD_DMA_CONFIG_OUT_REG
 + 
	`INTVAL
 (
›0
));

6940 
	`gcc_uƒóchabÀ
 ();

6942 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[2].
¥ediˇã
Ë(
›1
, 
mode1
))

6943 
›1
 = 
	`c›y_to_mode_ªg
 (
mode1
, op1);

6945 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
èrgë
, 
›1
);

6946 i‡(! 
∑t
)

6949 
	`emô_ö¢
 (
∑t
);

6950  
NULL_RTX
;

6952 
void_u6
:

6953 
icode
 = 
d
->icode;

6954 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

6956 
	`fﬁd
 (
¨g0
);

6958 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

6959 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[0].
mode
;

6962 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[0].
¥ediˇã
Ë(
›0
, 
mode0
)

6963 || !(
	`UNSIGNED_INT6
 (
	`INTVAL
 (
›0
))))

6964 
	`îr‹
 ("operand of %s instruction should beán unsigned 6-bit value",

6965 
d
->
«me
);

6967 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
›0
);

6968 i‡(! 
∑t
)

6971 
	`emô_ö¢
 (
∑t
);

6972  
NULL_RTX
;

6974 
void_æimm
:

6975 
icode
 = 
d
->icode;

6976 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

6978 
	`fﬁd
 (
¨g0
);

6980 
›0
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

6981 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[0].
mode
;

6983 i‡(! (*
ö¢_d©a
[
icode
].
›î™d
[0].
¥ediˇã
Ë(
›0
, 
mode0
))

6984 
›0
 = 
	`c›y_to_mode_ªg
 (
mode0
, op0);

6986 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
›0
);

6987 i‡(! 
∑t
)

6990 
	`emô_ö¢
 (
∑t
);

6991  
NULL_RTX
;

6993 
Va_Vb_Ic_u8
:

6995 
πx
 
§c_vªg
;

6996 
icode
 = 
d
->icode;

6997 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

6998 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

6999 
¨g2
 = 
	`CALL_EXPR_ARG
 (
exp
, 2);

7001 
§c_vªg
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
V8HImode
, 
EXPAND_NORMAL
);

7002 
›0
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

7003 
›1
 = 
	`ex∑nd_ex¥
 (
¨g2
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

7004 
›2
 = 
	`gí_πx_REG
 (
V8HImode
, 
ARC_FIRST_SIMD_VR_REG
);

7007 
	`emô_ö¢
 (
	`gí_move_ö¢
 (
èrgë
, 
§c_vªg
));

7010 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[3].
mode
;

7011 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

7013 i‡–(!(*
ö¢_d©a
[
icode
].
›î™d
[3].
¥ediˇã
Ë(
›0
, 
mode0
))

7014 || !(
	`UNSIGNED_INT3
 (
	`INTVAL
 (
›0
))))

7015 
	`îr‹
 ("operand 1 of %s instruction should beán unsigned 3-bit value (I0-I7)",

7016 
d
->
«me
);

7018 i‡–(!(*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›1
, 
mode1
))

7019 || !(
	`UNSIGNED_INT8
 (
	`INTVAL
 (
›1
))))

7020 
	`îr‹
 ("operand 2 of %s instruction should beán unsigned 8-bit value",

7021 
d
->
«me
);

7023 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
èrgë
, 
›1
, 
›2
, 
›0
);

7024 i‡(! 
∑t
)

7027 
	`emô_ö¢
 (
∑t
);

7028  
èrgë
;

7031 
void_Va_Ib_u8
:

7032 
icode
 = 
d
->icode;

7033 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

7034 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

7035 
¨g2
 = 
	`CALL_EXPR_ARG
 (
exp
, 2);

7037 
›0
 = 
	`gí_πx_REG
 (
V8HImode
, 
ARC_FIRST_SIMD_VR_REG
);

7038 
›1
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

7039 
›2
 = 
	`ex∑nd_ex¥
 (
¨g2
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

7040 
›3
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
V8HImode
, 
EXPAND_NORMAL
);

7042 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[0].
mode
;

7043 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

7044 
mode2
 = 
ö¢_d©a
[
icode
].
›î™d
[2].
mode
;

7045 
mode3
 = 
ö¢_d©a
[
icode
].
›î™d
[3].
mode
;

7047 i‡–(!(*
ö¢_d©a
[
icode
].
›î™d
[1].
¥ediˇã
Ë(
›1
, 
mode1
))

7048 || !(
	`UNSIGNED_INT3
 (
	`INTVAL
 (
›1
))))

7049 
	`îr‹
 ("operand 2 of %s instruction should beán unsigned 3-bit value (I0-I7)",

7050 
d
->
«me
);

7052 i‡–(!(*
ö¢_d©a
[
icode
].
›î™d
[2].
¥ediˇã
Ë(
›2
, 
mode2
))

7053 || !(
	`UNSIGNED_INT8
 (
	`INTVAL
 (
›2
))))

7054 
	`îr‹
 ("operand 3 of %s instruction should beán unsigned 8-bit value",

7055 
d
->
«me
);

7057 i‡(!(*
ö¢_d©a
[
icode
].
›î™d
[3].
¥ediˇã
Ë(
›3
, 
mode3
))

7058 
›3
 = 
	`c›y_to_mode_ªg
 (
mode3
, op3);

7060 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
›0
, 
›1
, 
›2
, 
›3
);

7061 i‡(! 
∑t
)

7064 
	`emô_ö¢
 (
∑t
);

7065  
NULL_RTX
;

7067 
Va_Ib_u8
:

7068 
icode
 = 
d
->icode;

7069 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

7070 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

7072 
›0
 = 
	`gí_πx_REG
 (
V8HImode
, 
ARC_FIRST_SIMD_VR_REG
);

7073 
›1
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

7074 
›2
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

7077 
èrgë
 = 
	`gí_ªg_πx
 (
V8HImode
);

7080 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[1].
mode
;

7081 
mode1
 = 
ö¢_d©a
[
icode
].
›î™d
[2].
mode
;

7082 
mode2
 = 
ö¢_d©a
[
icode
].
›î™d
[3].
mode
;

7084 i‡–(!(*
ö¢_d©a
[
icode
].
›î™d
[2].
¥ediˇã
Ë(
›1
, 
mode1
))

7085 || !(
	`UNSIGNED_INT3
 (
	`INTVAL
 (
›1
))))

7086 
	`îr‹
 ("operand 1 of %s instruction should beán unsigned 3-bit value (I0-I7)",

7087 
d
->
«me
);

7089 i‡–(!(*
ö¢_d©a
[
icode
].
›î™d
[3].
¥ediˇã
Ë(
›2
, 
mode2
))

7090 || !(
	`UNSIGNED_INT8
 (
	`INTVAL
 (
›2
))))

7091 
	`îr‹
 ("operand 2 of %s instruction should beán unsigned 8-bit value",

7092 
d
->
«me
);

7094 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
èrgë
, 
›0
, 
›1
, 
›2
);

7095 i‡(! 
∑t
)

7098 
	`emô_ö¢
 (
∑t
);

7099  
èrgë
;

7101 
void_Va_u3_Ib_u8
:

7102 
icode
 = 
d
->icode;

7103 
¨g0
 = 
	`CALL_EXPR_ARG
 (
exp
, 0);

7104 
¨g1
 = 
	`CALL_EXPR_ARG
 (
exp
, 1);

7105 
¨g2
 = 
	`CALL_EXPR_ARG
 (
exp
, 2);

7106 
¨g3
 = 
	`CALL_EXPR_ARG
 (
exp
, 3);

7108 
›0
 = 
	`ex∑nd_ex¥
 (
¨g3
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

7109 
›1
 = 
	`gí_πx_REG
 (
V8HImode
, 
ARC_FIRST_SIMD_VR_REG
);

7110 
›2
 = 
	`ex∑nd_ex¥
 (
¨g2
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

7111 
›3
 = 
	`ex∑nd_ex¥
 (
¨g0
, 
NULL_RTX
, 
V8HImode
, 
EXPAND_NORMAL
);

7112 
›4
 = 
	`ex∑nd_ex¥
 (
¨g1
, 
NULL_RTX
, 
SImode
, 
EXPAND_NORMAL
);

7114 
mode0
 = 
ö¢_d©a
[
icode
].
›î™d
[0].
mode
;

7115 
mode2
 = 
ö¢_d©a
[
icode
].
›î™d
[2].
mode
;

7116 
mode3
 = 
ö¢_d©a
[
icode
].
›î™d
[3].
mode
;

7117 
mode4
 = 
ö¢_d©a
[
icode
].
›î™d
[4].
mode
;

7120 i‡–(!(*
ö¢_d©a
[
icode
].
›î™d
[0].
¥ediˇã
Ë(
›0
, 
mode0
))

7121 || !(
	`UNSIGNED_INT8
 (
	`INTVAL
 (
›0
))))

7122 
	`îr‹
 ("operand 4 of %s instruction should beán unsigned 8-bit value (0-255)",

7123 
d
->
«me
);

7125 i‡–(!(*
ö¢_d©a
[
icode
].
›î™d
[2].
¥ediˇã
Ë(
›2
, 
mode2
))

7126 || !(
	`UNSIGNED_INT3
 (
	`INTVAL
 (
›2
))))

7127 
	`îr‹
 ("operand 3 of %s instruction should beán unsigned 3-bit value (I0-I7)",

7128 
d
->
«me
);

7130 i‡(!(*
ö¢_d©a
[
icode
].
›î™d
[3].
¥ediˇã
Ë(
›3
, 
mode3
))

7131 
›3
 = 
	`c›y_to_mode_ªg
 (
mode3
, op3);

7133 i‡–(!(*
ö¢_d©a
[
icode
].
›î™d
[4].
¥ediˇã
Ë(
›4
, 
mode4
))

7134 || !(
	`UNSIGNED_INT3
 (
	`INTVAL
 (
›4
))))

7135 
	`îr‹
 ("operand 2 of %s instruction should beán unsigned 3-bit value (subreg 0-7)",

7136 
d
->
«me
);

7137 i‡(
icode
 =
CODE_FOR_v°32_n_ö¢


7138 && ((
	`INTVAL
(
›4
) % 2 ) != 0))

7139 
	`îr‹
 ("operand 2 of %s instruction should beánÉven 3-bit value (subreg 0,2,4,6)",

7140 
d
->
«me
);

7142 
∑t
 = 
	`GEN_FCN
 (
icode
Ë(
›0
, 
›1
, 
›2
, 
›3
, 
›4
);

7143 i‡(! 
∑t
)

7146 
	`emô_ö¢
 (
∑t
);

7147  
NULL_RTX
;

7150 
	`gcc_uƒóchabÀ
 ();

7152  
NULL_RTX
;

7153 
	}
}

7155 
boﬁ


7156 
	$¨c_¥e£rve_ªlﬂd_p
 (
πx
 
ö
)

7158  (
	`GET_CODE
 (
ö
Ë=
PLUS


7159 && 
	`RTX_OK_FOR_BASE_P
 (
	`XEXP
 (
ö
, 0), 
åue
)

7160 && 
	`CONST_INT_P
 (
	`XEXP
 (
ö
, 1))

7161 && !((
	`INTVAL
 (
	`XEXP
 (
ö
, 1)) & 511)));

7162 
	}
}

7165 
	$¨c_ªgi°î_move_co°
 (
machöe_mode
,

7166 
ªg_˛ass
 
‰om_˛ass
, ªg_˛as†
to_˛ass
)

7170 i‡(
TARGET_ARC600
)

7172 i‡(
to_˛ass
 =
MPY_WRITABLE_CORE_REGS
)

7176 i‡(
to_˛ass
 =
LPCOUNT_REG
)

7178 i‡(
to_˛ass
 =
WRITABLE_CORE_REGS
)

7183 i‡(
TARGET_ARC700


7184 && (
‰om_˛ass
 =
LPCOUNT_REG
 || from_˛as†=
ALL_CORE_REGS


7185 || 
‰om_˛ass
 =
WRITABLE_CORE_REGS
))

7189 i‡(
TARGET_ARC700
 && 
TARGET_DPFP


7190 && 
‰om_˛ass
 =
DOUBLE_REGS
 && 
to_˛ass
 == DOUBLE_REGS)

7194 
	}
}

7203 
	$¨c_ouçut_addsi
 (
πx
 *
›î™ds
, c⁄° *
c⁄d
)

7205 
f‹m©
[32];

7207 
c⁄d_p
 = 
c⁄d
 ? *cond : 0;

7208 
m©ch
 = 
	`›î™ds_m©ch_p
 (
›î™ds
[0], operands[1]);

7209 
m©ch2
 = 
	`›î™ds_m©ch_p
 (
›î™ds
[0], operands[2]);

7210 
ötvÆ
 = (
	`REG_P
 (
›î™ds
[2]) ? 1

7211 : 
	`CONST_INT_P
 (
›î™ds
[2]Ë? 
	`INTVAL
 (operands[2]) : 0xbadc057);

7212 
√g_ötvÆ
 = -
ötvÆ
;

7213 
shi·
 = 0;

7214 
sh‹t_p
 = 0;

7219 
sh‹t_0
 = 
	`ßtisfõs_c⁄°øöt_Rcq
 (
›î™ds
[0]);

7221 
sh‹t_p
 = (!
c⁄d_p
 && 
sh‹t_0
 && 
	`ßtisfõs_c⁄°øöt_Rcq
 (
›î™ds
[1]));

7222 i‡(
sh‹t_p


7223 && (
	`REG_P
 (
›î™ds
[2])

7224 ? (
m©ch
 || 
	`ßtisfõs_c⁄°øöt_Rcq
 (
›î™ds
[2]))

7225 : (Ë
ötvÆ
 <(
m©ch
 ? 127 : 7)))

7227 i‡(!
c⁄d_p
 && 
sh‹t_0
 && 
	`ßtisfõs_c⁄°øöt_Rcq
 (
›î™ds
[2])

7228 && 
	`REG_P
 (
›î™ds
[1]Ë&& 
m©ch2
)

7230 i‡(!
c⁄d_p
 && (
sh‹t_0
 || 
	`REGNO
 (
›î™ds
[0]Ë=
STACK_POINTER_REGNUM
)

7231 && 
	`REGNO
 (
›î™ds
[1]Ë=
STACK_POINTER_REGNUM
 && !(
ötvÆ
 & ~124))

7234 i‡((
sh‹t_p
 && (Ë
√g_ötvÆ
 <(
m©ch
 ? 31 : 7))

7235 || (!
c⁄d_p
 && 
	`REGNO
 (
›î™ds
[0]Ë=
STACK_POINTER_REGNUM


7236 && 
m©ch
 && !(
√g_ötvÆ
 & ~124)))

7240 
	#ADDSI_OUTPUT
(
LIST
) do {\

7241 i‡(
c⁄d
) \

7242 
•rötf
 
LIST
, 
	`ouçut_asm_ö¢
 (
f‹m©
, 
›î™ds
);\

7244 } 0)

	)

7245 
	#ADDSI_OUTPUT1
(
FORMAT
Ë
	`ADDSI_OUTPUT
 ((
f‹m©
, FORMAT, 
c⁄d
))

	)

7248 i‡(!
m©ch
 && 
m©ch2
 && 
	`REG_P
 (
›î™ds
[1]))

7249 
	`ADDSI_OUTPUT1
 ("add%s %%0,%%2,%%1");

7250 i‡(
m©ch
 || !
c⁄d_p
)

7252 
limô
 = (
m©ch
 && !
c⁄d_p
) ? 0x7ff : 0x3f;

7253 
ønge_Á˘‹
 = 
√g_ötvÆ
 & 
ötvÆ
;

7255 i‡(
ötvÆ
 == -1 << 31)

7256 
	`ADDSI_OUTPUT1
 ("bxor%s %%0,%%1,31");

7262 i‡((
ötvÆ
 >0 && i¡vÆ <
limô
)

7263 || (
ötvÆ
 =-0x800 && 
limô
 == 0x7ff))

7264 
	`ADDSI_OUTPUT1
 ("add%s %%0,%%1,%%2");

7265 i‡((
ötvÆ
 < 0 && 
√g_ötvÆ
 <
limô
)

7266 || (
ötvÆ
 =0x800 && 
limô
 == 0x7ff))

7267 
	`ADDSI_OUTPUT1
 ("sub%s %%0,%%1,%%n2");

7268 
shi·
 = 
ønge_Á˘‹
 >= 8 ? 3 : (range_factor >> 1 & 3);

7269 i‡(((
ötvÆ
 < 0 && intval != -0x4000)

7272 && 
√g_ötvÆ
 <
limô
 << 
shi·
)

7273 || (
ötvÆ
 =0x4000 && 
limô
 == 0x7ff))

7274 
	`ADDSI_OUTPUT
 ((
f‹m©
, "sub%d%s %%0,%%1,%d",

7275 
shi·
, 
c⁄d
, 
√g_ötvÆ
 >> shift));

7276 i‡((
ötvÆ
 >0 && i¡vÆ <
limô
 << 
shi·
)

7277 || (
ötvÆ
 =-0x4000 && 
limô
 == 0x7ff))

7278 
	`ADDSI_OUTPUT
 ((
f‹m©
, "add%d%†%%0,%%1,%d", 
shi·
, 
c⁄d
,

7279 
ötvÆ
 >> 
shi·
));

7282 i‡(
sh‹t_p
 && 
m©ch
)

7287 
	`ADDSI_OUTPUT
 ((
f‹m©
,

7288 
ötvÆ
 < 0 ? "sub%s %%0,%%1,%%n2" : "add%s %%0,%%1,%%S2",

7289 
c⁄d
));

7290 
	}
}

7297 
πx


7298 
	$f‹˚_off£âabÀ
 (
πx
 
addr
, 
HOST_WIDE_INT
 
size
, 
boﬁ
 
ªu£
)

7300 
πx
 
ba£
 = 
addr
;

7301 
πx
 
offs
 = 
c⁄°0_πx
;

7303 i‡(
	`GET_CODE
 (
ba£
Ë=
PLUS
)

7305 
offs
 = 
	`XEXP
 (
ba£
, 1);

7306 
ba£
 = 
	`XEXP
 (base, 0);

7308 i‡(!
	`REG_P
 (
ba£
)

7309 || (
	`REGNO
 (
ba£
Ë!
STACK_POINTER_REGNUM


7310 && 
	`REGNO_PTR_FRAME_P
 (
	`REGNO
 (
addr
)))

7311 || !
	`CONST_INT_P
 (
offs
Ë|| !
	`SMALL_INT
 (
	`INTVAL
 (offs))

7312 || !
	`SMALL_INT
 (
	`INTVAL
 (
offs
Ë+ 
size
))

7314 i‡(
ªu£
)

7315 
	`emô_ö¢
 (
	`gí_add2_ö¢
 (
addr
, 
offs
));

7317 
addr
 = 
	`c›y_to_mode_ªg
 (
Pmode
,áddr);

7319  
addr
;

7320 
	}
}

7326 
boﬁ


7327 
	$¨c_ex∑nd_movmem
 (
πx
 *
›î™ds
)

7329 
πx
 
d°
 = 
›î™ds
[0];

7330 
πx
 
§c
 = 
›î™ds
[1];

7331 
πx
 
d°_addr
, 
§c_addr
;

7332 
HOST_WIDE_INT
 
size
;

7333 
Æign
 = 
	`INTVAL
 (
›î™ds
[3]);

7334 
n_põ˚s
;

7335 
põ˚
 = 
Æign
;

7336 
πx
 
°‹e
[2];

7337 
πx
 
tmpx
[2];

7338 
i
;

7340 i‡(!
	`CONST_INT_P
 (
›î™ds
[2]))

7341  
Ál£
;

7342 
size
 = 
	`INTVAL
 (
›î™ds
[2]);

7344 i‡(
Æign
 >= 4)

7345 
n_põ˚s
 = (
size
 + 2) / 4U + (size & 1);

7346 i‡(
Æign
 == 2)

7347 
n_põ˚s
 = (
size
 + 1) / 2U;

7349 
n_põ˚s
 = 
size
;

7350 i‡(
n_põ˚s
 >(Ë(
›timize_size
 ? 3 : 15))

7351  
Ál£
;

7352 i‡(
põ˚
 > 4)

7353 
põ˚
 = 4;

7354 
d°_addr
 = 
	`f‹˚_off£âabÀ
 (
	`XEXP
 (
›î™ds
[0], 0), 
size
, 0);

7355 
§c_addr
 = 
	`f‹˚_off£âabÀ
 (
	`XEXP
 (
›î™ds
[1], 0), 
size
, 0);

7356 
°‹e
[0] = st‹e[1] = 
NULL_RTX
;

7357 
tmpx
[0] =Åmpx[1] = 
NULL_RTX
;

7358 
i
 = 0; 
size
 > 0; i ^1, sizê-
põ˚
)

7360 
πx
 
tmp
;

7361 
machöe_mode
 
mode
;

7363 i‡(
põ˚
 > 
size
)

7364 
põ˚
 = 
size
 & -size;

7365 
mode
 = 
	`smÆÀ°_mode_f‹_size
 (
põ˚
 * 
BITS_PER_UNIT
, 
MODE_INT
);

7368 i‡(0 && 
tmpx
[
i
] && 
	`GET_MODE
 (tmpx[i]Ë=
mode
)

7369 
tmp
 = 
tmpx
[
i
];

7371 
tmpx
[
i
] = 
tmp
 = 
	`gí_ªg_πx
 (
mode
);

7372 
d°_addr
 = 
	`f‹˚_off£âabÀ
 (d°_addr, 
põ˚
, 1);

7373 
§c_addr
 = 
	`f‹˚_off£âabÀ
 (§c_addr, 
põ˚
, 1);

7374 i‡(
°‹e
[
i
])

7375 
	`emô_ö¢
 (
°‹e
[
i
]);

7376 
	`emô_move_ö¢
 (
tmp
, 
	`ch™ge_addªss
 (
§c
, 
mode
, 
§c_addr
));

7377 
°‹e
[
i
] = 
	`gí_move_ö¢
 (
	`ch™ge_addªss
 (
d°
, 
mode
, 
d°_addr
), 
tmp
);

7378 
d°_addr
 = 
	`∂us_c⁄°™t
 (
Pmode
, d°_addr, 
põ˚
);

7379 
§c_addr
 = 
	`∂us_c⁄°™t
 (
Pmode
, src_addr, 
põ˚
);

7381 i‡(
°‹e
[
i
])

7382 
	`emô_ö¢
 (
°‹e
[
i
]);

7383 i‡(
°‹e
[
i
^1])

7384 
	`emô_ö¢
 (
°‹e
[
i
^1]);

7385  
åue
;

7386 
	}
}

7391 
boﬁ


7392 
	$¥ï¨e_move_›î™ds
 (
πx
 *
›î™ds
, 
machöe_mode
 
mode
)

7398 i‡(!
TARGET_NO_SDATA_SET
 && 
	`smÆl_d©a_∑âîn
 (
›î™ds
[0], 
Pmode
))

7399 
›î™ds
[0] = 
	`¨c_ªwrôe_smÆl_d©a
 (operands[0]);

7400 i‡(
mode
 =
SImode
 && 
Êag_pic
 && 
	`SYMBOLIC_CONST
 (
›î™ds
[1]))

7402 
	`emô_pic_move
 (
›î™ds
, 
SImode
);

7408 i‡(
	`GET_CODE
 (
›î™ds
[0]Ë!
MEM


7409 && !
TARGET_NO_SDATA_SET


7410 && 
	`smÆl_d©a_∑âîn
 (
›î™ds
[1], 
Pmode
))

7414 
›î™ds
[1] = 
	`¨c_ªwrôe_smÆl_d©a
 (operands[1]);

7416 
	`emô_ö¢
 (
	`gí_πx_SET
 (
mode
, 
›î™ds
[0],operands[1]));

7422 
	`£t_unique_ªg_nŸe
 (
	`gë_œ°_ö¢
 (), 
REG_EQUAL
, 
›î™ds
[1]);

7427 
	`emô_move_ö¢
 (
›î™ds
[0], operands[0]);

7428  
åue
;

7432 i‡(
	`MEM_P
 (
›î™ds
[0])

7433 && !(
ªlﬂd_ö_¥ogªss
 || 
ªlﬂd_com∂ëed
))

7435 
›î™ds
[1] = 
	`f‹˚_ªg
 (
mode
, operands[1]);

7436 i‡(!
	`move_de°_›î™d
 (
›î™ds
[0], 
mode
))

7438 
πx
 
addr
 = 
	`c›y_to_mode_ªg
 (
Pmode
, 
	`XEXP
 (
›î™ds
[0], 0));

7441 
πx
 
∑t
 = 
	`ch™ge_addªss
 (
›î™ds
[0], 
mode
, 
addr
);

7442 
	`MEM_COPY_ATTRIBUTES
 (
∑t
, 
›î™ds
[0]);

7443 
›î™ds
[0] = 
∑t
;

7445 i‡(!
c£_nŸ_ex≥˘ed
)

7447 
πx
 
∑t
 = 
	`XEXP
 (
›î™ds
[0], 0);

7449 
∑t
 = 
	`¨c_Àgôimize_addªss_0
 (∑t,Ö©, 
mode
);

7450 i‡(
∑t
)

7452 
∑t
 = 
	`ch™ge_addªss
 (
›î™ds
[0], 
mode
,Öat);

7453 
	`MEM_COPY_ATTRIBUTES
 (
∑t
, 
›î™ds
[0]);

7454 
›î™ds
[0] = 
∑t
;

7459 i‡(
	`MEM_P
 (
›î™ds
[1]Ë&& !
c£_nŸ_ex≥˘ed
)

7461 
πx
 
∑t
 = 
	`XEXP
 (
›î™ds
[1], 0);

7463 
∑t
 = 
	`¨c_Àgôimize_addªss_0
 (∑t,Ö©, 
mode
);

7464 i‡(
∑t
)

7466 
∑t
 = 
	`ch™ge_addªss
 (
›î™ds
[1], 
mode
,Öat);

7467 
	`MEM_COPY_ATTRIBUTES
 (
∑t
, 
›î™ds
[1]);

7468 
›î™ds
[1] = 
∑t
;

7472  
Ál£
;

7473 
	}
}

7478 
boﬁ


7479 
	$¥ï¨e_exãnd_›î™ds
 (
πx
 *
›î™ds
, 
πx_code
 
code
,

7480 
machöe_mode
 
omode
)

7482 i‡(!
TARGET_NO_SDATA_SET
 && 
	`smÆl_d©a_∑âîn
 (
›î™ds
[1], 
Pmode
))

7486 
›î™ds
[1]

7487 
	`gí_πx_fmt_e
 (
code
, 
omode
, 
	`¨c_ªwrôe_smÆl_d©a
 (
›î™ds
[1]));

7488 
	`emô_ö¢
 (
	`gí_πx_SET
 (
omode
, 
›î™ds
[0], operands[1]));

7489 
	`£t_unique_ªg_nŸe
 (
	`gë_œ°_ö¢
 (), 
REG_EQUAL
, 
›î™ds
[1]);

7494 
	`emô_move_ö¢
 (
›î™ds
[0], operands[0]);

7495  
åue
;

7497  
Ál£
;

7498 
	}
}

7504 
	$¨c_ouçut_libˇŒ
 (c⁄° *
‚ame
)

7506 
Àn
 = 
	`°æí
 (
‚ame
);

7507 
buf
[64];

7509 
	`gcc_as£π
 (
Àn
 <  
buf
 - 35);

7510 i‡(
TARGET_LONG_CALLS_SET


7511 || (
TARGET_MEDIUM_CALLS
 && 
	`¨c_ccfsm_c⁄d_exec_p
 ()))

7513 i‡(
Êag_pic
)

7514 
	`•rötf
 (
buf
, "addÑ12,p˛,@%s-(.&-4)\n\tjl%%!%%* [r12]", 
‚ame
);

7516 
	`•rötf
 (
buf
, "jl%%! @%s", 
‚ame
);

7519 
	`•rötf
 (
buf
, "bl%%!%%* @%s", 
‚ame
);

7520  
buf
;

7521 
	}
}

7525 
πx


7526 
	$disi_high∑π
 (
πx
 
ö
)

7528  
	`sim∂ify_gí_subªg
 (
SImode
, 
ö
, 
DImode
, 
TARGET_BIG_ENDIAN
 ? 0 : 4);

7529 
	}
}

7536 
	$¨c600_c‹îeg_haz¨d_1
 (
πx
 *
xp
, *
d©a
)

7538 
πx
 
x
 = *
xp
;

7539 
πx
 
de°
;

7540 
πx
 
∑t
 = (πxË
d©a
;

7542 
	`GET_CODE
 (
x
))

7544 
SET
: 
POST_INC
: 
POST_DEC
: 
PRE_INC
: 
PRE_DEC
:

7550 
de°
 = 
	`XEXP
 (
x
, 0);

7553 i‡(
	`REG_P
 (
de°
Ë&& 
	`REGNO
 (dest) >= 32 && REGNO (dest) < 61

7555 && (
ª„rs_to_ªgno_p


7556 (
	`REGNO
 (
de°
),

7557 
	`REGNO
 (
de°
Ë+ (
	`GET_MODE_SIZE
 (
	`GET_MODE
 (de°)Ë+ 3Ë/ 4U, 
∑t
, 0)))

7561 
	}
}

7570 
	$¨c600_c‹îeg_haz¨d
 (
πx
 
¥ed
,Ñtx 
succ
)

7572 i‡(!
TARGET_ARC600
)

7577 i‡(
	`ªcog_memoized
 (
succ
Ë=
CODE_FOR_dﬁo›_íd_i


7578 && 
	`LABEL_P
 (
	`¥ev_n⁄nŸe_ö¢
 (
succ
)))

7580 i‡(
	`ªcog_memoized
 (
succ
Ë=
CODE_FOR_dﬁo›_begö_i
)

7582 i‡(
	`GET_CODE
 (
	`PATTERN
 (
¥ed
)Ë=
SEQUENCE
)

7583 
¥ed
 = 
	`XVECEXP
 (
	`PATTERN
 (pred), 0, 1);

7584 i‡(
	`GET_CODE
 (
	`PATTERN
 (
succ
)Ë=
SEQUENCE
)

7585 
succ
 = 
	`XVECEXP
 (
	`PATTERN
 (succ), 0, 0);

7586 i‡(
	`ªcog_memoized
 (
¥ed
Ë=
CODE_FOR_mulsi_600


7587 || 
	`ªcog_memoized
 (
¥ed
Ë=
CODE_FOR_umul_600


7588 || 
	`ªcog_memoized
 (
¥ed
Ë=
CODE_FOR_mac_600


7589 || 
	`ªcog_memoized
 (
¥ed
Ë=
CODE_FOR_mul64_600


7590 || 
	`ªcog_memoized
 (
¥ed
Ë=
CODE_FOR_mac64_600


7591 || 
	`ªcog_memoized
 (
¥ed
Ë=
CODE_FOR_umul64_600


7592 || 
	`ªcog_memoized
 (
¥ed
Ë=
CODE_FOR_umac64_600
)

7594  
	`f‹_óch_πx
 (&
	`PATTERN
 (
¥ed
), 
¨c600_c‹îeg_haz¨d_1
,

7595 
	`PATTERN
 (
succ
));

7596 
	}
}

7604 
	$¨c_haz¨d
 (
πx
 
¥ed
,Ñtx 
succ
)

7606 i‡(!
TARGET_ARC600
)

7608 i‡(!
¥ed
 || !
	`INSN_P
 (¥edË|| !
succ
 || !INSN_P (succ))

7610 i‡(
	`ªcog_memoized
 (
succ
Ë=
CODE_FOR_dﬁo›_íd_i


7611 && (
	`JUMP_P
 (
¥ed
Ë|| 
	`GET_CODE
 (
	`PATTERN
 (¥ed)Ë=
SEQUENCE
))

7613  
	`¨c600_c‹îeg_haz¨d
 (
¥ed
, 
succ
);

7614 
	}
}

7619 
	$¨c_adju°_ö¢_Àngth
 (
πx
 
ö¢
, 
Àn
, 
boﬁ
)

7621 i‡(!
	`INSN_P
 (
ö¢
))

7622  
Àn
;

7624 i‡(
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
SEQUENCE
)

7625  
Àn
;

7632 i‡(
	`ªcog_memoized
 (
ö¢
Ë=
CODE_FOR_dﬁo›_íd_i
)

7634 
πx
 
¥ev
 = 
	`¥ev_n⁄nŸe_ö¢
 (
ö¢
);

7636  ((
	`LABEL_P
 (
¥ev
)

7637 || (
TARGET_ARC600


7638 && (
	`JUMP_P
 (
¥ev
Ë|| 
	`GET_CODE
 (
	`PATTERN
 (¥ev)Ë=
SEQUENCE
)))

7639 ? 
Àn
 + 4 :Üen);

7644 i‡(
TARGET_PAD_RETURN


7645 && 
	`JUMP_P
 (
ö¢
)

7646 && 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë!
ADDR_VEC


7647 && 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë!
ADDR_DIFF_VEC


7648 && 
	`gë_©å_ty≥
 (
ö¢
Ë=
TYPE_RETURN
)

7650 
πx
 
¥ev
 = 
	`¥ev_a˘ive_ö¢
 (
ö¢
);

7652 i‡(!
¥ev
 || !’ªv = 
	`¥ev_a˘ive_ö¢
 (prev))

7653 || ((
	`NONJUMP_INSN_P
 (
¥ev
)

7654 && 
	`GET_CODE
 (
	`PATTERN
 (
¥ev
)Ë=
SEQUENCE
)

7655 ? 
	`CALL_ATTR
 (
	`XVECEXP
 (
	`PATTERN
 (
¥ev
), 0, 0), 
NON_SIBCALL
)

7656 : 
	`CALL_ATTR
 (
¥ev
, 
NON_SIBCALL
)))

7657  
Àn
 + 4;

7659 i‡(
TARGET_ARC600
)

7661 
πx
 
succ
 = 
	`√xt_ªÆ_ö¢
 (
ö¢
);

7665 i‡(
succ
 && 
	`INSN_P
 (succ))

7666 
Àn
 +
	`¨c600_c‹îeg_haz¨d
 (
ö¢
, 
succ
);

7671 
	`exåa˘_c⁄°øö_ö¢_ˇched
 (
ö¢
);

7673  
Àn
;

7674 
	}
}

7679 
	mARC_LS_NONE
,

7680 
	mARC_LS_25
,

7681 
	mARC_LS_21
,

7682 
	mARC_LS_U13
,

7683 
	mARC_LS_10
,

7684 
	mARC_LS_9
,

7685 
	mARC_LS_8
,

7686 
	mARC_LS_U7
,

7687 
	mARC_LS_7


7695 
	mÆign_£t
;

7697 
	mèrgë_co°
;

7698 
	mÁŒthrough_co°
;

7699 
	mbønch_co°
;

7700 
	mÀngth
;

7703 
	mÀngth_£nsôive
 : 8;

7704 
boﬁ
 
	míabÀd
;

7705 } 
	tö¢_Àngth_v¨ü¡_t
;

7707 
	sö¢_Àngth_∑ømëîs_s


7709 
	mÆign_unô_log
;

7710 
	mÆign_ba£_log
;

7711 
	mmax_v¨ü¡s
;

7712 (*
	mgë_v¨ü¡s
Ë(
	mπx
, , 
	mboﬁ
, boﬁ, 
	mö¢_Àngth_v¨ü¡_t
 *);

7713 } 
	tö¢_Àngth_∑ømëîs_t
;

7716 
	$¨c_ö¢_Àngth_∑ømëîs
 (
ö¢_Àngth_∑ømëîs_t
 *
ûp
Ë
ATTRIBUTE_UNUSED
;

7720 
	$¨c_gë_ö¢_v¨ü¡s
 (
πx
 
ö¢
, 
Àn
, 
boﬁ
, boﬁ 
èrgë_p
,

7721 
ö¢_Àngth_v¨ü¡_t
 *
ûv
)

7723 i‡(!
	`NONDEBUG_INSN_P
 (
ö¢
))

7725 
©å_ty≥
 
ty≥
;

7728 i‡(
›timize_size
)

7730 i‡(
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
SEQUENCE
)

7735 
πx
 
∑t
, 
ö√r
;

7736 i‡(
TARGET_UPSIZE_DBR


7737 && 
	`gë_©å_Àngth
 (
	`XVECEXP
 ((
∑t
 = 
	`PATTERN
 (
ö¢
)), 0, 1)) <= 2

7738 && (((
ty≥
 = 
	`gë_©å_ty≥
 (
ö√r
 = 
	`XVECEXP
 (
∑t
, 0, 0)))

7739 =
TYPE_UNCOND_BRANCH
)

7740 || 
ty≥
 =
TYPE_BRANCH
)

7741 && 
	`gë_©å_dñay_¶Ÿ_fûÀd
 (
ö√r
Ë=
DELAY_SLOT_FILLED_YES
)

7743 
n_v¨ü¡s


7744 
	`¨c_gë_ö¢_v¨ü¡s
 (
ö√r
, 
	`gë_©å_Àngth
 (ö√r), 
åue
,

7745 
èrgë_p
, 
ûv
+1);

7748 
	`gcc_as£π
 (
n_v¨ü¡s
);

7749 
	`gcc_as£π
 (
ûv
[1].
Àngth_£nsôive
 =
ARC_LS_7


7750 || 
ûv
[1].
Àngth_£nsôive
 =
ARC_LS_10
);

7751 
	`gcc_as£π
 (
ûv
[1].
Æign_£t
 == 3);

7752 
ûv
[0] = ilv[1];

7753 
ûv
[0].
Æign_£t
 = 1;

7754 
ûv
[0].
bønch_co°
 += 1;

7755 
ûv
[1].
Æign_£t
 = 2;

7756 
n_v¨ü¡s
++;

7757 
i
 = 0; i < 
n_v¨ü¡s
; i++)

7758 
ûv
[
i
].
Àngth
 += 2;

7762 
i
 = 2, 
íd
 = 
n_v¨ü¡s
; i <Énd; i++,Ç_variants++)

7764 
ûv
[
n_v¨ü¡s
] = ilv[
i
];

7765 
ûv
[
n_v¨ü¡s
].
Àngth
 += 2;

7767  
n_v¨ü¡s
;

7771 
ö¢_Àngth_v¨ü¡_t
 *
fú°_ûv
 = 
ûv
;

7772 
ty≥
 = 
	`gë_©å_ty≥
 (
ö¢
);

7773 
boﬁ
 
dñay_fûÀd


7774 (
	`gë_©å_dñay_¶Ÿ_fûÀd
 (
ö¢
Ë=
DELAY_SLOT_FILLED_YES
);

7775 
bønch_Æign_co°
 = 
dñay_fûÀd
 ? 0 : 1;

7776 
bønch_u«lign_co°
 = 
dñay_fûÀd
 ? 0 : 
TARGET_UNALIGN_BRANCH
 ? 0 : 1;

7779 
boﬁ
 
f‹˚_èrgë
 = 
Ál£
;

7780 
πx
 
¥ev
 = 
	`¥ev_a˘ive_ö¢
 (
ö¢
);

7781 i‡(
¥ev
 && 
	`¨c_√xt_a˘ive_ö¢
 (¥ev, 0Ë=
ö¢


7782 && ((
	`NONJUMP_INSN_P
 (
¥ev
Ë&& 
	`GET_CODE
 (
	`PATTERN
 (¥ev)Ë=
SEQUENCE
)

7783 ? 
	`CALL_ATTR
 (
	`XVECEXP
 (
	`PATTERN
 (
¥ev
), 0, 0), 
NON_SIBCALL
)

7784 : (
	`CALL_ATTR
 (
¥ev
, 
NON_SIBCALL
)

7785 && 
	`NEXT_INSN
 (
	`PREV_INSN
 (
¥ev
)) ==Örev)))

7786 
f‹˚_èrgë
 = 
åue
;

7788 
ty≥
)

7790 
TYPE_BRCC
:

7792 i‡(!
dñay_fûÀd
)

7794 
ûv
->
Æign_£t
 = 3;

7795 
ûv
->
Àngth
 = 2;

7796 
ûv
->
bønch_co°
 = 1;

7797 
ûv
->
íabÀd
 = (
Àn
 == 2);

7798 
ûv
->
Àngth_£nsôive
 = 
ARC_LS_8
;

7799 
ûv
++;

7802 
TYPE_BRCC_NO_DELAY_SLOT
:

7804 
ûv
->
Àngth
 = ((
ty≥
 =
TYPE_BRCC
) ? 4 : 8);

7805 
ûv
->
Æign_£t
 = 3;

7806 
ûv
->
bønch_co°
 = 
bønch_Æign_co°
;

7807 
ûv
->
íabÀd
 = (
Àn
 <ûv->
Àngth
);

7808 
ûv
->
Àngth_£nsôive
 = 
ARC_LS_9
;

7809 i‡((
èrgë_p
 || 
f‹˚_èrgë
)

7810 || (!
dñay_fûÀd
 && 
TARGET_UNALIGN_BRANCH
))

7812 
ûv
[1] = *ilv;

7813 
ûv
->
Æign_£t
 = 1;

7814 
ûv
++;

7815 
ûv
->
Æign_£t
 = 2;

7816 
ûv
->
èrgë_co°
 = 1;

7817 
ûv
->
bønch_co°
 = 
bønch_u«lign_co°
;

7819 
ûv
++;

7821 
πx
 
›
, 
›0
;

7822 
›
 = 
	`XEXP
 (
	`SET_SRC
 (
	`XVECEXP
 (
	`PATTERN
 (
ö¢
), 0, 0)), 0);

7823 
›0
 = 
	`XEXP
 (
›
, 0);

7825 i‡(
	`GET_CODE
 (
›0
Ë=
ZERO_EXTRACT


7826 && 
	`ßtisfõs_c⁄°øöt_L
 (
	`XEXP
 (
›0
, 2)))

7827 
›0
 = 
	`XEXP
 (op0, 0);

7828 i‡(
	`ßtisfõs_c⁄°øöt_Rcq
 (
›0
))

7830 
ûv
->
Àngth
 = ((
ty≥
 =
TYPE_BRCC
) ? 6 : 10);

7831 
ûv
->
Æign_£t
 = 3;

7832 
ûv
->
bønch_co°
 = 1 + 
bønch_Æign_co°
;

7833 
ûv
->
ÁŒthrough_co°
 = 1;

7834 
ûv
->
íabÀd
 = 
åue
;

7835 
ûv
->
Àngth_£nsôive
 = 
ARC_LS_21
;

7836 i‡(!
dñay_fûÀd
 && 
TARGET_UNALIGN_BRANCH
)

7838 
ûv
[1] = *ilv;

7839 
ûv
->
Æign_£t
 = 1;

7840 
ûv
++;

7841 
ûv
->
Æign_£t
 = 2;

7842 
ûv
->
bønch_co°
 = 1 + 
bønch_u«lign_co°
;

7844 
ûv
++;

7846 
ûv
->
Àngth
 = ((
ty≥
 =
TYPE_BRCC
) ? 8 : 12);

7847 
ûv
->
Æign_£t
 = 3;

7848 
ûv
->
bønch_co°
 = 1 + 
bønch_Æign_co°
;

7849 
ûv
->
ÁŒthrough_co°
 = 1;

7850 
ûv
->
íabÀd
 = 
åue
;

7851 
ûv
->
Àngth_£nsôive
 = 
ARC_LS_21
;

7852 i‡((
èrgë_p
 || 
f‹˚_èrgë
)

7853 || (!
dñay_fûÀd
 && 
TARGET_UNALIGN_BRANCH
))

7855 
ûv
[1] = *ilv;

7856 
ûv
->
Æign_£t
 = 1;

7857 
ûv
++;

7858 
ûv
->
Æign_£t
 = 2;

7859 
ûv
->
èrgë_co°
 = 1;

7860 
ûv
->
bønch_co°
 = 1 + 
bønch_u«lign_co°
;

7862 
ûv
++;

7865 
TYPE_SFUNC
:

7866 
ûv
->
Àngth
 = 12;

7867 
do_ˇŒ
;

7868 
TYPE_CALL_NO_DELAY_SLOT
:

7869 
ûv
->
Àngth
 = 8;

7870 
do_ˇŒ
;

7871 
TYPE_CALL
:

7872 
ûv
->
Àngth
 = 4;

7873 
ûv
->
Àngth_£nsôive


7874 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
COND_EXEC
 ? 
ARC_LS_21
 : 
ARC_LS_25
;

7875 
do_ˇŒ
:

7876 
ûv
->
Æign_£t
 = 3;

7877 
ûv
->
ÁŒthrough_co°
 = 
bønch_Æign_co°
;

7878 
ûv
->
íabÀd
 = 
åue
;

7879 i‡((
èrgë_p
 || 
f‹˚_èrgë
)

7880 || (!
dñay_fûÀd
 && 
TARGET_UNALIGN_BRANCH
))

7882 
ûv
[1] = *ilv;

7883 
ûv
->
Æign_£t
 = 1;

7884 
ûv
++;

7885 
ûv
->
Æign_£t
 = 2;

7886 
ûv
->
èrgë_co°
 = 1;

7887 
ûv
->
ÁŒthrough_co°
 = 
bønch_u«lign_co°
;

7889 
ûv
++;

7891 
TYPE_UNCOND_BRANCH
:

7894 
ûv
->
Àngth_£nsôive
 = 
ARC_LS_7
;

7895 
ûv
[1].
Àngth_£nsôive
 = 
ARC_LS_25
;

7896 
do_bønch
;

7897 
TYPE_BRANCH
:

7898 
ûv
->
Àngth_£nsôive
 = 
ARC_LS_10
;

7899 
ûv
[1].
Àngth_£nsôive
 = 
ARC_LS_21
;

7900 
do_bønch
:

7901 
ûv
->
Æign_£t
 = 3;

7902 
ûv
->
Àngth
 = 2;

7903 
ûv
->
bønch_co°
 = 
bønch_Æign_co°
;

7904 
ûv
->
íabÀd
 = (
Àn
 =ûv->
Àngth
);

7905 
ûv
++;

7906 
ûv
->
Àngth
 = 4;

7907 
ûv
->
Æign_£t
 = 3;

7908 
ûv
->
bønch_co°
 = 
bønch_Æign_co°
;

7909 
ûv
->
íabÀd
 = 
åue
;

7910 i‡((
èrgë_p
 || 
f‹˚_èrgë
)

7911 || (!
dñay_fûÀd
 && 
TARGET_UNALIGN_BRANCH
))

7913 
ûv
[1] = *ilv;

7914 
ûv
->
Æign_£t
 = 1;

7915 
ûv
++;

7916 
ûv
->
Æign_£t
 = 2;

7917 
ûv
->
èrgë_co°
 = 1;

7918 
ûv
->
bønch_co°
 = 
bønch_u«lign_co°
;

7920 
ûv
++;

7922 
TYPE_JUMP
:

7927 i‡((
Àn
 & 2Ë=0 || 
	`ªcog_memoized
 (
ö¢
Ë=
CODE_FOR_å≠_s
)

7929 
ûv
->
Æign_£t
 = 3;

7930 
ûv
->
Àngth
 = 
Àn
;

7931 
ûv
->
íabÀd
 = 1;

7932 
ûv
++;

7933 
ûv
->
Æign_£t
 = 3;

7934 
ûv
->
Àngth
 = 
Àn
 + 2;

7935 
ûv
->
íabÀd
 = 1;

7936 i‡(
èrgë_p
 || 
f‹˚_èrgë
)

7938 
ûv
[1] = *ilv;

7939 
ûv
->
Æign_£t
 = 1;

7940 
ûv
++;

7941 
ûv
->
Æign_£t
 = 2;

7942 
ûv
->
èrgë_co°
 = 1;

7944 
ûv
++;

7950 i‡(
f‹˚_èrgë
)

7952 
ö¢_Àngth_v¨ü¡_t
 *
p
 = 
fú°_ûv
;Ö < 
ûv
;Ö++)

7954 
p
->
ÁŒthrough_co°
 +p->
èrgë_co°
;

7955 
p
->
bønch_co°
 +p->
èrgë_co°
;

7956 
p
->
èrgë_co°
 = 0;

7960  
ûv
 - 
fú°_ûv
;

7961 
	}
}

7964 
	$¨c_ö¢_Àngth_∑ømëîs
 (
ö¢_Àngth_∑ømëîs_t
 *
ûp
)

7966 
ûp
->
Æign_unô_log
 = 1;

7967 
ûp
->
Æign_ba£_log
 = 1;

7968 
ûp
->
max_v¨ü¡s
 = 7;

7969 
ûp
->
gë_v¨ü¡s
 = 
¨c_gë_ö¢_v¨ü¡s
;

7970 
	}
}

7975 
πx


7976 
	$¨c_gë_ccfsm_c⁄d
 (
¨c_ccfsm
 *
°©ï
, 
boﬁ
 
ªvî£
)

7978 
πx
 
c⁄d
 = 
°©ï
->cond;

7979 
øw_cc
 = 
	`gë_¨c_c⁄dôi⁄_code
 (
c⁄d
);

7980 i‡(
ªvî£
)

7981 
øw_cc
 = 
	`ARC_INVERSE_CONDITION_CODE
 (raw_cc);

7983 i‡(
°©ï
->
cc
 =
øw_cc
)

7984  
	`c›y_πx
 (
c⁄d
);

7986 
	`gcc_as£π
 (
	`ARC_INVERSE_CONDITION_CODE
 (
øw_cc
Ë=
°©ï
->
cc
);

7988 
machöe_mode
 
ccm
 = 
	`GET_MODE
 (
	`XEXP
 (
c⁄d
, 0));

7989 
πx_code
 
code
 = 
	`ªvî£_c⁄dôi⁄
 (
	`GET_CODE
 (
c⁄d
));

7990 i‡(
code
 =
UNKNOWN
 || 
ccm
 =
CC_FP_GTmode
 || ccm =
CC_FP_GEmode
)

7991 
code
 = 
	`ªvî£_c⁄dôi⁄_maybe_un‹dîed
 (
	`GET_CODE
 (
c⁄d
));

7993  
	`gí_πx_fmt_ì
 (
code
, 
	`GET_MODE
 (
c⁄d
),

7994 
	`c›y_πx
 (
	`XEXP
 (
c⁄d
, 0)), copy_rtx (XEXP (cond, 1)));

7995 
	}
}

8000 
	$¨c_ifcvt
 ()

8002 
¨c_ccfsm
 *
°©ï
 = &
cfun
->
machöe
->
ccfsm_cuºít
;

8003 
basic_block
 
mîge_bb
 = 0;

8005 
	`mem£t
 (
°©ï
, 0,  *statep);

8006 
πx
 
ö¢
 = 
	`gë_ö¢s
 (); in¢; in¢ = 
	`√xt_ö¢
 (insn))

8008 
	`¨c_ccfsm_adv™˚
 (
ö¢
, 
°©ï
);

8010 
°©ï
->
°©e
)

8013 i‡(
	`JUMP_P
 (
ö¢
))

8014 
mîge_bb
 = 0;

8019 
	`gcc_as£π
 (!
mîge_bb
);

8020 
mîge_bb
 = 
	`BLOCK_FOR_INSN
 (
ö¢
);

8021 
basic_block
 
succ_bb


8022 
	`BLOCK_FOR_INSN
 (
	`NEXT_INSN
 (NEXT_INSN (
	`PREV_INSN
 (
ö¢
))));

8023 
	`¨c_ccfsm_po°_adv™˚
 (
ö¢
, 
°©ï
);

8024 
πx
 
£q
 = 
	`NEXT_INSN
 (
	`PREV_INSN
 (
ö¢
));

8025 i‡(
£q
 !
ö¢
)

8027 
πx
 
¶Ÿ
 = 
	`XVECEXP
 (
	`PATTERN
 (
£q
), 0, 1);

8028 
πx
 
∑t
 = 
	`PATTERN
 (
¶Ÿ
);

8029 i‡(
	`INSN_ANNULLED_BRANCH_P
 (
ö¢
))

8031 
πx
 
c⁄d


8032 
	`¨c_gë_ccfsm_c⁄d
 (
°©ï
, 
	`INSN_FROM_TARGET_P
 (
¶Ÿ
));

8033 
∑t
 = 
	`gí_πx_COND_EXEC
 (
VOIDmode
, 
c⁄d
,Öat);

8035 i‡(!
	`vÆid©e_ch™ge
 (
£q
, &
	`PATTERN
 (£q), 
∑t
, 0))

8036 
	`gcc_uƒóchabÀ
 ();

8037 
	`PUT_CODE
 (
¶Ÿ
, 
NOTE
);

8038 
	`NOTE_KIND
 (
¶Ÿ
Ë
NOTE_INSN_DELETED
;

8039 i‡(
mîge_bb
 && 
succ_bb
)

8040 
	`mîge_blocks
 (
mîge_bb
, 
succ_bb
);

8042 i‡(
mîge_bb
 && 
succ_bb
)

8044 
	`£t_ö¢_dñëed
 (
ö¢
);

8045 
	`mîge_blocks
 (
mîge_bb
, 
succ_bb
);

8049 
	`PUT_CODE
 (
ö¢
, 
NOTE
);

8050 
	`NOTE_KIND
 (
ö¢
Ë
NOTE_INSN_DELETED
;

8055 i‡(
	`LABEL_P
 (
ö¢
)

8056 && 
°©ï
->
èrgë_œbñ
 =
	`CODE_LABEL_NUMBER
 (
ö¢
))

8058 
	`¨c_ccfsm_po°_adv™˚
 (
ö¢
, 
°©ï
);

8059 
basic_block
 
succ_bb
 = 
	`BLOCK_FOR_INSN
 (
ö¢
);

8060 i‡(
mîge_bb
 && 
succ_bb
)

8061 
	`mîge_blocks
 (
mîge_bb
, 
succ_bb
);

8062 i‡(--
	`LABEL_NUSES
 (
ö¢
) == 0)

8064 c⁄° *
«me
 = 
	`LABEL_NAME
 (
ö¢
);

8065 
	`PUT_CODE
 (
ö¢
, 
NOTE
);

8066 
	`NOTE_KIND
 (
ö¢
Ë
NOTE_INSN_DELETED_LABEL
;

8067 
	`NOTE_DELETED_LABEL_NAME
 (
ö¢
Ë
«me
;

8069 
mîge_bb
 = 0;

8074 i‡(!
	`NONDEBUG_INSN_P
 (
ö¢
))

8079 
πx
 
¥ev
, 
µªv
, *
∑ç
, 
∑t
, 
c⁄d
;

8086 
¥ev
 = 
	`PREV_INSN
 (
ö¢
);

8087 
µªv
 = 
	`PREV_INSN
 (
¥ev
);

8088 i‡(
µªv
 && 
	`NEXT_INSN
 (µªvË=NEXT_INSN (
ö¢
)

8089 && 
	`JUMP_P
 (
¥ev
Ë&& 
	`gë_©å_c⁄d
 (¥evË=
COND_USE


8090 && !
	`INSN_ANNULLED_BRANCH_P
 (
ö¢
))

8093 
∑ç
 = &
	`PATTERN
 (
ö¢
);

8094 
∑t
 = *
∑ç
;

8095 
c⁄d
 = 
	`¨c_gë_ccfsm_c⁄d
 (
°©ï
, 
	`INSN_FROM_TARGET_P
 (
ö¢
));

8096 i‡(
	`NONJUMP_INSN_P
 (
ö¢
Ë|| 
	`CALL_P
 (insn))

8100 
∑t
 = 
	`gí_πx_COND_EXEC
 (
VOIDmode
, 
c⁄d
,Öat);

8102 i‡(
	`sim∂ejump_p
 (
ö¢
))

8104 
∑ç
 = &
	`SET_SRC
 (
∑t
);

8105 
∑t
 = 
	`gí_πx_IF_THEN_ELSE
 (
VOIDmode
, 
c⁄d
, *
∑ç
, 
pc_πx
);

8107 i‡(
	`JUMP_P
 (
ö¢
Ë&& 
	`ANY_RETURN_P
 (
	`PATTERN
 (insn)))

8109 
∑t
 = 
	`gí_πx_IF_THEN_ELSE
 (
VOIDmode
, 
c⁄d
,Ö©, 
pc_πx
);

8110 
∑t
 = 
	`gí_πx_SET
 (
VOIDmode
, 
pc_πx
,Öat);

8113 
	`gcc_uƒóchabÀ
 ();

8114 
	`vÆid©e_ch™ge
 (
ö¢
, 
∑ç
, 
∑t
, 1);

8115 i‡(!
	`≠∂y_ch™ge_group
 ())

8116 
	`gcc_uƒóchabÀ
 ();

8117 i‡(
	`JUMP_P
 (
ö¢
))

8119 
πx
 
√xt
 = 
	`√xt_n⁄nŸe_ö¢
 (
ö¢
);

8120 i‡(
	`GET_CODE
 (
√xt
Ë=
BARRIER
)

8121 
	`dñëe_ö¢
 (
√xt
);

8122 i‡(
°©ï
->
°©e
 == 3)

8127 
	`gcc_uƒóchabÀ
 ();

8129 
	`¨c_ccfsm_po°_adv™˚
 (
ö¢
, 
°©ï
);

8132 
	}
}

8145 
	$wrôe_ext_c‹îeg_1
 (
πx
 *
xp
, *
d©a
 
ATTRIBUTE_UNUSED
)

8147 
πx
 
x
 = *
xp
;

8148 
πx
 
de°
;

8150 
	`GET_CODE
 (
x
))

8152 
SET
: 
POST_INC
: 
POST_DEC
: 
PRE_INC
: 
PRE_DEC
:

8158 
de°
 = 
	`XEXP
 (
x
, 0);

8159 i‡(
	`REG_P
 (
de°
Ë&& 
	`REGNO
 (dest) >= 32 && REGNO (dest) < 61)

8162 
	}
}

8167 
	$¨c_wrôe_ext_c‹îeg
 (
πx
 
ö¢
)

8169  
	`f‹_óch_πx
 (&
	`PATTERN
 (
ö¢
), 
wrôe_ext_c‹îeg_1
, 0);

8170 
	}
}

8175 
πx


8176 
	$¨c_Àgôimize_addªss_0
 (
πx
 
x
,Ñtx 
ﬁdx
 
ATTRIBUTE_UNUSED
,

8177 
machöe_mode
 
mode
)

8179 
πx
 
addr
, 
ö√r
;

8181 i‡(
Êag_pic
 && 
	`SYMBOLIC_CONST
 (
x
))

8182 (
x
Ë
	`¨c_Àgôimize_pic_addªss
 (x, 0);

8183 
addr
 = 
x
;

8184 i‡(
	`GET_CODE
 (
addr
Ë=
CONST
)

8185 
addr
 = 
	`XEXP
 (addr, 0);

8186 i‡(
	`GET_CODE
 (
addr
Ë=
PLUS


8187 && 
	`CONST_INT_P
 (
	`XEXP
 (
addr
, 1))

8188 && ((
	`GET_CODE
 (
	`XEXP
 (
addr
, 0)Ë=
SYMBOL_REF


8189 && !
	`SYMBOL_REF_FUNCTION_P
 (
	`XEXP
 (
addr
, 0)))

8190 || (
	`REG_P
 (
	`XEXP
 (
addr
, 0))

8191 && (
	`INTVAL
 (
	`XEXP
 (
addr
, 1)) & 252))))

8193 
HOST_WIDE_INT
 
offs
, 
uµî
;

8194 
size
 = 
	`GET_MODE_SIZE
 (
mode
);

8196 
offs
 = 
	`INTVAL
 (
	`XEXP
 (
addr
, 1));

8197 
uµî
 = (
offs
 + 256 * 
size
) & ~511 * size;

8198 
ö√r
 = 
	`∂us_c⁄°™t
 (
Pmode
, 
	`XEXP
 (
addr
, 0), 
uµî
);

8200 i‡(
	`GET_CODE
 (
x
Ë=
CONST
)

8201 
ö√r
 = 
	`gí_πx_CONST
 (
Pmode
, inner);

8203 
addr
 = 
	`∂us_c⁄°™t
 (
Pmode
, 
	`f‹˚_ªg
 (Pmode, 
ö√r
), 
offs
 - 
uµî
);

8204 
x
 = 
addr
;

8206 i‡(
	`GET_CODE
 (
addr
Ë=
SYMBOL_REF
 && !
	`SYMBOL_REF_FUNCTION_P
 (addr))

8207 
x
 = 
	`f‹˚_ªg
 (
Pmode
, x);

8208 i‡(
	`mem‹y_addªss_p
 ((
machöe_mode
Ë
mode
, 
x
))

8209  
x
;

8210  
NULL_RTX
;

8211 
	}
}

8213 
πx


8214 
	$¨c_Àgôimize_addªss
 (
πx
 
‹ig_x
,Ñtx 
ﬁdx
, 
machöe_mode
 
mode
)

8216 
πx
 
√w_x
 = 
	`¨c_Àgôimize_addªss_0
 (
‹ig_x
, 
ﬁdx
, 
mode
);

8218 i‡(
√w_x
)

8219  
√w_x
;

8220  
‹ig_x
;

8221 
	}
}

8223 
πx


8224 
	$¨c_dñegôimize_addªss_0
 (
πx
 
x
)

8226 
πx
 
u
, 
gp
;

8228 i‡(
	`GET_CODE
 (
x
Ë=
CONST
 && GET_CODE (
u
 = 
	`XEXP
 (x, 0)Ë=
UNSPEC
)

8230 i‡(
	`XINT
 (
u
, 1Ë=
ARC_UNSPEC_GOT
)

8231  
	`XVECEXP
 (
u
, 0, 0);

8233 i‡(
	`GET_CODE
 (
x
Ë=
PLUS


8234 && ((
	`REG_P
 (
gp
 = 
	`XEXP
 (
x
, 0))

8235 && 
	`REGNO
 (
gp
Ë=
PIC_OFFSET_TABLE_REGNUM
)

8236 || (
	`GET_CODE
 (
gp
Ë=
CONST


8237 && 
	`GET_CODE
 (
u
 = 
	`XEXP
 (
gp
, 0)Ë=
UNSPEC


8238 && 
	`XINT
 (
u
, 1Ë=
ARC_UNSPEC_GOT


8239 && 
	`GET_CODE
 (
	`XVECEXP
 (
u
, 0, 0)Ë=
SYMBOL_REF


8240 && !
	`°rcmp
 (
	`XSTR
 (
	`XVECEXP
 (
u
, 0, 0), 0), "_DYNAMIC")))

8241 && 
	`GET_CODE
 (
	`XEXP
 (
x
, 1)Ë=
CONST


8242 && 
	`GET_CODE
 (
u
 = 
	`XEXP
 (XEXP (
x
, 1), 0)Ë=
UNSPEC


8243 && 
	`XINT
 (
u
, 1Ë=
ARC_UNSPEC_GOTOFF
)

8244  
	`XVECEXP
 (
u
, 0, 0);

8245 i‡(
	`GET_CODE
 (
x
Ë=
PLUS
 && GET_CODE (
	`XEXP
 (x, 0)) == PLUS

8246 && ((
	`REG_P
 (
gp
 = 
	`XEXP
 (XEXP (
x
, 0), 1))

8247 && 
	`REGNO
 (
gp
Ë=
PIC_OFFSET_TABLE_REGNUM
)

8248 || (
	`GET_CODE
 (
gp
Ë=
CONST


8249 && 
	`GET_CODE
 (
u
 = 
	`XEXP
 (
gp
, 0)Ë=
UNSPEC


8250 && 
	`XINT
 (
u
, 1Ë=
ARC_UNSPEC_GOT


8251 && 
	`GET_CODE
 (
	`XVECEXP
 (
u
, 0, 0)Ë=
SYMBOL_REF


8252 && !
	`°rcmp
 (
	`XSTR
 (
	`XVECEXP
 (
u
, 0, 0), 0), "_DYNAMIC")))

8253 && 
	`GET_CODE
 (
	`XEXP
 (
x
, 1)Ë=
CONST


8254 && 
	`GET_CODE
 (
u
 = 
	`XEXP
 (XEXP (
x
, 1), 0)Ë=
UNSPEC


8255 && 
	`XINT
 (
u
, 1Ë=
ARC_UNSPEC_GOTOFF
)

8256  
	`gí_πx_PLUS
 (
	`GET_MODE
 (
x
), 
	`XEXP
 (XEXP (x, 0), 0),

8257 
	`XVECEXP
 (
u
, 0, 0));

8258 i‡(
	`GET_CODE
 (
x
Ë=
PLUS


8259 && (
u
 = 
	`¨c_dñegôimize_addªss_0
 (
	`XEXP
 (
x
, 1))))

8260  
	`gí_πx_PLUS
 (
	`GET_MODE
 (
x
), 
	`XEXP
 (x, 0), 
u
);

8261  
NULL_RTX
;

8262 
	}
}

8264 
πx


8265 
	$¨c_dñegôimize_addªss
 (
πx
 
x
)

8267 
πx
 
‹ig_x
 = 
x
 = 
	`dñegôimize_mem_‰om_©ås
 (x);

8268 i‡(
	`GET_CODE
 (
x
Ë=
MEM
)

8269 
x
 = 
	`XEXP
 (x, 0);

8270 
x
 = 
	`¨c_dñegôimize_addªss_0
 (x);

8271 i‡(
x
)

8273 i‡(
	`MEM_P
 (
‹ig_x
))

8274 
x
 = 
	`ª∂a˚_equiv_addªss_nv
 (
‹ig_x
, x);

8275  
x
;

8277  
‹ig_x
;

8278 
	}
}

8284 
πx


8285 
	$gí_acc1
 ()

8287  
	`gí_πx_REG
 (
SImode
, 
TARGET_BIG_ENDIAN
 ? 56: 57);

8288 
	}
}

8294 
πx


8295 
	$gí_acc2
 ()

8297  
	`gí_πx_REG
 (
SImode
, 
TARGET_BIG_ENDIAN
 ? 57: 56);

8298 
	}
}

8304 
πx


8305 
	$gí_mlo
 ()

8307  
	`gí_πx_REG
 (
SImode
, 
TARGET_BIG_ENDIAN
 ? 59: 58);

8308 
	}
}

8314 
πx


8315 
	$gí_mhi
 ()

8317  
	`gí_πx_REG
 (
SImode
, 
TARGET_BIG_ENDIAN
 ? 58: 59);

8318 
	}
}

8326 
	$¨c_u«lign_bønch_p
 (
πx
 
bønch
)

8328 
πx
 
nŸe
;

8330 i‡(!
TARGET_UNALIGN_BRANCH
)

8333 i‡(
	`gë_©å_dñay_¶Ÿ_fûÀd
 (
bønch
Ë=
DELAY_SLOT_FILLED_YES


8334 && !
	`INSN_DELETED_P
 (
	`NEXT_INSN
 (
bønch
)))

8336 
nŸe
 = 
	`föd_ªg_nŸe
 (
bønch
, 
REG_BR_PROB
, 0);

8337  (!
nŸe


8338 || (
¨c_u«lign_¥ob_thªshﬁd
 && !
	`br_¥ob_nŸe_ªlübÀ_p
 (
nŸe
))

8339 || 
	`INTVAL
 (
	`XEXP
 (
nŸe
, 0)Ë< 
¨c_u«lign_¥ob_thªshﬁd
);

8340 
	}
}

8352 
boﬁ


8353 
	$¨c_bønch_size_unknown_p
 ()

8355  !
›timize_size
 && 
¨c_ª‹g_ö_¥ogªss
;

8356 
	}
}

8364 
	$¨c_∑d_ªtu∫
 ()

8366 
πx
 
ö¢
 = 
cuºít_ouçut_ö¢
;

8367 
πx
 
¥ev
 = 
	`¥ev_a˘ive_ö¢
 (
ö¢
);

8368 
w™t_l⁄g
;

8370 i‡(!
¥ev
)

8372 
	`Âuts
 ("\ä›_s\n", 
asm_out_fûe
);

8373 
cfun
->
machöe
->
u«lign
 ^= 2;

8374 
w™t_l⁄g
 = 1;

8378 i‡(
	`GET_CODE
 (
	`PATTERN
 (
¥ev
)Ë=
SEQUENCE
)

8382 
w™t_l⁄g
 = (
	`gë_©å_Àngth
 (
¥ev
) == 2);

8383 
¥ev
 = 
	`¥ev_a˘ive_ö¢
 (prev);

8385 i‡(!
¥ev


8386 || ((
	`NONJUMP_INSN_P
 (
¥ev
Ë&& 
	`GET_CODE
 (
	`PATTERN
 (¥ev)Ë=
SEQUENCE
)

8387 ? 
	`CALL_ATTR
 (
	`XVECEXP
 (
	`PATTERN
 (
¥ev
), 0, 0), 
NON_SIBCALL
)

8388 : 
	`CALL_ATTR
 (
¥ev
, 
NON_SIBCALL
)))

8390 i‡(
w™t_l⁄g
)

8391 
cfun
->
machöe
->
size_ªas⁄


8393 i‡(
TARGET_UNALIGN_BRANCH
 && 
cfun
->
machöe
->
u«lign
)

8395 
cfun
->
machöe
->
size_ªas⁄


8397 
w™t_l⁄g
 = 1;

8400 i‡(
föÆ_£quí˚
)

8402 
¥ev
 = 
	`XVECEXP
 (
föÆ_£quí˚
, 0, 1);

8403 
	`gcc_as£π
 (!
	`¥ev_ªÆ_ö¢
 (
ö¢
)

8404 || !
	`¨c_haz¨d
 (
	`¥ev_ªÆ_ö¢
 (
ö¢
), 
¥ev
));

8405 
cfun
->
machöe
->
f‹˚_sh‹t_suffix
 = !
w™t_l⁄g
;

8406 
	`föÆ_sˇn_ö¢
 (
¥ev
, 
asm_out_fûe
, 
›timize
, 1, 
NULL
);

8407 
cfun
->
machöe
->
f‹˚_sh‹t_suffix
 = -1;

8408 
	`INSN_DELETED_P
 (
¥ev
) = 1;

8409 
cuºít_ouçut_ö¢
 = 
ö¢
;

8411 i‡(
w™t_l⁄g
)

8412 
	`Âuts
 ("\ä›\n", 
asm_out_fûe
);

8415 
	`Âuts
 ("\ä›_s\n", 
asm_out_fûe
);

8416 
cfun
->
machöe
->
u«lign
 ^= 2;

8420 
	}
}

8424 
machöe_fun˘i⁄
 *

8425 
	$¨c_öô_machöe_°©us
 ()

8427 
machöe_fun˘i⁄
 *
machöe
;

8428 
machöe
 = 
	`ggc_Æloc_˛óªd_machöe_fun˘i⁄
 ();

8429 
machöe
->
‚_ty≥
 = 
ARC_FUNCTION_UNKNOWN
;

8430 
machöe
->
f‹˚_sh‹t_suffix
 = -1;

8432  
machöe
;

8433 
	}
}

8439 
	$¨c_öô_ex∑ndîs
 ()

8441 
öô_machöe_°©us
 = 
¨c_öô_machöe_°©us
;

8442 
	}
}

8453 
	$¨c_check_mûlicode
 (
πx
 
›
, 
off£t
, 
lﬂd_p
)

8455 
Àn
 = 
	`XVECLEN
 (
›
, 0Ë- 
off£t
;

8456 
i
;

8458 i‡(
lﬂd_p
 == 2)

8460 i‡(
Àn
 < 2 ||Üen > 13)

8462 
lﬂd_p
 = 1;

8466 
πx
 
ñt
 = 
	`XVECEXP
 (
›
, 0, --
Àn
);

8468 i‡(
	`GET_CODE
 (
ñt
Ë!
CLOBBER


8469 || !
	`REG_P
 (
	`XEXP
 (
ñt
, 0))

8470 || 
	`REGNO
 (
	`XEXP
 (
ñt
, 0)Ë!
RETURN_ADDR_REGNUM


8471 || 
Àn
 < 3 ||Üen > 13)

8474 
i
 = 1; i < 
Àn
; i++)

8476 
πx
 
ñt
 = 
	`XVECEXP
 (
›
, 0, 
i
 + 
off£t
);

8477 
πx
 
ªg
, 
mem
, 
addr
;

8479 i‡(
	`GET_CODE
 (
ñt
Ë!
SET
)

8481 
mem
 = 
	`XEXP
 (
ñt
, 
lﬂd_p
);

8482 
ªg
 = 
	`XEXP
 (
ñt
, 1-
lﬂd_p
);

8483 i‡(!
	`REG_P
 (
ªg
Ë|| 
	`REGNO
 (ªgË!13U+
i
 || !
	`MEM_P
 (
mem
))

8485 
addr
 = 
	`XEXP
 (
mem
, 0);

8486 i‡(
	`GET_CODE
 (
addr
Ë!
PLUS


8487 || !
	`πx_equÆ_p
 (
°ack_poöãr_πx
, 
	`XEXP
 (
addr
, 0))

8488 || !
	`CONST_INT_P
 (
	`XEXP
 (
addr
, 1)Ë|| 
	`INTVAL
 (XEXP (addr, 1)Ë!
i
*4)

8492 
	}
}

8497 
	$¨c_gë_u«lign
 ()

8499  
cfun
->
machöe
->
u«lign
;

8500 
	}
}

8503 
	$¨c_˛ór_u«lign
 ()

8505 i‡(
cfun
)

8506 
cfun
->
machöe
->
u«lign
 = 0;

8507 
	}
}

8510 
	$¨c_toggÀ_u«lign
 ()

8512 
cfun
->
machöe
->
u«lign
 ^= 2;

8513 
	}
}

8521 
	$•lô_addsi
 (
πx
 *
›î™ds
)

8523 
vÆ
 = 
	`INTVAL
 (
›î™ds
[2]);

8527 i‡(
vÆ
 > 127 && val <= 255

8528 && 
	`ßtisfõs_c⁄°øöt_Rcq
 (
›î™ds
[0]))

8530 
›î™ds
[3] = operands[2];

8531 
›î™ds
[4] = 
	`gí_πx_PLUS
 (
SImode
, operands[0], operands[1]);

8535 
›î™ds
[3] = operands[1];

8536 
›î™ds
[4] = 
	`gí_πx_PLUS
 (
SImode
, operands[0], operands[2]);

8538 
	}
}

8546 
	$•lô_subsi
 (
πx
 *
›î™ds
)

8548 
vÆ
 = 
	`INTVAL
 (
›î™ds
[1]);

8552 i‡(
	`ßtisfõs_c⁄°øöt_Rcq
 (
›î™ds
[0])

8553 && 
	`ßtisfõs_c⁄°øöt_Rcq
 (
›î™ds
[2]))

8555 i‡(
vÆ
 >= -31 && val <= 127)

8557 
›î™ds
[3] = 
	`gí_πx_NEG
 (
SImode
, operands[2]);

8558 
›î™ds
[4] = 
	`gí_πx_PLUS
 (
SImode
, operands[0], operands[1]);

8561 i‡(
vÆ
 >= 0 && val < 255)

8563 
›î™ds
[3] = operands[1];

8564 
›î™ds
[4] = 
	`gí_πx_MINUS
 (
SImode
, operands[0], operands[2]);

8571 
›î™ds
[3] = operands[2];

8572 
›î™ds
[4] = 
	`gí_πx_MINUS
 (
SImode
, operands[1], operands[0]);

8573 
	}
}

8579 
πx


8580 
	$¨c_¥o˚ss_doubÀ_ªg_moves
 (
πx
 *
›î™ds
)

8582 
πx
 
de°
 = 
›î™ds
[0];

8583 
πx
 
§c
 = 
›î™ds
[1];

8584 
πx
 
vÆ
;

8586 
	eu£sDxSèã
 { 
n⁄e
, 
§cDx
, 
de°Dx
, 
maxDx
 };

8587 
u£sDxSèã
 
°©e
 = 
n⁄e
;

8589 i‡(
	`ª„rs_to_ªgno_p
 (40, 44, 
§c
, 0))

8590 
°©e
 = 
§cDx
;

8591 i‡(
	`ª„rs_to_ªgno_p
 (40, 44, 
de°
, 0))

8594 
	`gcc_as£π
 (
°©e
 =
n⁄e
);

8595 
°©e
 = 
de°Dx
;

8598 i‡(
°©e
 =
n⁄e
)

8599  
NULL_RTX
;

8601 
	`°¨t_£quí˚
 ();

8603 i‡(
°©e
 =
§cDx
)

8608 i‡(
TARGET_DPFP_DISABLE_LRSR
)

8611 
πx
 
£t
 = 
	`gí_πx_SET
 (
VOIDmode
, 
de°
, 
§c
);

8612 
πx
 
u£1
 = 
	`gí_πx_USE
 (
VOIDmode
, 
c⁄°1_πx
);

8613 
	`emô_ö¢
 (
	`gí_πx_PARALLEL
 (
VOIDmode
, 
	`gí_πvec
 (2, 
£t
, 
u£1
)));

8619 
πx
 
de°High
 = 
	`sim∂ify_gí_subªg
(
SImode
, 
de°
, 
DFmode
, 4);

8620 
πx
 
de°Low
 = 
	`sim∂ify_gí_subªg
(
SImode
, 
de°
, 
DFmode
, 0);

8623 
	`emô_ö¢
 (
	`gí_πx_SET
 (
VOIDmode
,

8624 
de°High
,

8625 
	`gí_πx_UNSPEC_VOLATILE
 (
Pmode
, 
	`gí_πvec
 (1, 
§c
),

8626 
VUNSPEC_LR_HIGH
)));

8627 
	`emô_ö¢
 (
	`gí_πx_SET
 (
VOIDmode
,

8628 
de°Low
,

8629 
	`gí_πx_UNSPEC_VOLATILE
 (
Pmode
, 
	`gí_πvec
 (1, 
§c
),

8630 
VUNSPEC_LR
)));

8633 i‡(
°©e
 =
de°Dx
)

8637 
πx
 
§cHigh
 = 
	`sim∂ify_gí_subªg
(
SImode
, 
§c
, 
DFmode
, 4);

8638 
πx
 
§cLow
 = 
	`sim∂ify_gí_subªg
(
SImode
, 
§c
, 
DFmode
, 0);

8640 
	`emô_ö¢
 (
	`gí_πx_UNSPEC_VOLATILE
 (
Pmode
,

8641 
	`gí_πvec
 (3, 
de°
, 
§cHigh
, 
§cLow
),

8642 
VUNSPEC_DEXCL_NORES
));

8646 
	`gcc_uƒóchabÀ
 ();

8648 
vÆ
 = 
	`gë_ö¢s
 ();

8649 
	`íd_£quí˚
 ();

8650  
vÆ
;

8651 
	}
}

8656 
πx


8657 
	$¨c_•lô_move
 (
πx
 *
›î™ds
)

8659 
machöe_mode
 
mode
 = 
	`GET_MODE
 (
›î™ds
[0]);

8660 
i
;

8661 
sw≠
 = 0;

8662 
πx
 
x›
[4];

8663 
πx
 
vÆ
;

8665 i‡(
TARGET_DPFP
)

8667 
vÆ
 = 
	`¨c_¥o˚ss_doubÀ_ªg_moves
 (
›î™ds
);

8668 i‡(
vÆ
)

8669  
vÆ
;

8672 
i
 = 0; i < 2; i++)

8674 i‡(
	`MEM_P
 (
›î™ds
[
i
]Ë&& 
	`auto_öc_p
 (
	`XEXP
 (operands[i], 0)))

8676 
πx
 
addr
 = 
	`XEXP
 (
›î™ds
[
i
], 0);

8677 
πx
 
r
, 
o
;

8678 
πx_code
 
code
;

8680 
	`gcc_as£π
 (!
	`ªg_ovîœp_míti⁄ed_p
 (
›î™ds
[0], 
addr
));

8681 
	`GET_CODE
 (
addr
))

8683 
PRE_DEC
: 
o
 = 
	`GEN_INT
 (-8); 
¥e_modify
;

8684 
PRE_INC
: 
o
 = 
	`GEN_INT
 (8); 
¥e_modify
;

8685 
PRE_MODIFY
: 
o
 = 
	`XEXP
 (XEXP (
addr
, 1), 1);

8686 
¥e_modify
:

8687 
code
 = 
PRE_MODIFY
;

8689 
POST_DEC
: 
o
 = 
	`GEN_INT
 (-8); 
po°_modify
;

8690 
POST_INC
: 
o
 = 
	`GEN_INT
 (8); 
po°_modify
;

8691 
POST_MODIFY
: 
o
 = 
	`XEXP
 (XEXP (
addr
, 1), 1);

8692 
po°_modify
:

8693 
code
 = 
POST_MODIFY
;

8694 
sw≠
 = 2;

8697 
	`gcc_uƒóchabÀ
 ();

8699 
r
 = 
	`XEXP
 (
addr
, 0);

8700 
x›
[0+
i
] = 
adju°_automodify_addªss_nv


8701 (
›î™ds
[
i
], 
SImode
,

8702 
	`gí_πx_fmt_ì
 (
code
, 
Pmode
, 
r
,

8703 
	`gí_πx_PLUS
 (
Pmode
, 
r
, 
o
)),

8705 
x›
[2+
i
] = 
adju°_automodify_addªss_nv


8706 (
›î™ds
[
i
], 
SImode
, 
	`∂us_c⁄°™t
 (
Pmode
, 
r
, 4), 4);

8710 
x›
[0+
i
] = 
	`›î™d_subw‹d
 (
›î™ds
[i], 0, 0, 
mode
);

8711 
x›
[2+
i
] = 
	`›î™d_subw‹d
 (
›î™ds
[i], 1, 0, 
mode
);

8714 i‡(
	`ªg_ovîœp_míti⁄ed_p
 (
x›
[0], xop[3]))

8716 
sw≠
 = 2;

8717 
	`gcc_as£π
 (!
	`ªg_ovîœp_míti⁄ed_p
 (
x›
[2], xop[1]));

8719 
›î™ds
[2+
sw≠
] = 
x›
[0];

8720 
›î™ds
[3+
sw≠
] = 
x›
[1];

8721 
›î™ds
[4-
sw≠
] = 
x›
[2];

8722 
›î™ds
[5-
sw≠
] = 
x›
[3];

8724 
	`°¨t_£quí˚
 ();

8725 
	`emô_ö¢
 (
	`gí_πx_SET
 (
VOIDmode
, 
›î™ds
[2], operands[3]));

8726 
	`emô_ö¢
 (
	`gí_πx_SET
 (
VOIDmode
, 
›î™ds
[4], operands[5]));

8727 
vÆ
 = 
	`gë_ö¢s
 ();

8728 
	`íd_£quí˚
 ();

8730  
vÆ
;

8731 
	}
}

8737 
	$¨c_sh‹t_l⁄g
 (
πx
 
ö¢
, c⁄° *
s_tm∂
, c⁄° *
l_tm∂
)

8739 
is_sh‹t
 = 
	`¨c_vîify_sh‹t
 (
ö¢
, 
cfun
->
machöe
->
u«lign
, -1);

8741 
	`exåa˘_c⁄°øö_ö¢_ˇched
 (
ö¢
);

8742  
is_sh‹t
 ? 
s_tm∂
 : 
l_tm∂
;

8743 
	}
}

8748 
πx


8749 
	$¨c_ªgno_u£_ö
 (
ªgno
, 
πx
 
x
)

8751 c⁄° *
fmt
;

8752 
i
, 
j
;

8753 
πx
 
ãm
;

8755 i‡(
	`REG_P
 (
x
Ë&& 
	`ª„rs_to_ªgno_p
 (
ªgno
,Ñegno+1, x, (
πx
 *) 0))

8756  
x
;

8758 
fmt
 = 
	`GET_RTX_FORMAT
 (
	`GET_CODE
 (
x
));

8759 
i
 = 
	`GET_RTX_LENGTH
 (
	`GET_CODE
 (
x
)) - 1; i >= 0; i--)

8761 i‡(
fmt
[
i
] == 'e')

8763 i‡((
ãm
 = 
	`ªgno_u£_ö
 (
ªgno
, 
	`XEXP
 (
x
, 
i
))))

8764  
ãm
;

8766 i‡(
fmt
[
i
] == 'E')

8767 
j
 = 
	`XVECLEN
 (
x
, 
i
) - 1; j >= 0; j--)

8768 i‡((
ãm
 = 
	`ªgno_u£_ö
 (
ªgno
 , 
	`XVECEXP
 (
x
, 
i
, 
j
))))

8769  
ãm
;

8772  
NULL_RTX
;

8773 
	}
}

8779 
	$¨c_©å_ty≥
 (
πx
 
ö¢
)

8781 i‡(
	`NONJUMP_INSN_P
 (
ö¢
)

8782 ? (
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
USE


8783 || 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
CLOBBER
)

8784 : 
	`JUMP_P
 (
ö¢
)

8785 ? (
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
ADDR_VEC


8786 || 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
ADDR_DIFF_VEC
)

8787 : !
	`CALL_P
 (
ö¢
))

8789  
	`gë_©å_ty≥
 (
ö¢
);

8790 
	}
}

8794 
boﬁ


8795 
	$¨c_£ts_cc_p
 (
πx
 
ö¢
)

8797 i‡(
	`NONJUMP_INSN_P
 (
ö¢
Ë&& 
	`GET_CODE
 (
	`PATTERN
 (ö¢)Ë=
SEQUENCE
)

8798 
ö¢
 = 
	`XVECEXP
 (
	`PATTERN
 (ö¢), 0, 
	`XVECLEN
 (PATTERN (insn), 0) - 1);

8799  
	`¨c_©å_ty≥
 (
ö¢
Ë=
TYPE_COMPARE
;

8800 
	}
}

8805 
boﬁ


8806 
	$¨c_√ed_dñay
 (
πx
 
ö¢
)

8808 
πx
 
√xt
;

8810 i‡(!
Êag_dñayed_bønch
)

8811  
Ál£
;

8813 i‡(
	`NONJUMP_INSN_P
 (
ö¢
Ë&& 
	`GET_CODE
 (
	`PATTERN
 (ö¢)Ë=
USE


8814 && (!(
√xt
 = 
	`√xt_a˘ive_ö¢
 (
ö¢
))

8815 || ((!
	`NONJUMP_INSN_P
 (
√xt
Ë|| 
	`GET_CODE
 (
	`PATTERN
 (√xt)Ë!
SEQUENCE
)

8816 && 
	`¨c_©å_ty≥
 (
√xt
Ë=
TYPE_RETURN
))

8817 && (!
TARGET_PAD_RETURN


8818 || (
	`¥ev_a˘ive_ö¢
 (
ö¢
)

8819 && 
	`¥ev_a˘ive_ö¢
 (¥ev_a˘ive_ö¢ (
ö¢
))

8820 && 
	`¥ev_a˘ive_ö¢
 (¥ev_a˘ive_ö¢ (¥ev_a˘ive_ö¢ (
ö¢
))))))

8821  
åue
;

8822 i‡(
	`NONJUMP_INSN_P
 (
ö¢
)

8823 ? (
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
USE


8824 || 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
CLOBBER


8825 || 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
SEQUENCE
)

8826 : 
	`JUMP_P
 (
ö¢
)

8827 ? (
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
ADDR_VEC


8828 || 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
ADDR_DIFF_VEC
)

8829 : !
	`CALL_P
 (
ö¢
))

8830  
Ál£
;

8831  
	`num_dñay_¶Ÿs
 (
ö¢
) != 0;

8832 
	}
}

8838 
boﬁ


8839 
	$¨c_schedulög_nŸ_ex≥˘ed
 ()

8841  
cfun
->
machöe
->
¨c_ª‹g_°¨ãd
;

8842 
	}
}

8852 
	$¨c_œbñ_Æign
 (
πx
 
œbñ
)

8854 
lo›_Æign
 = 
	`LOOP_ALIGN
 (
LABEL
);

8856 i‡(
lo›_Æign
 > 
Æign_œbñs_log
)

8858 
πx
 
¥ev
 = 
	`¥ev_n⁄nŸe_ö¢
 (
œbñ
);

8860 i‡(
¥ev
 && 
	`NONJUMP_INSN_P
 (prev)

8861 && 
	`GET_CODE
 (
	`PATTERN
 (
¥ev
)Ë=
PARALLEL


8862 && 
	`ªcog_memoized
 (
¥ev
Ë=
CODE_FOR_dﬁo›_begö_i
)

8863  
lo›_Æign
;

8867 i‡(
Æign_œbñs_log
 < 1)

8869 
πx
 
√xt
 = 
	`√xt_n⁄nŸe_n⁄debug_ö¢
 (
œbñ
);

8870 i‡(
	`INSN_P
 (
√xt
Ë&& 
	`ªcog_memoized
 (next) >= 0)

8873  
Æign_œbñs_log
;

8874 
	}
}

8878 
boﬁ


8879 
	$¨c_ãxt_œbñ
 (
πx
 
œbñ
)

8881 
πx
 
√xt
;

8885 
	`gcc_as£π
 (
	`GET_CODE
 (
œbñ
Ë=
CODE_LABEL


8886 || (
	`GET_CODE
 (
œbñ
Ë=
NOTE


8887 && 
	`NOTE_KIND
 (
œbñ
Ë=
NOTE_INSN_DELETED_LABEL
));

8888 
√xt
 = 
	`√xt_n⁄nŸe_ö¢
 (
œbñ
);

8889 i‡(
√xt
)

8890  (
	`GET_CODE
 (
√xt
Ë!
JUMP_INSN


8891 || 
	`GET_CODE
 (
	`PATTERN
 (
√xt
)Ë!
ADDR_VEC
);

8892 i‡(!
	`PREV_INSN
 (
œbñ
))

8895  
åue
;

8896  
Ál£
;

8897 
	}
}

8902 
	$¨c_de˛_¥ëíd_¨gs
 (
åì
 
de˛
)

8906 
	`gcc_as£π
 (
de˛
 =
cuºít_fun˘i⁄_de˛
);

8907  
¸é
->
¨gs
.
¥ëíd_¨gs_size
;

8908 
	}
}

8915 
boﬁ


8916 
	$¨c_ˇn_fﬁlow_jump
 (
c⁄°_πx
 
fﬁlowî
, c⁄°_πx 
fﬁlowì
)

8919 uni⁄ { 
c⁄°_πx
 
c
; 
πx
 
r
; } 
u
;

8921 
u
.
c
 = 
fﬁlowî
;

8922 i‡(
	`föd_ªg_nŸe
 (
fﬁlowì
, 
REG_CROSSING_JUMP
, 
NULL_RTX
))

8923 
	`gë_©å_ty≥
 (
u
.
r
))

8925 
TYPE_BRCC
:

8926 
TYPE_BRCC_NO_DELAY_SLOT
:

8927  
Ál£
;

8929  
åue
;

8931  
åue
;

8932 
	}
}

8942 
boﬁ


8943 
	$¨c_ïûogue_u£s
 (
ªgno
)

8945 i‡(
ªlﬂd_com∂ëed
)

8947 i‡(
	`ARC_INTERRUPT_P
 (
cfun
->
machöe
->
‚_ty≥
))

8949 i‡(!
fixed_ªgs
[
ªgno
])

8950  
åue
;

8951  
ªgno
 =
¨c_ªtu∫_addªss_ªgs
[
cfun
->
machöe
->
‚_ty≥
];

8954  
ªgno
 =
RETURN_ADDR_REGNUM
;

8957  
ªgno
 =
¨c_ªtu∫_addªss_ªgs
[
	`¨c_compuã_fun˘i⁄_ty≥
 (
cfun
)];

8958 
	}
}

8960 #i‚de‡
TARGET_NO_LRA


8961 
	#TARGET_NO_LRA
 !
TARGET_LRA


	)

8964 
boﬁ


8965 
	$¨c_Ãa_p
 ()

8967  !
TARGET_NO_LRA
;

8968 
	}
}

8977 
	$¨c_ªgi°î_¥i‹ôy
 (
r
)

8979 
¨c_Ãa_¥i‹ôy_èg
)

8981 
ARC_LRA_PRIORITY_NONE
:

8983 
ARC_LRA_PRIORITY_NONCOMPACT
:

8984  ((((
r
 & 7) ^ 4) - 4) & 15) !=Ñ;

8985 
ARC_LRA_PRIORITY_COMPACT
:

8986  ((((
r
 & 7) ^ 4) - 4) & 15) ==Ñ;

8988 
	`gcc_uƒóchabÀ
 ();

8990 
	}
}

8992 
ªg_˛ass_t


8993 
	$¨c_•ûl_˛ass
 (
ªg_˛ass_t
 
‹ig_˛ass
, 
machöe_mode
)

8995  
GENERAL_REGS
;

8996 
	}
}

8998 
gcc_èrgë
 
	gèrgëm
 = 
TARGET_INITIALIZER
;

9000 
	~"gt-¨c.h
"

	@arc.h

29 #i‚de‡
GCC_ARC_H


30 
	#GCC_ARC_H


	)

38 
	#SYMBOL_FLAG_SHORT_CALL
 (
SYMBOL_FLAG_MACH_DEP
 << 0)

	)

39 
	#SYMBOL_FLAG_LONG_CALL
 (
SYMBOL_FLAG_MACH_DEP
 << 1)

	)

42 
	#SYMBOL_REF_LONG_CALL_P
(
X
) \

43 ((
	`SYMBOL_REF_FLAGS
 (
X
Ë& 
SYMBOL_FLAG_LONG_CALL
Ë!0)

	)

46 
	#SYMBOL_REF_SHORT_CALL_P
(
X
) \

47 ((
	`SYMBOL_REF_FLAGS
 (
X
Ë& 
SYMBOL_FLAG_SHORT_CALL
Ë!0)

	)

49 #unde‡
ASM_SPEC


50 #unde‡
LINK_SPEC


51 #unde‡
STARTFILE_SPEC


52 #unde‡
ENDFILE_SPEC


53 #unde‡
SIZE_TYPE


54 #unde‡
PTRDIFF_TYPE


55 #unde‡
WCHAR_TYPE


56 #unde‡
WCHAR_TYPE_SIZE


57 #unde‡
ASM_APP_ON


58 #unde‡
ASM_APP_OFF


59 #unde‡
CC1_SPEC


62 
	#TARGET_CPU_CPP_BUILTINS
() \

64 
	`buûtö_deföe
 ("__arc__"); \

65 i‡(
TARGET_A5
) \

66 
	`buûtö_deföe
 ("__A5__"); \

67 i‡(
TARGET_ARC600
) \

69 
	`buûtö_deföe
 ("__A6__"); \

70 
	`buûtö_deföe
 ("__ARC600__"); \

72 i‡(
TARGET_ARC601
) \

74 
	`buûtö_deföe
 ("__ARC601__"); \

76 i‡(
TARGET_ARC700
) \

78 
	`buûtö_deföe
 ("__A7__"); \

79 
	`buûtö_deföe
 ("__ARC700__"); \

81 i‡(
TARGET_EM
) \

83 
	`buûtö_deföe
 ("__EM__"); \

85 i‡(
TARGET_NORM
) \

87 
	`buûtö_deföe
 ("__ARC_NORM__");\

88 
	`buûtö_deföe
 ("__Xnorm"); \

90 i‡(
TARGET_MUL64_SET
) \

91 
	`buûtö_deföe
 ("__ARC_MUL64__");\

92 i‡(
TARGET_MULMAC_32BY16_SET
) \

93 
	`buûtö_deföe
 ("__ARC_MUL32BY16__");\

94 i‡(
TARGET_SIMD_SET
) \

95 
	`buûtö_deföe
 ("__ARC_SIMD__"); \

96 i‡(
TARGET_BARREL_SHIFTER
) \

97 
	`buûtö_deföe
 ("__Xbarrel_shifter");\

98 
	`buûtö_as£π
 ("cpu=arc"); \

99 
	`buûtö_as£π
 ("machine=arc"); \

100 
	`buûtö_deföe
 (
TARGET_BIG_ENDIAN
 \

102 i‡(
TARGET_BIG_ENDIAN
) \

103 
	`buûtö_deföe
 ("__big_endian__"); \

104 } 0)

	)

107 
	#CPP_SPEC
 "\
%{msimd:-D__Xsimd} %{mno-mpy:-D__Xno_mpy} %{msw≠:-D__Xsw≠} \
%{mmö_max:-D__Xmö_max} %{mEA:-D__Xó} \
%{m•Â*:-D__X•Â} %{mdpÂ*:-D__XdpÂ} \
%{mmac_d16:-D__Xxmac_d16} %{mmac_24:-D__Xxmac_24} \
%{md•_∑cka:-D__Xd•_∑cka} %{m¸c:-D__X¸c} %{mdvbf:-D__Xdvbf} \
%{mãÀph⁄y:-D__XãÀph⁄y} %{mxy:-D__Xxy} %{mmul64: -D__Xmu…32} \
%{mlock:-D__Xlock} %{msw≠e:-D__Xsw≠e} %{mπsc:-D__Xπsc} \
"

	)

117 
	#CC1_SPEC
 "\
%{EB:%{EL:%emayÇŸ u£ bŸh -EBánd -EL}} \
%{EB:-mbig-ídün} %{EL:-mlôée-ídün} \
"

	)

121 
	#ASM_SPEC
 "\
%{mbig-ídün|EB:-EB} %{EL} \
%{m˝u=A5|m˝u˜5|mA5:-mA5} \
%{m˝u=ARC600|m˝u˜rc600|mARC600|mA6:-mARC600} \
%{m˝u=ARC601|m˝u˜rc601:-mARC601} \
%{m˝u=ARC700|m˝u˜rc700|mARC700|mA7:-mARC700} \
%{m˝u=ARC700|m˝u˜rc700|mARC700|mA7:-mEA} \
%{!m˝u=*:%{!A5:%{!A6:%{!mARC600:%{!mARC700:-mARC700 -mEA}}}}} \
%{m˝u=EM|mEM:%<mb¨ªl_shi·î}\
%{mb¨ªl_shi·î} \
%{mno-mpy} %{mmul64} %{mmul32x16:-md•} %{mn‹m} %{msw≠} \
%{mEA} %{mmö_max} %{m•Â*} %{mdpÂ*} \
%{msimd} \
%{mmac_d16} %{mmac_24} %{md•_∑cka} %{m¸c} %{mdvbf} %{mãÀph⁄y} %{mxy} \
%{m˝u=ARC700|mARC700|mA7:%{mlock}} \
%{m˝u=ARC700|mARC700|mA7:%{msw≠e}} \
%{m˝u=ARC700|mARC700|mA7:%{mπsc}} \
%{m˝u=EM|mEM:-mEM} \
"

	)

141 #i‡
DEFAULT_LIBC
 =
LIBC_UCLIBC


144 
	#LINK_SPEC
 "%{h*} \
%{°©ic:-B°©ic} \
%{symbﬁic:-Bsymbﬁic} \
%{rdy«mic:-exp‹t-dy«mic}\
-dy«mic-lökî /lib/ld-uClibc.so.0 \
-X %{mbig-ídün:-EB} \
%{EB} %{EL} \
%{m¨˛öux*} \
%{!m¨˛öux*: %{pg|p|¥ofûe:-m¨˛öux_¥of;: -m¨˛öux}} \
%{!z:-z max-∑ge-size=0x2000 -z comm⁄-∑ge-size=0x2000} \
%{sh¨ed:-sh¨ed}"

	)

161 
	#LINK_COMMAND_SPEC
 "\
%{!fsy¡ax-⁄ly:%{!c:%{!M:%{!MM:%{!E:%{!S:\
%÷ökîË%»" 
LINK_PIE_SPEC
 "%X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} %{r}\
%{s} %{t} %{u*} %{x} %{z} %{Z} %{!A:%{!no°dlib:%{!no°¨tfûes:%S}}}\
%{°©ic:} %{L*} %(mfwøpË%÷ök_libgccË%o\
%{f›ímp:%:ö˛ude÷ibgomp.•ec)%÷ök_gomp)} %(mÊib)\
%{Ârofûe-¨cs|Ârofûe-gíî©e|covîage:-lgcov}\
%{!no°dlib:%{!nodeÁu…libs:%÷ök_s•Ë%÷ök_gcc_c_£quí˚)}}\
%{sh¨ed:%{no°dlib:%{!ªÆly-no°dlib: %G }}} \
%{!A:%{!no°dlib:%{!no°¨tfûes:%E}}} %{T*} }}}}}}"

	)

173 
	#LINK_SPEC
 "%{mbig-ídün:-EB} %{EB} %{EL}\
%{pg|p:-m¨˚lf_¥of;mA7|mARC700|m˝u˜rc700|m˝u=ARC700: -m¨˚lf}"

	)

177 #i‡
DEFAULT_LIBC
 !
LIBC_UCLIBC


178 
	#STARTFILE_SPEC
 "%{!sh¨ed:¸t0.o%s} cπi%O%†%{pg|p:¸tg.o%s} cπbegö.o%s"

	)

180 
	#STARTFILE_SPEC
 "%{!sh¨ed:%{!mkî√l:¸t1.o%s}} cπi.o%†\
%{!sh¨ed:%{pg|p|¥ofûe:¸tg.o%s} cπbegö.o%s} %{sh¨ed:¸tbegöS.o%s}"

	)

185 #i‡
DEFAULT_LIBC
 !
LIBC_UCLIBC


186 
	#ENDFILE_SPEC
 "%{pg|p:¸tgíd.o%s} cπíd.o%†¸ä%O%s"

	)

188 
	#ENDFILE_SPEC
 "%{!sh¨ed:%{pg|p|¥ofûe:¸tgíd.o%s} cπíd.o%s} \
%{sh¨ed:¸ãndS.o%s} cπn.o%s"

	)

193 #i‡
DEFAULT_LIBC
 =
LIBC_UCLIBC


194 #unde‡
LIB_SPEC


195 
	#LIB_SPEC
 \

196 "%{±hªad:-Õthªad} \
%{sh¨ed:-lc} \
%{!sh¨ed:%{pg|p|¥ofûe:-lgm⁄ -uÖrofû --defsym __¥ofûırofû} -lc}"

	)

200 #unde‡
LIB_SPEC


202 
	#LIB_SPEC
 "%{!sh¨ed:%{g*:-lg} %{pg|p:-lgm⁄} -lc}"

	)

205 #i‚de‡
DRIVER_ENDIAN_SELF_SPECS


206 
	#DRIVER_ENDIAN_SELF_SPECS
 ""

	)

209 
	#DRIVER_SELF_SPECS
 
DRIVER_ENDIAN_SELF_SPECS
 \

214 "%{mEM:-m˝u=EM %<mEM}"

	)

218 
	#TARGET_MIXED_CODE
 (
TARGET_MIXED_CODE_SET
)

	)

220 
	#TARGET_SPFP
 (
TARGET_SPFP_FAST_SET
 || 
TARGET_SPFP_COMPACT_SET
)

	)

221 
	#TARGET_DPFP
 (
TARGET_DPFP_FAST_SET
 || 
TARGET_DPFP_COMPACT_SET
)

	)

223 
	#SUBTARGET_SWITCHES


	)

230 
	#TARGET_NORM
 (
TARGET_ARC700
 || 
TARGET_NORM_SET
)

	)

232 
	#TARGET_OPTFPE
 \

233 (
TARGET_ARC700
 \

234 || ((
TARGET_ARC600
 || 
TARGET_ARC601
Ë&& 
TARGET_NORM_SET
 \

235 && (
TARGET_MUL64_SET
 || 
TARGET_MULMAC_32BY16_SET
)))

	)

239 
	#TARGET_SWAP
 (
TARGET_ARC700
 || 
TARGET_SWAP_SET
)

	)

245 
	#TARGET_UNALIGN_BRANCH
 (
TARGET_ARC700
 && !
›timize_size
)

	)

248 
	#TARGET_UPSIZE_DBR
 (
TARGET_ARC700
 && !
›timize_size
)

	)

251 
	#TARGET_PAD_RETURN
 (
TARGET_ARC700
 && !
›timize_size
)

	)

255 
	#TARGET_AT_DBR_CONDEXEC
 (!
TARGET_ARC700
)

	)

257 
	#TARGET_A5
 (
¨c_˝u
 =
PROCESSOR_A5
)

	)

258 
	#TARGET_ARC600
 (
¨c_˝u
 =
PROCESSOR_ARC600
)

	)

259 
	#TARGET_ARC601
 (
¨c_˝u
 =
PROCESSOR_ARC601
)

	)

260 
	#TARGET_ARC700
 (
¨c_˝u
 =
PROCESSOR_ARC700
)

	)

261 
	#TARGET_EM
 (
¨c_˝u
 =
PROCESSOR_EM
)

	)

264 
	#¨c_˝u_©å
 ((
©å_˝u
)
¨c_˝u
)

	)

266 #i‚de‡
MULTILIB_DEFAULTS


267 
	#MULTILIB_DEFAULTS
 { "mARC700" }

	)

274 
	#BITS_BIG_ENDIAN
 0

	)

277 
	#BYTES_BIG_ENDIAN
 (
TARGET_BIG_ENDIAN
)

	)

281 
	#WORDS_BIG_ENDIAN
 (
TARGET_BIG_ENDIAN
)

	)

284 
	#BITS_PER_UNIT
 8

	)

290 
	#BITS_PER_WORD
 32

	)

293 
	#UNITS_PER_WORD
 4

	)

300 
	#PROMOTE_MODE
(
MODE
,
UNSIGNEDP
,
TYPE
) \

301 i‡(
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_INT
 \

302 && 
	`GET_MODE_SIZE
 (
MODE
Ë< 
UNITS_PER_WORD
) \

304 (
MODE
Ë
SImode
; \

305 }

	)

309 
	#POINTER_SIZE
 32

	)

312 
	#PARM_BOUNDARY
 32

	)

316 
	#STACK_BOUNDARY
 32

	)

319 
	#ARC_STACK_ALIGN
(
LOC
) \

320 (((
LOC
Ë+ 
STACK_BOUNDARY
 / 
BITS_PER_UNIT
 - 1Ë& -STACK_BOUNDARY/BITS_PER_UNIT)

	)

323 
	#FUNCTION_BOUNDARY
 32

	)

326 
	#EMPTY_FIELD_BOUNDARY
 32

	)

329 
	#STRUCTURE_SIZE_BOUNDARY
 8

	)

332 
	#PCC_BITFIELD_TYPE_MATTERS
 1

	)

342 
	#ADJUST_FIELD_ALIGN
(
FIELD
, 
COMPUTED
) \

343 (
	`TYPE_MODE
 (
	`°rù_¨øy_ty≥s
 (
	`TREE_TYPE
 (
FIELD
))Ë=
DFmode
 \

344 ? 
	`MIN
 ((
COMPUTED
), 32Ë: (COMPUTED))

	)

354 
	#BIGGEST_ALIGNMENT
 32

	)

357 
	#FASTEST_ALIGNMENT
 32

	)

360 
	#CONSTANT_ALIGNMENT
(
EXP
, 
ALIGN
) \

361 ((
	`TREE_CODE
 (
EXP
Ë=
STRING_CST
 \

362 && (
ALIGN
Ë< 
FASTEST_ALIGNMENT
) \

363 ? 
FASTEST_ALIGNMENT
 : (
ALIGN
))

	)

367 
	#LOCAL_ALIGNMENT
(
TYPE
, 
ALIGN
) \

368 (
	`TREE_CODE
 (
TYPE
Ë=
ARRAY_TYPE
 \

369 && 
	`TYPE_MODE
 (
	`TREE_TYPE
 (
TYPE
)Ë=
QImode
 \

370 && (
ALIGN
Ë< 
FASTEST_ALIGNMENT
 ? FASTEST_ALIGNMENT : (ALIGN))

	)

372 
	#DATA_ALIGNMENT
(
TYPE
, 
ALIGN
) \

373 (
	`TREE_CODE
 (
TYPE
Ë=
ARRAY_TYPE
 \

374 && 
	`TYPE_MODE
 (
	`TREE_TYPE
 (
TYPE
)Ë=
QImode
 \

375 && 
¨c_size_›t_Àvñ
 < 3 \

376 && (
ALIGN
Ë< 
FASTEST_ALIGNMENT
 ? FASTEST_ALIGNMENT : (ALIGN))

	)

383 
	#STRICT_ALIGNMENT
 1

	)

387 
	#SHORT_TYPE_SIZE
 16

	)

388 
	#INT_TYPE_SIZE
 32

	)

389 
	#LONG_TYPE_SIZE
 32

	)

390 
	#LONG_LONG_TYPE_SIZE
 64

	)

391 
	#FLOAT_TYPE_SIZE
 32

	)

392 
	#DOUBLE_TYPE_SIZE
 64

	)

393 
	#LONG_DOUBLE_TYPE_SIZE
 64

	)

396 
	#DEFAULT_SIGNED_CHAR
 0

	)

398 
	#SIZE_TYPE
 "l⁄g unsig√d i¡"

	)

399 
	#PTRDIFF_TYPE
 "l⁄g i¡"

	)

400 
	#WCHAR_TYPE
 "öt"

	)

401 
	#WCHAR_TYPE_SIZE
 32

	)

405 
	#PROGRAM_COUNTER_REGNO
 63

	)

422 
	#FIRST_PSEUDO_REGISTER
 146

	)

457 
	#FIXED_REGISTERS
 \

480 1, 1}

	)

488 
	#CALL_USED_REGISTERS
 \

512 1, 1}

	)

517 
	#REG_ALLOC_ORDER
 \

522 27, 28, 29, 30, 31, 63}

	)

528 
	#HARD_REGNO_NREGS
(
REGNO
, 
MODE
) \

529 ((
	`GET_MODE_SIZE
 (
MODE
Ë=16 && 
REGNO
 >= 64 && REGNO < 88) ? 1 \

530 : (
	`GET_MODE_SIZE
 (
MODE
Ë+ 
UNITS_PER_WORD
 - 1Ë/ UNITS_PER_WORD)

	)

533 
¨c_h¨d_ªgno_mode_ok
[];

534 
¨c_mode_˛ass
[];

535 
	#HARD_REGNO_MODE_OK
(
REGNO
, 
MODE
) \

536 ((
¨c_h¨d_ªgno_mode_ok
[
REGNO
] & 
¨c_mode_˛ass
[
MODE
]Ë!0)

	)

547 
	#MODES_TIEABLE_P
(
MODE1
, 
MODE2
) \

548 (
	`GET_MODE_CLASS
 (
MODE1
Ë=
MODE_INT
 \

549 && 
	`GET_MODE_CLASS
 (
MODE2
Ë=
MODE_INT
 \

550 && 
	`GET_MODE_SIZE
 (
MODE1
Ë<
UNITS_PER_WORD
 \

551 && 
	`GET_MODE_SIZE
 (
MODE2
Ë<
UNITS_PER_WORD
)

	)

557 
	#COMPACT_GP_REG_P
(
REGNO
) \

558 (((sig√d)(
REGNO
Ë>0 && (REGNOË<3Ë|| ((REGNOË>12 && (REGNOË<15))

	)

559 
	#SP_REG_P
(
REGNO
Ë((REGNOË=28)

	)

588 
	eªg_˛ass


590 
	mNO_REGS
,

591 
	mR0_REG
,

592 
	mGP_REG
,

593 
	mFP_REG
,

594 
	mSP_REGS
,

595 
	mLPCOUNT_REG
,

596 
	mLINK_REGS
,

597 
	mDOUBLE_REGS
,

598 
	mSIMD_VR_REGS
,

599 
	mSIMD_DMA_CONFIG_REGS
,

600 
	mARCOMPACT16_REGS
,

601 
	mAC16_BASE_REGS
,

602 
	mSIBCALL_REGS
,

603 
	mGENERAL_REGS
,

604 
	mMPY_WRITABLE_CORE_REGS
,

605 
	mWRITABLE_CORE_REGS
,

606 
	mCHEAP_CORE_REGS
,

607 
	mALL_CORE_REGS
,

608 
	mALL_REGS
,

609 
	mLIM_REG_CLASSES


612 
	#N_REG_CLASSES
 (Ë
LIM_REG_CLASSES


	)

615 
	#REG_CLASS_NAMES
 \

636 }

	)

642 
	#REG_CLASS_CONTENTS
 \

667 }

	)

670 
	#ARC_FIRST_SIMD_VR_REG
 64

	)

671 
	#ARC_LAST_SIMD_VR_REG
 127

	)

673 
	#ARC_FIRST_SIMD_DMA_CONFIG_REG
 128

	)

674 
	#ARC_FIRST_SIMD_DMA_CONFIG_IN_REG
 128

	)

675 
	#ARC_FIRST_SIMD_DMA_CONFIG_OUT_REG
 136

	)

676 
	#ARC_LAST_SIMD_DMA_CONFIG_REG
 143

	)

683 
ªg_˛ass
 
¨c_ªgno_ªg_˛ass
[];

685 
	#REGNO_REG_CLASS
(
REGNO
Ë(
¨c_ªgno_ªg_˛ass
[REGNO])

	)

692 
	#INDEX_REG_CLASS
 (
TARGET_MIXED_CODE
 ? 
ARCOMPACT16_REGS
 : 
GENERAL_REGS
)

	)

697 
	#BASE_REG_CLASS
 (
TARGET_MIXED_CODE
 ? 
AC16_BASE_REGS
 : 
GENERAL_REGS
)

	)

704 
	#REGNO_OK_FOR_BASE_P
(
REGNO
) \

705 ((
REGNO
Ë< 29 || ((REGNOË=
ARG_POINTER_REGNUM
) || ((REGNO) == 63) ||\

706 (Ë
ªg_ªnumbî
[
REGNO
] < 29)

	)

708 
	#REGNO_OK_FOR_INDEX_P
(
REGNO
Ë
	`REGNO_OK_FOR_BASE_P
(REGNO)

	)

715 
	#PREFERRED_RELOAD_CLASS
(
X
, 
CLASS
) \

716 
	`¨c_¥e„ºed_ªlﬂd_˛ass
((
X
), (
CLASS
))

	)

718 
ªg_˛ass
 
¨c_¥e„ºed_ªlﬂd_˛ass
 (
πx
, reg_class);

723 
	#CLASS_MAX_NREGS
(
CLASS
, 
MODE
) \

724 (–
	`GET_MODE_SIZE
 (
MODE
Ë=16 && 
CLASS
 =
SIMD_VR_REGS
) ? 1: \

725 ((
	`GET_MODE_SIZE
 (
MODE
Ë+ 
UNITS_PER_WORD
 - 1Ë/ UNITS_PER_WORD))

	)

727 
	#SMALL_INT
(
X
Ë((Ë((XË+ 0x100Ë< 0x200)

	)

728 
	#SMALL_INT_RANGE
(
X
, 
OFFSET
, 
SHIFT
) \

729 ((Ë(((
X
Ë>> (
SHIFT
)) + 0x100) \

730 < 0x200 - ((Ë(
OFFSET
Ë>> (
SHIFT
)))

	)

731 
	#SIGNED_INT12
(
X
Ë((Ë((XË+ 0x800Ë< 0x1000)

	)

732 
	#LARGE_INT
(
X
) \

733 (((
X
) < 0) \

734 ? (
X
Ë>(-(
HOST_WIDE_INT
) 0x7fffffff - 1) \

735 : (
HOST_WIDE_INT
Ë(
X
Ë<(HOST_WIDE_INTË0xffffffff)

	)

736 
	#UNSIGNED_INT3
(
X
Ë((Ë(XË< 0x8)

	)

737 
	#UNSIGNED_INT5
(
X
Ë((Ë(XË< 0x20)

	)

738 
	#UNSIGNED_INT6
(
X
Ë((Ë(XË< 0x40)

	)

739 
	#UNSIGNED_INT7
(
X
Ë((Ë(XË< 0x80)

	)

740 
	#UNSIGNED_INT8
(
X
Ë((Ë(XË< 0x100)

	)

741 
	#IS_ONE
(
X
Ë((XË=1)

	)

742 
	#IS_ZERO
(
X
Ë((XË=0)

	)

748 
	#STACK_GROWS_DOWNWARD


	)

754 
	#FRAME_GROWS_DOWNWARD
 1

	)

760 
	#STARTING_FRAME_OFFSET
 0

	)

764 
	#STACK_POINTER_OFFSET
 (0)

	)

767 
	#FIRST_PARM_OFFSET
(
FNDECL
Ë(0)

	)

788 
	#RETURN_ADDR_RTX
(
COUNT
, 
FRAME
) \

789 
	`¨c_ªtu∫_addr_πx
(
COUNT
,
FRAME
)

	)

792 
	#STACK_POINTER_REGNUM
 28

	)

795 
	#FRAME_POINTER_REGNUM
 27

	)

799 
	#ARG_POINTER_REGNUM
 62

	)

801 
	#RETURN_ADDR_REGNUM
 31

	)

806 
	#STATIC_CHAIN_REGNUM
 11

	)

815 
	#ACCUMULATE_OUTGOING_ARGS
 1

	)

822 
	#CUMULATIVE_ARGS
 

	)

827 
	#INIT_CUMULATIVE_ARGS
(
CUM
,
FNTYPE
,
LIBNAME
,
INDIRECT
,
N_NAMED_ARGS
) \

828 ((
CUM
Ë0)

	)

831 
	#MAX_ARC_PARM_REGS
 8

	)

834 
	#FUNCTION_ARG_REGNO_P
(
N
) \

835 ((Ë(
N
Ë< 
MAX_ARC_PARM_REGS
)

	)

839 
	#ROUND_ADVANCE
(
SIZE
) \

840 (((
SIZE
Ë+ 
UNITS_PER_WORD
 - 1Ë/ UNITS_PER_WORD)

	)

843 
	#ROUND_ADVANCE_ARG
(
MODE
, 
TYPE
) \

844 ((
MODE
Ë=
BLKmode
 \

845 ? 
	`ROUND_ADVANCE
 (
	`öt_size_ö_byãs
 (
TYPE
)) \

846 : 
	`ROUND_ADVANCE
 (
	`GET_MODE_SIZE
 (
MODE
)))

	)

848 
	#ARC_FUNCTION_ARG_BOUNDARY
(
MODE
,
TYPE
Ë
PARM_BOUNDARY


	)

852 
	#ROUND_ADVANCE_CUM
(
CUM
, 
MODE
, 
TYPE
) \

853 ((((
CUM
Ë- 1Ë| (
	`ARC_FUNCTION_ARG_BOUNDARY
 ((
MODE
), (
TYPE
)Ë- 1)/
BITS_PER_WORD
)\

854 + 1)

	)

866 
	#PASS_IN_REG_P
(
CUM
, 
MODE
, 
TYPE
) \

867 ((
CUM
Ë< 
MAX_ARC_PARM_REGS
)

	)

874 
	#LIBCALL_VALUE
(
MODE
Ë
	`gí_πx_REG
 (MODE, 0)

	)

879 
	#FUNCTION_VALUE_REGNO_P
(
N
Ë((NË=0)

	)

882 
	#DEFAULT_PCC_STRUCT_RETURN
 0

	)

886 
	#STRUCT_VALUE
 0

	)

892 
	#EXIT_IGNORE_STACK
 0

	)

894 
	#EPILOGUE_USES
(
REGNO
Ë
	`¨c_ïûogue_u£s
 ((REGNO))

	)

909 
	#ELIMINABLE_REGS
 \

910 {{
ARG_POINTER_REGNUM
, 
STACK_POINTER_REGNUM
}, \

911 {
ARG_POINTER_REGNUM
, 
FRAME_POINTER_REGNUM
}, \

912 {
FRAME_POINTER_REGNUM
, 
STACK_POINTER_REGNUM
}}

	)

916 
¨c_öôül_ñimö©i⁄_off£t
(
‰om
, 
to
);

917 
	#INITIAL_ELIMINATION_OFFSET
(
FROM
, 
TO
, 
OFFSET
) \

918 (
OFFSET
Ë
	`¨c_öôül_ñimö©i⁄_off£t
 ((
FROM
), (
TO
))

	)

924 
	#FUNCTION_PROFILER
(
FILE
, 
LABELNO
)

	)

925 
	#NO_PROFILE_COUNTERS
 1

	)

930 
	#TRAMPOLINE_SIZE
 20

	)

936 
	#TRAMPOLINE_ALIGNMENT
 256

	)

944 
	#MAX_REGS_PER_ADDRESS
 1

	)

947 
	#HAVE_PRE_INCREMENT
 1

	)

948 
	#HAVE_PRE_DECREMENT
 1

	)

949 
	#HAVE_POST_INCREMENT
 1

	)

950 
	#HAVE_POST_DECREMENT
 1

	)

951 
	#HAVE_PRE_MODIFY_DISP
 1

	)

952 
	#HAVE_POST_MODIFY_DISP
 1

	)

953 
	#HAVE_PRE_MODIFY_REG
 1

	)

954 
	#HAVE_POST_MODIFY_REG
 1

	)

959 
	#CONSTANT_ADDRESS_P
(
X
) \

960 (
Êag_pic
?
	`¨c_Àgôim©e_pic_addr_p
 (
X
): \

961 (
	`GET_CODE
 (
X
Ë=
LABEL_REF
 || GET_CODE (XË=
SYMBOL_REF
 \

962 || 
	`GET_CODE
 (
X
Ë=
CONST_INT
 || GET_CODE (XË=
CONST
))

	)

965 
	#IS_POWEROF2_P
(
X
Ë(! ( (XË& ((XË- 1)Ë&& (X))

	)

981 
	#REG_OK_FOR_INDEX_P_NONSTRICT
(
X
) \

982 ((Ë
	`REGNO
 (
X
Ë>
FIRST_PSEUDO_REGISTER
 || \

983 (Ë
	`REGNO
 (
X
) < 29 || \

984 (Ë
	`REGNO
 (
X
) == 63 || \

985 (Ë
	`REGNO
 (
X
Ë=
ARG_POINTER_REGNUM
)

	)

988 
	#REG_OK_FOR_BASE_P_NONSTRICT
(
X
) \

989 ((Ë
	`REGNO
 (
X
Ë>
FIRST_PSEUDO_REGISTER
 || \

990 (Ë
	`REGNO
 (
X
) < 29 || \

991 (Ë
	`REGNO
 (
X
) == 63 || \

992 (Ë
	`REGNO
 (
X
Ë=
ARG_POINTER_REGNUM
)

	)

995 
	#REG_OK_FOR_INDEX_P_STRICT
(
X
Ë
	`REGNO_OK_FOR_INDEX_P
 (
	`REGNO
 (X))

	)

997 
	#REG_OK_FOR_BASE_P_STRICT
(
X
Ë
	`REGNO_OK_FOR_BASE_P
 (
	`REGNO
 (X))

	)

1008 
	#RTX_OK_FOR_BASE_P
(
X
, 
STRICT
) \

1009 (
	`REG_P
 (
X
) \

1010 && ((
STRICT
Ë? 
	`REG_OK_FOR_BASE_P_STRICT
 (
X
Ë: 
	`REG_OK_FOR_BASE_P_NONSTRICT
 (X)))

	)

1012 
	#RTX_OK_FOR_INDEX_P
(
X
, 
STRICT
) \

1013 (
	`REG_P
 (
X
) \

1014 && ((
STRICT
Ë? 
	`REG_OK_FOR_INDEX_P_STRICT
 (
X
Ë: 
	`REG_OK_FOR_INDEX_P_NONSTRICT
 (X)))

	)

1023 
	#LEGITIMIZE_RELOAD_ADDRESS
(
X
,
MODE
,
OPNUM
,
TYPE
,
IND_LEVELS
,
WIN
) \

1025 i‡(
	`GET_CODE
 (
X
Ë=
PLUS
 \

1026 && 
	`CONST_INT_P
 (
	`XEXP
 (
X
, 1)) \

1027 && (
	`RTX_OK_FOR_BASE_P
 (
	`XEXP
 (
X
, 0), 
åue
) \

1028 || (
	`REG_P
 (
	`XEXP
 (
X
, 0)) \

1029 && 
	`ªg_equiv_c⁄°™t
 (
	`REGNO
 (
	`XEXP
 (
X
, 0)))))) \

1031 
sˇÀ
 = 
	`GET_MODE_SIZE
 (
MODE
); \

1032 
shi·
; \

1033 
πx
 
ödex_πx
 = 
	`XEXP
 (
X
, 1); \

1034 
HOST_WIDE_INT
 
off£t
 = 
	`INTVAL
 (
ödex_πx
), 
off£t_ba£
; \

1035 
πx
 
ªg
, 
sum
, 
sum2
; \

1037 i‡(
sˇÀ
 > 4) \

1038 
sˇÀ
 = 4; \

1039 i‡((
sˇÀ
-1Ë& 
off£t
) \

1040 
sˇÀ
 = 1; \

1041 
shi·
 = 
sˇÀ
 >> 1; \

1042 
off£t_ba£
 = (
off£t
 + (256 << 
shi·
)) & (-512 << shift); \

1047 i‡(
	`GET_MODE_SIZE
 (
MODE
Ë+ 
off£t
 - 
off£t_ba£
 <(256 << 
shi·
))\

1049 
ªgno
; \

1051 
ªg
 = 
	`XEXP
 (
X
, 0); \

1052 
ªgno
 = 
	`REGNO
 (
ªg
); \

1053 
sum2
 = 
sum
 = 
	`∂us_c⁄°™t
 (
Pmode
, 
ªg
, 
off£t_ba£
); \

1055 i‡(
	`ªg_equiv_c⁄°™t
 (
ªgno
)) \

1057 
sum2
 = 
	`∂us_c⁄°™t
 (
Pmode
, 
	`ªg_equiv_c⁄°™t
 (
ªgno
), \

1058 
off£t_ba£
); \

1059 i‡(
	`GET_CODE
 (
sum2
Ë=
PLUS
) \

1060 
sum2
 = 
	`gí_πx_CONST
 (
Pmode
, sum2); \

1062 
X
 = 
	`gí_πx_PLUS
 (
Pmode
, 
sum
, 
	`GEN_INT
 (
off£t
 - 
off£t_ba£
));\

1063 
	`push_ªlﬂd
 (
sum2
, 
NULL_RTX
, &
	`XEXP
 (
X
, 0), 
NULL
, \

1064 
BASE_REG_CLASS
, 
Pmode
, 
VOIDmode
, 0, 0, (
OPNUM
), \

1065 (
TYPE
)); \

1066 
WIN
; \

1070 i‡(
	`GET_CODE
 (
X
Ë=
PLUS
 \

1071 && 
	`GET_CODE
 (
	`XEXP
 (
X
, 0)Ë=
PLUS
 \

1072 && 
	`CONST_INT_P
 (
	`XEXP
 (XEXP (
X
, 0), 1)) \

1073 && 
	`REG_P
 (
	`XEXP
 (XEXP (
X
, 0), 0)) \

1074 && 
	`CONST_INT_P
 (
	`XEXP
 (
X
, 1))) \

1079 
	`push_ªlﬂd
 (
	`XEXP
 ((
X
), 0), 
NULL_RTX
, &XEXP ((X), 0), 
NULL
, \

1080 
BASE_REG_CLASS
, 
Pmode
, 
VOIDmode
, 0, 0, (
OPNUM
), (
TYPE
));\

1081 
WIN
; \

1083 }

	)

1087 
	#DONT_REALLOC
(
REGNO
,
MODE
) \

1088 (
TARGET_ARC700
 && (
REGNO
Ë=60)

	)

1094 
	#SELECT_CC_MODE
(
OP
, 
X
, 
Y
) \

1095 
	`¨c_£À˘_cc_mode
 (
OP
, 
X
, 
Y
)

	)

1099 
	#REVERSIBLE_CC_MODE
(
MODE
Ë1

	)

1105 
	#REGISTER_MOVE_COST
(
MODE
, 
CLASS
, 
TO_CLASS
) \

1106 
	`¨c_ªgi°î_move_co°
 ((
MODE
), (
CLASS
), (
TO_CLASS
))

	)

1111 
	#MEMORY_MOVE_COST
(
MODE
,
CLASS
,
IN
) \

1112 (
	`GET_MODE_SIZE
 (
MODE
Ë<
UNITS_PER_WORD
 ? 6 : 12)

	)

1117 
	#BRANCH_COST
(
•ìd_p
, 
¥edi˘abÀ_p
Ë2

	)

1123 
	#SLOW_BYTE_ACCESS
 0

	)

1128 
	#NO_FUNCTION_CSE


	)

1133 
	#TEXT_SECTION_ASM_OP
 "\t.£˘i⁄\t.ãxt"

	)

1134 
	#DATA_SECTION_ASM_OP
 "\t.£˘i⁄\t.d©a"

	)

1136 
	#BSS_SECTION_ASM_OP
 "\t.£˘i⁄\t.bss"

	)

1137 
	#SDATA_SECTION_ASM_OP
 "\t.£˘i⁄\t.sd©a"

	)

1138 
	#SBSS_SECTION_ASM_OP
 "\t.£˘i⁄\t.sbss"

	)

1143 
	#INIT_SECTION_ASM_OP
 "\t.£˘i⁄\t.öô"

	)

1144 
	#FINI_SECTION_ASM_OP
 "\t.£˘i⁄\t.föi"

	)

1150 
	#JUMP_TABLES_IN_TEXT_SECTION
 (
Êag_pic
 || 
CASE_VECTOR_PC_RELATIVE
)

	)

1154 
	#PUSHSECTION_FORMAT
 "\t%†%s\n"

	)

1157 
	#OBJECT_FORMAT_ELF


	)

1168 
	#PIC_OFFSET_TABLE_REGNUM
 26

	)

1183 
	#LEGITIMATE_PIC_OPERAND_P
(
X
Ë(
	`¨c_Àgôim©e_pic_›î™d_p
(X))

	)

1191 
	#ASM_COMMENT_START
 "#"

	)

1195 
	#ASM_APP_ON
 ""

	)

1199 
	#ASM_APP_OFF
 ""

	)

1202 
	#GLOBAL_ASM_OP
 "\t.globÆ\t"

	)

1205 
	#ASM_OUTPUT_CHAR
(
FILE
, 
VALUE
) \

1206 –
	`Ârötf
 (
FILE
, "\t.byte\t"), \

1207 
	`ouçut_addr_c⁄°
 (
FILE
, (
VALUE
)), \

1208 
	`Ârötf
 (
FILE
, "\n"))

	)

1211 
	#ASM_OUTPUT_SHORT
(
FILE
, 
VALUE
) \

1212 –
	`Ârötf
 (
FILE
, "\t.hword\t"), \

1213 
	`ouçut_addr_c⁄°
 (
FILE
, (
VALUE
)), \

1214 
	`Ârötf
 (
FILE
, "\n"))

	)

1219 
	#ASM_OUTPUT_INT
(
FILE
, 
VALUE
) \

1221 
	`Ârötf
 (
FILE
, "\t.word\t"); \

1222 i‡(
	`GET_CODE
 (
VALUE
Ë=
LABEL_REF
) \

1224 
	`Ârötf
 (
FILE
, "%%st(@"); \

1225 
	`ouçut_addr_c⁄°
 (
FILE
, (
VALUE
)); \

1226 
	`Ârötf
 (
FILE
, ")"); \

1229 
	`ouçut_addr_c⁄°
 (
FILE
, (
VALUE
)); \

1230 
	`Ârötf
 (
FILE
, "\n"); \

1231 } 0)

	)

1234 
	#ASM_OUTPUT_FLOAT
(
FILE
, 
VALUE
) \

1236 
t
; \

1237 
°r
[30]; \

1238 
	`REAL_VALUE_TO_TARGET_SINGLE
 ((
VALUE
), 
t
); \

1239 
	`REAL_VALUE_TO_DECIMAL
 ((
VALUE
), "%.20e", 
°r
); \

1240 
	`Ârötf
 (
FILE
, "\t.word\t0x%lx %s %s\n", \

1241 
t
, 
ASM_COMMENT_START
, 
°r
); \

1242 }

	)

1245 
	#ASM_OUTPUT_DOUBLE
(
FILE
, 
VALUE
) \

1247 
t
[2]; \

1248 
°r
[30]; \

1249 
	`REAL_VALUE_TO_TARGET_DOUBLE
 ((
VALUE
), 
t
); \

1250 
	`REAL_VALUE_TO_DECIMAL
 ((
VALUE
), "%.20e", 
°r
); \

1251 
	`Ârötf
 (
FILE
, "\t.word\t0x%lx %s %s\n\t.word\t0x%lx\n", \

1252 
t
[0], 
ASM_COMMENT_START
, 
°r
,Å[1]); \

1253 }

	)

1257 
	#ASM_OUTPUT_LABEL
(
FILE
, 
NAME
) \

1258 dÿ{ 
	`as£mbÀ_«me
 (
FILE
, 
NAME
); 
	`Âuts
 (":\n", FILE); } 0)

	)

1260 
	#ASM_NAME_P
(
NAME
Ë–NAME[0]=='*')

	)

1267 
	#ASM_OUTPUT_LABELREF
(
FILE
, 
NAME1
) \

1269 c⁄° *
NAME
; \

1270 
NAME
 = (*
èrgëm
.
°rù_«me_ícodög
)(
NAME1
); \

1271 i‡((
NAME
)[0] == '.' && (NAME)[1] == 'L') \

1272 
	`Ârötf
 (
FILE
, "%s", 
NAME
); \

1275 i‡(!
	`ASM_NAME_P
 (
NAME1
)) \

1276 
	`Ârötf
 (
FILE
, "%s", 
u£r_œbñ_¥efix
); \

1277 
	`Ârötf
 (
FILE
, "%s", 
NAME
); \

1279 } 0)

	)

1284 
	#ASM_OUTPUT_SYMBOL_REF
(
FILE
,
SYM
) \

1285 
	`ASM_OUTPUT_LABEL_REF
 ((
FILE
), 
	`XSTR
 ((
SYM
), 0))

	)

1286 
	#ASM_OUTPUT_LABEL_REF
(
FILE
,
STR
) \

1289 
	`Âutc
 ('@', 
fûe
); \

1290 
	`as£mbÀ_«me
 ((
FILE
), (
STR
)); \

1292 0)

	)

1297 
	#ASM_FORMAT_PRIVATE_NAME
(
OUTPUT
, 
NAME
, 
LABELNO
) \

1298 –(
OUTPUT
Ë(*Ë
	`Æloˇ
 (
	`°æí
 ((
NAME
)) + 10), \

1299 
	`•rötf
 ((
OUTPUT
), "%s.%d", (
NAME
), (
LABELNO
)))

	)

1307 #unde‡
TYPE_OPERAND_FMT


1308 
	#TYPE_OPERAND_FMT
 "@%s"

	)

1314 #unde‡
SIZE_ASM_OP


1315 
	#SIZE_ASM_OP
 "\t.size\t"

	)

1321 #ifde‡
SET_ASM_OP


1322 #unde‡
SET_ASM_OP


1324 
	#SET_ASM_OP
 "\t.£t\t"

	)

1326 
∫ame29
[], 
∫ame30
[], 
∫ame56
[], 
∫ame57
[], 
∫ame58
[], 
∫ame59
[];

1329 
	#REGISTER_NAMES
 \

1333 "r24", "r25", "gp", "Â", "•", 
∫ame29
, 
∫ame30
, "blink", \

1337 
∫ame56
,
∫ame57
,
∫ame58
,
∫ame59
,"lp_count", "cc", "ap", "pcl", \

1349 }

	)

1352 
	#FINAL_PRESCAN_INSN
(
INSN
, 
OPVEC
, 
NOPERANDS
) \

1353 
	`¨c_föÆ_¥esˇn_ö¢
 (
INSN
, 
OPVEC
, 
NOPERANDS
)

	)

1357 
¨c_pun˘_ch¨s
[];

1358 
	#PRINT_OPERAND_PUNCT_VALID_P
(
CHAR
) \

1359 
¨c_pun˘_ch¨s
[(Ë(
CHAR
)]

	)

1364 
	#PRINT_OPERAND
(
FILE
, 
X
, 
CODE
) \

1365 
	`¨c_¥öt_›î™d
 (
FILE
, 
X
, 
CODE
)

	)

1375 
	#PRINT_OPERAND_ADDRESS
(
FILE
, 
ADDR
) \

1376 
	`¨c_¥öt_›î™d_addªss
 (
FILE
, 
ADDR
)

	)

1379 
	#ASM_OUTPUT_ADDR_VEC_ELT
(
FILE
, 
VALUE
) \

1381 
œbñ
[30]; \

1382 
	`ASM_GENERATE_INTERNAL_LABEL
 (
œbñ
, "L", 
VALUE
); \

1383 
	`Ârötf
 (
FILE
, "\t.word "); \

1384 
	`as£mbÀ_«me
 (
FILE
, 
œbñ
); \

1385 
	`Ârötf
(
FILE
, "\n"); \

1386 } 0)

	)

1389 
	#ASM_OUTPUT_ADDR_DIFF_ELT
(
FILE
, 
BODY
, 
VALUE
, 
REL
) \

1391 
œbñ
[30]; \

1392 
	`ASM_GENERATE_INTERNAL_LABEL
 (
œbñ
, "L", 
VALUE
); \

1393 
	`GET_MODE
 (
BODY
)) \

1395 
QImode
: 
	`Ârötf
 (
FILE
, "\t.byte "); ; \

1396 
HImode
: 
	`Ârötf
 (
FILE
, "\t.hword "); ; \

1397 
SImode
: 
	`Ârötf
 (
FILE
, "\t.word "); ; \

1398 : 
	`gcc_uƒóchabÀ
 (); \

1400 
	`as£mbÀ_«me
 (
FILE
, 
œbñ
); \

1401 
	`Ârötf
 (
FILE
, "-"); \

1402 
	`ASM_GENERATE_INTERNAL_LABEL
 (
œbñ
, "L", 
REL
); \

1403 
	`as£mbÀ_«me
 (
FILE
, 
œbñ
); \

1404 i‡(
TARGET_COMPACT_CASESI
) \

1405 
	`Ârötf
 (
FILE
, " + %d", 4 + 
	`¨c_gë_u«lign
 ()); \

1406 
	`Ârötf
(
FILE
, "\n"); \

1407 } 0)

	)

1411 
	#ASM_OUTPUT_CASE_END
(
FILE
, 
NUM
, 
JUMPTABLE
) \

1414 i‡(
	`GET_CODE
 (
	`PATTERN
 (
JUMPTABLE
)Ë=
ADDR_DIFF_VEC
 \

1415 && ((
	`GET_MODE_SIZE
 (
	`GET_MODE
 (
	`PATTERN
 (
JUMPTABLE
))) \

1416 * 
	`XVECLEN
 (
	`PATTERN
 (
JUMPTABLE
), 1) + 1) \

1418 
	`¨c_toggÀ_u«lign
 (); \

1420 0)

	)

1422 
	#JUMP_ALIGN
(
LABEL
Ë(
¨c_size_›t_Àvñ
 < 2 ? 2 : 0)

	)

1423 
	#LABEL_ALIGN_AFTER_BARRIER
(
LABEL
) \

1424 (
	`JUMP_ALIGN
(
LABEL
) \

1425 ? 
	`JUMP_ALIGN
(
LABEL
) \

1426 : 
	`GET_CODE
 (
	`PATTERN
 (
	`¥ev_a˘ive_ö¢
 (
LABEL
))Ë=
ADDR_DIFF_VEC
 \

1427 ? 1 : 0)

	)

1432 
	#LOOP_ALIGN
 
JUMP_ALIGN


	)

1434 
	#LABEL_ALIGN
(
LABEL
Ë(
	`¨c_œbñ_Æign
 (LABEL))

	)

1439 
	#ASM_OUTPUT_ALIGN
(
FILE
,
LOG
) \

1441 i‡((
LOG
Ë!0Ë
	`Ârötf
 (
FILE
, "\t.align %d\n", 1 << (LOG)); \

1442 i‡((
LOG
) > 1) \

1443 
	`¨c_˛ór_u«lign
 (); \

1444 } 0)

	)

1449 
	#ASM_OUTPUT_ALIGNED_DECL_LOCAL
(
STREAM
, 
DECL
, 
NAME
, 
SIZE
, 
ALIGNMENT
) \

1450 
	`¨c_asm_ouçut_Æig√d_de˛_loˇl
 (
STREAM
, 
DECL
, 
NAME
, 
SIZE
, 
ALIGNMENT
, 0)

	)

1454 
¨c_ªtu∫_addªss_ªgs
[4];

1459 #ifde‡
DBX_DEBUGGING_INFO


1460 #unde‡
DBX_DEBUGGING_INFO


1462 
	#DBX_DEBUGGING_INFO


	)

1464 #ifde‡
DWARF2_DEBUGGING_INFO


1465 #unde‡
DWARF2_DEBUGGING_INFO


1467 
	#DWARF2_DEBUGGING_INFO


	)

1470 #unde‡
PREFERRED_DEBUGGING_TYPE


1471 
	#PREFERRED_DEBUGGING_TYPE
 
DWARF2_DEBUG


	)

1474 
	#DBX_REGISTER_NUMBER
(
REGNO
) \

1475 ((
TARGET_MULMAC_32BY16_SET
 && (
REGNO
) >= 56 && (REGNO) <= 57) \

1476 ? ((
REGNO
Ë^ !
TARGET_BIG_ENDIAN
) \

1477 : (
TARGET_MUL64_SET
 && (
REGNO
) >= 57 && (REGNO) <= 59) \

1478 ? ((
REGNO
) == 57 \

1480 : ((
REGNO
Ë& 1Ë^ 
TARGET_BIG_ENDIAN
 \

1482 : 57 + !!
TARGET_MULMAC_32BY16_SET
) \

1483 : (
REGNO
))

	)

1485 
	#DWARF_FRAME_REGNUM
(
REG
Ë(REG)

	)

1487 
	#DWARF_FRAME_RETURN_COLUMN
 
	`DWARF_FRAME_REGNUM
 (31)

	)

1489 
	#INCOMING_RETURN_ADDR_RTX
 
	`gí_πx_REG
 (
Pmode
, 31)

	)

1495 
	#DWARF2_FRAME_INFO
 1

	)

1499 
	#DWARF2_UNWIND_INFO
 0

	)

1503 
	#DBX_CONTIN_LENGTH
 0

	)

1511 
	#CASE_VECTOR_MODE
 \

1512 ((
›timize
 && (
CASE_VECTOR_PC_RELATIVE
 || 
Êag_pic
)Ë? 
QImode
 : 
Pmode
)

	)

1518 
	#CASE_VECTOR_PC_RELATIVE
 
TARGET_CASE_VECTOR_PC_RELATIVE


	)

1520 
	#CASE_VECTOR_SHORTEN_MODE
(
MIN_OFFSET
, 
MAX_OFFSET
, 
BODY
) \

1521 
CASE_VECTOR_SHORTEN_MODE_1
 \

1522 (
MIN_OFFSET
, 
TARGET_COMPACT_CASESI
 ? 
MAX_OFFSET
 + 6 : MAX_OFFSET, 
BODY
)

	)

1524 
	#CASE_VECTOR_SHORTEN_MODE_1
(
MIN_OFFSET
, 
MAX_OFFSET
, 
BODY
) \

1525 ((
MIN_OFFSET
Ë>0 && (
MAX_OFFSET
) <= 255 \

1526 ? (
	`ADDR_DIFF_VEC_FLAGS
 (
BODY
).
off£t_unsig√d
 = 1, 
QImode
) \

1527 : (
MIN_OFFSET
Ë>-128 && (
MAX_OFFSET
) <= 127 \

1528 ? (
	`ADDR_DIFF_VEC_FLAGS
 (
BODY
).
off£t_unsig√d
 = 0, 
QImode
) \

1529 : (
MIN_OFFSET
Ë>0 && (
MAX_OFFSET
) <= 65535 \

1530 ? (
	`ADDR_DIFF_VEC_FLAGS
 (
BODY
).
off£t_unsig√d
 = 1, 
HImode
) \

1531 : (
MIN_OFFSET
Ë>-32768 && (
MAX_OFFSET
) <= 32767 \

1532 ? (
	`ADDR_DIFF_VEC_FLAGS
 (
BODY
).
off£t_unsig√d
 = 0, 
HImode
) \

1533 : 
SImode
)

	)

1535 
	#ADDR_VEC_ALIGN
(
VEC_INSN
) \

1536 (
	`exa˘_log2
 (
	`GET_MODE_SIZE
 (
	`GET_MODE
 (
	`PATTERN
 (
VEC_INSN
)))))

	)

1537 #unde‡
ASM_OUTPUT_BEFORE_CASE_LABEL


1538 
	#ASM_OUTPUT_BEFORE_CASE_LABEL
(
FILE
, 
PREFIX
, 
NUM
, 
TABLE
) \

1539 
	`ASM_OUTPUT_ALIGN
 ((
FILE
), 
	`ADDR_VEC_ALIGN
 (
TABLE
));

	)

1541 
	#INSN_LENGTH_ALIGNMENT
(
INSN
) \

1542 ((
	`JUMP_P
 (
INSN
) \

1543 && 
	`GET_CODE
 (
	`PATTERN
 (
INSN
)Ë=
ADDR_DIFF_VEC
 \

1544 && 
	`GET_MODE
 (
	`PATTERN
 (
INSN
)Ë=
QImode
) \

1545 ? 0 : 
Àngth_unô_log
)

	)

1549 
	#WORD_REGISTER_OPERATIONS


	)

1555 
	#LOAD_EXTEND_OP
(
MODE
Ë
ZERO_EXTEND


	)

1560 
	#MOVE_MAX
 4

	)

1563 
	#MOVE_BY_PIECES_P
(
LEN
, 
ALIGN
Ë0

	)

1564 
	#CAN_MOVE_BY_PIECES
(
SIZE
, 
ALIGN
) \

1565 (
	`move_by_põ˚s_nö¢s
 (
SIZE
, 
ALIGN
, 
MOVE_MAX_PIECES
 + 1) \

1566 < (Ë
	`MOVE_RATIO
 (!
›timize_size
))

	)

1569 
	#MOVE_RATIO
(
SPEED
Ë((SPEEDË? 15 : 3)

	)

1577 
	#SHIFT_COUNT_TRUNCATED
 0

	)

1581 
	#TRULY_NOOP_TRUNCATION
(
OUTPREC
, 
INPREC
Ë1

	)

1585 
	#STORE_FLAG_VALUE
 1

	)

1591 
	#Pmode
 
SImode


	)

1594 
	#FUNCTION_MODE
 
SImode


	)

1599 
πx_def
 *
¨c_com∑ª_›0
, *
¨c_com∑ª_›1
;

1602 
	e¨c_fun˘i⁄_ty≥
 {

1603 
	mARC_FUNCTION_UNKNOWN
, 
	mARC_FUNCTION_NORMAL
,

1606 
	mARC_FUNCTION_ILINK1
, 
	mARC_FUNCTION_ILINK2


1608 
	#ARC_INTERRUPT_P
(
TYPE
) \

1609 ((
TYPE
Ë=
ARC_FUNCTION_ILINK1
 || (TYPEË=
ARC_FUNCTION_ILINK2
)

	)

1612 
	gfun˘i⁄
;

1613 
¨c_fun˘i⁄_ty≥
 
¨c_compuã_fun˘i⁄_ty≥
 (
fun˘i⁄
 *);

1617 #unde‡
CRT_CALL_STATIC_FUNCTION


1618 
	#CRT_CALL_STATIC_FUNCTION
(
SECTION_OP
, 
FUNC
) \

1619 
	`asm
 (
SECTION_OP
 "\n\t" \

1620 "b»@" 
USER_LABEL_PREFIX
 #FUNC "\n" \

1621 
TEXT_SECTION_ASM_OP
);

	)

1625 
	#ARC_TEMP_SCRATCH_REG
 "r12"

	)

1637 
	#TARGET_PTRMEMFUNC_VBIT_LOCATION
 \

1638 (
±rmemfunc_vbô_ö_p‚
)

	)

1640 
	#INSN_SETS_ARE_DELAYED
(
X
) \

1641 (
	`GET_CODE
 (
X
Ë=
INSN
 \

1642 && 
	`GET_CODE
 (
	`PATTERN
 (
X
)Ë!
SEQUENCE
 \

1643 && 
	`GET_CODE
 (
	`PATTERN
 (
X
)Ë!
USE
 \

1644 && 
	`GET_CODE
 (
	`PATTERN
 (
X
)Ë!
CLOBBER
 \

1645 && (
	`gë_©å_ty≥
 (
X
Ë=
TYPE_CALL
 || gë_©å_ty≥ (XË=
TYPE_SFUNC
))

	)

1647 
	#INSN_REFERENCES_ARE_DELAYED
(
ö¢
Ë
	`INSN_SETS_ARE_DELAYED
 (ö¢)

	)

1649 
	#CALL_ATTR
(
X
, 
NAME
) \

1650 ((
	`CALL_P
 (
X
Ë|| 
	`NONJUMP_INSN_P
 (X)) \

1651 && 
	`GET_CODE
 (
	`PATTERN
 (
X
)Ë!
USE
 \

1652 && 
	`GET_CODE
 (
	`PATTERN
 (
X
)Ë!
CLOBBER
 \

1653 && 
gë_©å_is_
##
	`NAME
 (
X
Ë=
IS_
##
NAME
##
_YES
) \

1654 

	)

1655 
	#REVERSE_CONDITION
(
CODE
,
MODE
) \

1656 (((
MODE
Ë=
CC_FP_GTmode
 || (MODEË=
CC_FP_GEmode
 \

1657 || (
MODE
Ë=
CC_FP_UNEQmode
 || (MODEË=
CC_FP_ORDmode
 \

1658 || (
MODE
Ë=
CC_FPXmode
) \

1659 ? 
	`ªvî£_c⁄dôi⁄_maybe_un‹dîed
 ((
CODE
)) \

1660 : 
	`ªvî£_c⁄dôi⁄
 ((
CODE
)))

	)

1662 
	#ADJUST_INSN_LENGTH
(
X
, 
LENGTH
) \

1663 ((
LENGTH
) \

1664 (
	`GET_CODE
 (
	`PATTERN
 (
X
)Ë=
SEQUENCE
 \

1665 ? ((
LENGTH
) \

1666 + 
	`¨c_adju°_ö¢_Àngth
 (
	`XVECEXP
 (
	`PATTERN
 (
X
), 0, 0), \

1667 
	`gë_©å_Àngth
 (
	`XVECEXP
 (
	`PATTERN
 (
X
), \

1669 
åue
) \

1670 - 
	`gë_©å_Àngth
 (
	`XVECEXP
 (
	`PATTERN
 (
X
), 0, 0)) \

1671 + 
	`¨c_adju°_ö¢_Àngth
 (
	`XVECEXP
 (
	`PATTERN
 (
X
), 0, 1), \

1672 
	`gë_©å_Àngth
 (
	`XVECEXP
 (
	`PATTERN
 (
X
), \

1674 
åue
) \

1675 - 
	`gë_©å_Àngth
 (
	`XVECEXP
 (
	`PATTERN
 (
X
), 0, 1))) \

1676 : 
	`¨c_adju°_ö¢_Àngth
 ((
X
), (
LENGTH
), 
Ál£
)))

	)

1678 
	#IS_ASM_LOGICAL_LINE_SEPARATOR
(
C
,
STR
Ë((CË='`')

	)

1680 
	#INIT_EXPANDERS
 
	`¨c_öô_ex∑ndîs
 ()

	)

1682 
	#CFA_FRAME_BASE_OFFSET
(
FUNDECL
Ë(-
	`¨c_de˛_¥ëíd_¨gs
 ((FUNDECL)))

	)

1684 
	#ARG_POINTER_CFA_OFFSET
(
FNDECL
) \

1685 (
	`FIRST_PARM_OFFSET
 (
FNDECL
Ë+ 
	`¨c_de˛_¥ëíd_¨gs
 ((FNDECL)))

	)

1689 
	mARC_LRA_PRIORITY_NONE
, 
	mARC_LRA_PRIORITY_NONCOMPACT
, 
	mARC_LRA_PRIORITY_COMPACT


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 #ifde‡
__USE_XOPEN2K8


296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

387 #ifde‡
__USE_XOPEN2K8


394 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

395 
_G_va_li°
 
__¨g
)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

397 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

398 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

402 
__BEGIN_NAMESPACE_STD


407 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

415 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

416 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

418 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

419 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

420 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

421 #ifde‡
__REDIRECT


425 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_fsˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

429 
__isoc99_sˇnf
Ë
__wur
;

430 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

432 
__isoc99_ssˇnf
Ë
__THROW
;

434 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 
	#fsˇnf
 
__isoc99_fsˇnf


	)

440 
	#sˇnf
 
__isoc99_sˇnf


	)

441 
	#ssˇnf
 
__isoc99_ssˇnf


	)

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_ISOC99


448 
__BEGIN_NAMESPACE_C99


453 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

454 
_G_va_li°
 
__¨g
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

461 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

466 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

467 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

469 #i‡!
deföed
 
__USE_GNU
 \

470 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

471 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

472 #ifde‡
__REDIRECT


476 
	`__REDIRECT
 (
vfsˇnf
,

477 (
FILE
 *
__ª°ri˘
 
__s
,

478 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

479 
__isoc99_vfsˇnf
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

482 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vssˇnf
,

485 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

487 
__isoc99_vssˇnf
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

491 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

494 
_G_va_li°
 
__¨g
Ë
__wur
;

495 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

496 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

497 
_G_va_li°
 
__¨g
Ë
__THROW
;

498 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

499 
	#vsˇnf
 
__isoc99_vsˇnf


	)

500 
	#vssˇnf
 
__isoc99_vssˇnf


	)

504 
__END_NAMESPACE_C99


508 
__BEGIN_NAMESPACE_STD


513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

521 
__END_NAMESPACE_STD


525 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

527 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


532 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

533 
	`gëch¨_u∆ocked
 ();

536 #ifde‡
__USE_MISC


543 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

547 
__BEGIN_NAMESPACE_STD


555 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

562 
	`putch¨
 (
__c
);

563 
__END_NAMESPACE_STD


567 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

569 #ifde‡
__USE_MISC


576 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

579 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


584 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

585 
	`putch¨_u∆ocked
 (
__c
);

589 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

590 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

592 
	`gëw
 (
FILE
 *
__°ªam
);

595 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

599 
__BEGIN_NAMESPACE_STD


604 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

605 
__wur
;

612 *
	$gës
 (*
__s
Ë
__wur
;

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_GNU


622 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

627 #ifdef 
__USE_XOPEN2K8


638 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

639 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

640 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

641 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

642 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

652 
size_t
 *
__ª°ri˘
 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
__BEGIN_NAMESPACE_STD


662 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

668 
	`puts
 (
__c⁄°
 *
__s
);

675 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

682 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

683 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

688 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

689 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

690 
__END_NAMESPACE_STD


692 #ifde‡
__USE_GNU


699 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

700 
FILE
 *
__ª°ri˘
 
__°ªam
);

703 #ifde‡
__USE_MISC


710 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

717 
__BEGIN_NAMESPACE_STD


722 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

727 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

732 
	`ªwöd
 (
FILE
 *
__°ªam
);

733 
__END_NAMESPACE_STD


740 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


741 #i‚de‡
__USE_FILE_OFFSET64


746 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

751 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

753 #ifde‡
__REDIRECT


754 
	`__REDIRECT
 (
f£eko
,

755 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

756 
f£eko64
);

757 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

759 
	#f£eko
 
f£eko64


	)

760 
	#·ñlo
 
·ñlo64


	)

765 
__BEGIN_NAMESPACE_STD


766 #i‚de‡
__USE_FILE_OFFSET64


771 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

776 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

778 #ifde‡
__REDIRECT


779 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

780 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

781 
	`__REDIRECT
 (
f£ços
,

782 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

784 
	#fgëpos
 
fgëpos64


	)

785 
	#f£ços
 
f£ços64


	)

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_LARGEFILE64


791 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

792 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

793 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

794 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

797 
__BEGIN_NAMESPACE_STD


799 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

801 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

803 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_MISC


808 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

809 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

814 
__BEGIN_NAMESPACE_STD


819 
	`≥º‹
 (
__c⁄°
 *
__s
);

820 
__END_NAMESPACE_STD


826 
	~<bôs/sys_îæi°.h
>

829 #ifdef 
__USE_POSIX


831 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 #ifde‡
__USE_MISC


836 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

841 
deföed
 
__USE_MISC
)

846 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

852 
	`p˛o£
 (
FILE
 *
__°ªam
);

856 #ifdef 
__USE_POSIX


858 *
	$˘îmid
 (*
__s
Ë
__THROW
;

862 #ifde‡
__USE_XOPEN


864 *
	`cu£rid
 (*
__s
);

868 #ifdef 
__USE_GNU


869 
ob°ack
;

872 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

873 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

875 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

876 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

877 
_G_va_li°
 
__¨gs
)

878 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

882 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


886 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

890 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

893 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

896 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


900 
	#__√ed_gë›t


	)

901 
	~<gë›t.h
>

906 #ifde‡
__USE_EXTERN_INLINES


907 
	~<bôs/°dio.h
>

909 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


910 
	~<bôs/°dio2.h
>

912 #ifde‡
__LDBL_COMPAT


913 
	~<bôs/°dio-ldbl.h
>

916 
__END_DECLS


	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 11

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

55 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

56 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

61 #i‚de‡
_WINT_T


66 
	#_WINT_T


	)

67 
	twöt_t
;

71 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

72 && 
deföed
 
__WINT_TYPE__


73 
__BEGIN_NAMESPACE_STD


74 
__WINT_TYPE__
 
	twöt_t
;

75 
	g__END_NAMESPACE_STD


80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

20 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

21 
	#__OPTION_EGLIBC_ENVZ
 1

	)

22 
	#__OPTION_EGLIBC_FCVT
 1

	)

23 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

24 
	#__OPTION_EGLIBC_FSTAB
 1

	)

25 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

26 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

27 
	#__OPTION_EGLIBC_INET
 1

	)

28 
	#__OPTION_EGLIBC_LIBM
 1

	)

29 
	#__OPTION_EGLIBC_LOCALES
 1

	)

30 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

31 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

32 
	#__OPTION_EGLIBC_NIS
 1

	)

33 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

34 
	#__OPTION_EGLIBC_RCMD
 1

	)

35 
	#__OPTION_EGLIBC_SPAWN
 1

	)

36 
	#__OPTION_EGLIBC_STREAMS
 1

	)

37 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

38 
	#__OPTION_EGLIBC_UTMP
 1

	)

39 
	#__OPTION_EGLIBC_UTMPX
 1

	)

40 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

41 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

42 
	#__OPTION_POSIX_REGEXP
 1

	)

43 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

44 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_XOPEN2K


70 
	mPTHREAD_MUTEX_STALLED
,

71 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_ROBUST
,

73 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


78 #ifde‡
__USE_UNIX98


82 
	mPTHREAD_PRIO_NONE
,

83 
	mPTHREAD_PRIO_INHERIT
,

84 
	mPTHREAD_PRIO_PROTECT


90 #i‡
__WORDSIZE
 == 64

91 
	#PTHREAD_MUTEX_INITIALIZER
 \

92 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

93 #ifde‡
__USE_GNU


94 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

102 
	#PTHREAD_MUTEX_INITIALIZER
 \

103 { { 0, 0, 0, 0, 0, { 0 } } }

	)

104 #ifde‡
__USE_GNU


105 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

109 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

110 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


119 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

121 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

122 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

128 #ifde‡
__USE_GNU


129 #i‡
__WORDSIZE
 == 64

130 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

132 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

134 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

137 0, 0, 0, 0 } }

	)

139 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

141 0 } }

	)

151 
	mPTHREAD_INHERIT_SCHED
,

152 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

153 
	mPTHREAD_EXPLICIT_SCHED


154 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

161 
	mPTHREAD_SCOPE_SYSTEM
,

162 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

163 
	mPTHREAD_SCOPE_PROCESS


164 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

171 
	mPTHREAD_PROCESS_PRIVATE
,

172 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

173 
	mPTHREAD_PROCESS_SHARED


174 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

180 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

184 
	s_±hªad_˛ónup_buf„r


186 (*
	m__routöe
) (*);

187 *
	m__¨g
;

188 
	m__ˇn˚…y≥
;

189 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

195 
	mPTHREAD_CANCEL_ENABLE
,

196 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

197 
	mPTHREAD_CANCEL_DISABLE


198 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

202 
	mPTHREAD_CANCEL_DEFERRED
,

203 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

204 
	mPTHREAD_CANCEL_ASYNCHRONOUS


205 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

207 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

211 
	#PTHREAD_ONCE_INIT
 0

	)

214 #ifde‡
__USE_XOPEN2K


218 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

222 
__BEGIN_DECLS


227 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

228 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

229 *(*
__°¨t_routöe
) (*),

230 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

236 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

244 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

246 #ifde‡
__USE_GNU


249 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

257 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

258 
__c⁄°
 
time•ec
 *
__ab°ime
);

265 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

269 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

280 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

288 *
__dëach°©e
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

292 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

293 
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

299 
size_t
 *
__gu¨dsize
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

303 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

304 
size_t
 
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1));

309 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
,

311 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

315 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


317 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


321 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1));

329 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


330 
__©å
, *
__ª°ri˘
 
__öhîô
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

335 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

341 *
__ª°ri˘
 
__sc›e
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

345 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

357 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

358 *
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


363 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

370 
size_t
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1));

373 #ifde‡
__USE_XOPEN2K


375 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

376 **
__ª°ri˘
 
__°ackaddr
,

377 
size_t
 *
__ª°ri˘
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

383 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

384 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__USE_GNU


390 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

391 
size_t
 
__˝u£tsize
,

392 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

397 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

406 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

407 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

416 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((3));

420 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

421 *
__ª°ri˘
 
__pﬁicy
,

422 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

426 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

427 
__THROW
;

430 #ifde‡
__USE_UNIX98


432 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

435 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

438 #ifde‡
__USE_GNU


443 
	$±hªad_yõld
 (Ë
__THROW
;

448 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

449 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

450 
__THROW
 
	`__n⁄nuŒ
 ((3));

453 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

454 
˝u_£t_t
 *
__˝u£t
)

455 
__THROW
 
	`__n⁄nuŒ
 ((3));

468 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

469 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

480 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

484 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

487 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

492 
	`±hªad_ã°ˇn˚l
 ();

501 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

502 
__mask_was_ßved
;

503 } 
__ˇn˚l_jmp_buf
[1];

504 *
__∑d
[4];

505 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

508 #i‚de‡
__˛ónup_f˘_©åibuã


509 
	#__˛ónup_f˘_©åibuã


	)

514 
	s__±hªad_˛ónup_‰ame


516 (*
__ˇn˚l_routöe
) (*);

517 *
__ˇn˚l_¨g
;

518 
__do_ô
;

519 
__ˇn˚l_ty≥
;

522 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


523 #ifde‡
__˝lu•lus


525 ˛as†
	c__±hªad_˛ónup_˛ass


527 (*
__ˇn˚l_routöe
) (*);

528 *
__ˇn˚l_¨g
;

529 
__do_ô
;

530 
__ˇn˚l_ty≥
;

532 
public
:

533 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

534 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

535 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

536 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

537 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

538 &
__ˇn˚l_ty≥
); 
	}
}

539 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

549 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

551 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

555 
	#±hªad_˛ónup_p›
(
execuã
) \

556 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

557 } 0)

	)

559 #ifde‡
__USE_GNU


563 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

565 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

566 
__˛‰ame
.
	`__de„r
 ()

	)

571 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

572 
__˛‰ame
.
	`__ª°‹e
 (); \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

581 
__exã∫_ölöe
 

582 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

584 i‡(
__‰ame
->
__do_ô
)

585 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

586 
	}
}

595 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

597 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

598 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

599 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

600 .
__do_ô
 = 1 };

	)

604 
	#±hªad_˛ónup_p›
(
execuã
) \

605 
__˛‰ame
.
__do_ô
 = (
execuã
); \

606 } 0)

	)

608 #ifde‡
__USE_GNU


612 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 }; \

618 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

619 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

624 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

625 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

626 
__˛‰ame
.
__do_ô
 = (
execuã
); \

627 } 0)

	)

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

641 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

642 *
__ˇn˚l_¨g
 = (
¨g
); \

643 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

644 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

645 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

647 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

648 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

652 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

653 dÿ{

	)

654 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

655 
__˛ónup_f˘_©åibuã
;

659 
	#±hªad_˛ónup_p›
(
execuã
) \

662 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 i‡(
execuã
) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 } 0)

	)

666 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

667 
__˛ónup_f˘_©åibuã
;

669 #ifde‡
__USE_GNU


673 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

675 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

676 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

677 *
__ˇn˚l_¨g
 = (
¨g
); \

678 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

679 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

680 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

682 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

683 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

688 dÿ{

	)

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

690 
__˛ónup_f˘_©åibuã
;

695 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

698 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

699 i‡(
execuã
) \

700 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

701 
	}
} 0)

	)

702 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
;

707 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

708 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

709 #i‚de‡
SHARED


710 
	`__©åibuã__
 ((
__wók__
))

716 
__jmp_buf_èg
;

717 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

723 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

724 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

736 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

737 
__THROW
 
	`__n⁄nuŒ
 ((1));

739 #ifde‡
__USE_XOPEN2K


741 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

742 
__c⁄°
 
time•ec
 *
__ª°ri˘


743 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

747 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1));

751 #ifde‡
__USE_UNIX98


753 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

754 
__ª°ri˘
 
__muãx
,

755 *
__ª°ri˘
 
__¥io˚ûög
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

760 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

761 
__¥io˚ûög
,

762 *
__ª°ri˘
 
__ﬁd_˚ûög
)

763 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

767 #ifde‡
__USE_XOPEN2K8


769 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1));

771 #ifde‡
__USE_GNU


772 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

773 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

791 
__ª°ri˘
 
__©å
,

792 *
__ª°ri˘
 
__psh¨ed
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

797 
__psh¨ed
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 #ifde‡
__USE_UNIX98


802 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


803 
__©å
, *
__ª°ri˘
 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

809 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__¥Ÿocﬁ
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__¥io˚ûög
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__¥io˚ûög
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

836 #ifde‡
__USE_XOPEN2K


838 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

839 *
__robu°√ss
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

841 #ifde‡
__USE_GNU


842 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

843 *
__robu°√ss
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

849 
__robu°√ss
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_GNU


852 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

853 
__robu°√ss
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


864 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


866 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 #ifde‡
__USE_XOPEN2K


882 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 
__c⁄°
 
time•ec
 *
__ª°ri˘


884 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 
__c⁄°
 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1));

914 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__psh¨ed
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

925 
__psh¨ed
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

930 
__ª°ri˘
 
__©å
,

931 *
__ª°ri˘
 
__¥ef
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

935 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

936 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

945 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


946 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

954 
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

967 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

977 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

978 
__c⁄°
 
time•ec
 *
__ª°ri˘


979 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

984 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

993 
__ª°ri˘
 
__©å
,

994 *
__ª°ri˘
 
__psh¨ed
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

998 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

999 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1001 #ifde‡
__USE_XOPEN2K


1003 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1004 
__ª°ri˘
 
__©å
,

1005 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1009 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1010 
__˛ockid_t
 
__˛ock_id
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1015 #ifde‡
__USE_XOPEN2K


1020 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1045 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1046 
__©å
, 
__cou¡
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1064 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1068 
__ª°ri˘
 
__©å
,

1069 *
__ª°ri˘
 
__psh¨ed
)

1070 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1073 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1074 
__psh¨ed
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1088 (*
__de°r_fun˘i⁄
) (*))

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1095 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1098 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1099 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1102 #ifde‡
__USE_XOPEN2K


1104 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1105 
__˛ockid_t
 *
__˛ock_id
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((2));

1121 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1122 (*
__∑ª¡
) (),

1123 (*
__chûd
Ë()Ë
__THROW
;

1126 #ifde‡
__USE_EXTERN_INLINES


1128 
__exã∫_ölöe
 

1129 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1131  
__thªad1
 =
__thªad2
;

1132 
	}
}

1135 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<°ddef.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #ifde‡
__USE_XOPEN


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

144 |
	`__CPUMASK
 (
__˝u
)) \

145 : 0; }))

	)

146 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 &~
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

159 : 0; }))

	)

161 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

162 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

164 #i‡
__GNUC_PREREQ
 (2, 91)

165 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

166 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
__exãnsi⁄__
 \

170 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

171 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

172 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

173 
size_t
 
__i
; \

174 
__i
 = 0; __ò< 
__imax
; ++__i) \

175 i‡(
__bôs
[
__i
] != __bits[__i]) \

177 
__i
 =
__imax
; }))

	)

180 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

181 (
__exãnsi⁄__
 \

182 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

183 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

184 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

185 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

186 
size_t
 
__i
; \

187 
__i
 = 0; __ò< 
__imax
; ++__i) \

188 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

189 
__de°
; }))

	)

191 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

192 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

193 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

194 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

196 
__BEGIN_DECLS


198 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

199 
__THROW
;

200 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

201 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
60
1517
arc-opts.h
arc-protos.h
arc-simd.h
arc.c
arc.h
/usr/include/stdio.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/_G_config.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/predefs.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/bits/libc-lock.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/xlocale.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/errno.h
/usr/include/gnu/option-groups.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/errno.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/time.h
/usr/include/bits/sched.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/time.h
/usr/include/linux/errno.h
/usr/include/sys/ucontext.h
/usr/include/asm/errno.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/errno-base.h
